{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"\u4ecb\u7ecd \ud83d\udca8 \u6b64\u9879\u76ee\u81f4\u529b\u4e8e\u5e2e\u52a9\u5927\u5bb6\u66f4\u597d\u7684\u7406\u89e3\u548c\u5feb\u901f\u4e0a\u624b Jetpack Compose \u6846\u67b6\uff0c\u4ece\u800c\u63d0\u9ad8\u5f00\u53d1\u6548\u7387 \u9879\u76ee\u4f1a\u5305\u542b\u5f88\u591a\u5173\u4e8e Jetpack Compose \u7684 \u6559\u7a0b/ \u57fa\u672c\u4f7f\u7528\u65b9\u6cd5 / \u7ecf\u5386\u7684\u5751 \u672a\u6765\u53ef\u80fd\u4f1a\u6dfb\u52a0\u4e00\u4e9b\u6837\u4f8b app\uff08\u5f00\u53d1\u4e2d\uff09 1. Jetpack Composes \u662f\u4ec0\u4e48 \uff1f Jetpack Compose \u662f\u7528\u4e8e\u6784\u5efa\u539f\u751f\u754c\u9762\u7684\u6700\u65b0\u7684 Android \u5de5\u5177\u5305\uff0c\u91c7\u7528\u58f0\u660e\u5f0f UI \u7684\u8bbe\u8ba1\uff0c\u62e5\u6709\u66f4\u7b80\u5355\u7684\u81ea\u5b9a\u4e49\u548c\u5b9e\u65f6\u7684\u4ea4\u4e92\u9884\u89c8\u529f\u80fd\uff0c\u7531 Android \u5b98\u65b9\u56e2\u961f\u5168\u65b0\u6253\u9020\u7684 UI \u6846\u67b6","title":"\u6982\u8ff0"},{"location":"#_1","text":"\u6b64\u9879\u76ee\u81f4\u529b\u4e8e\u5e2e\u52a9\u5927\u5bb6\u66f4\u597d\u7684\u7406\u89e3\u548c\u5feb\u901f\u4e0a\u624b Jetpack Compose \u6846\u67b6\uff0c\u4ece\u800c\u63d0\u9ad8\u5f00\u53d1\u6548\u7387 \u9879\u76ee\u4f1a\u5305\u542b\u5f88\u591a\u5173\u4e8e Jetpack Compose \u7684 \u6559\u7a0b/ \u57fa\u672c\u4f7f\u7528\u65b9\u6cd5 / \u7ecf\u5386\u7684\u5751 \u672a\u6765\u53ef\u80fd\u4f1a\u6dfb\u52a0\u4e00\u4e9b\u6837\u4f8b app\uff08\u5f00\u53d1\u4e2d\uff09","title":"\u4ecb\u7ecd \ud83d\udca8"},{"location":"#1-jetpack-composes","text":"Jetpack Compose \u662f\u7528\u4e8e\u6784\u5efa\u539f\u751f\u754c\u9762\u7684\u6700\u65b0\u7684 Android \u5de5\u5177\u5305\uff0c\u91c7\u7528\u58f0\u660e\u5f0f UI \u7684\u8bbe\u8ba1\uff0c\u62e5\u6709\u66f4\u7b80\u5355\u7684\u81ea\u5b9a\u4e49\u548c\u5b9e\u65f6\u7684\u4ea4\u4e92\u9884\u89c8\u529f\u80fd\uff0c\u7531 Android \u5b98\u65b9\u56e2\u961f\u5168\u65b0\u6253\u9020\u7684 UI \u6846\u67b6","title":"1. Jetpack Composes \u662f\u4ec0\u4e48 \uff1f"},{"location":"codelabs/","text":"Codelabs \u4e3b\u8981\u662f\u5e2e\u52a9\u5927\u5bb6\u80fd\u591f\u5b9e\u73b0\u4e00\u4e9b\u7b80\u5355/\u6709\u7528/\u597d\u73a9\u7684\u4e1c\u897f \u6b22\u8fce\u5927\u5bb6\u7ed9\u81ea\u5df1\u7684 APP \u5199\u4e0a\u6b65\u9aa4\u5e76\u4e0a\u4f20\u5230\u8fd9\u91cc\uff01 Codelabs \u4e3b\u9875 \u5b9e\u9a8c\u5ba4 \u4ecb\u7ecd \u8bd7\u53e5\u5361\u7247 \u5b9e\u73b0\u7b80\u5355\u7684\u7ed3\u6784\u5e03\u5c40 \u5173\u4e8e\u5982\u4f55\u8d21\u732e Codelabs \u6216\u8005\u4fee\u6539\u9519\u8bef Fork Codelabs \u7684\u9879\u76ee \u4f60\u9700\u8981\u51c6\u5907\u4ee5\u4e0b\u7684\u73af\u5883 Go Node.js \u548c npm Claat \uff0c\u63a8\u8350\u7528 go \u547d\u4ee4\u6765\u5b89\u88c5 \u63a5\u4e0b\u6765 \u5728\u9879\u76ee\u6839\u76ee\u5f55\u8fd0\u884c npm install \u8fd0\u884c gulp serve --codelabs-dir=codelabs \u5728 http://localhost:8000/ \u4e2d\u67e5\u770b\u7f51\u9875 \u4fee\u6539 \u8fdb\u5165 codelabs \u6587\u4ef6\u5939\u4e0b\uff0c\u53ef\u4ee5\u770b\u5230\u6709\u8bb8\u591a\u6587\u4ef6\u5939\u548c .md \u6587\u4ef6 \u4fee\u6539\u5bf9\u5e94\u7684 .md \u6587\u4ef6 \u6267\u884c claat export xxxx.md \uff0c\u6210\u529f\u7684\u8bdd\u4f1a\u770b\u5230 ok ----- \u5e76\u4e14\u751f\u6210\u4e00\u4e2a\u6587\u4ef6\u5939(\u5982\u679c\u5df2\u6709\u7684\u8bdd\u4f1a\u8986\u76d6) \u5237\u65b0 http://localhost:8000/ \u6ce8\u610f \u5982\u679c\u662f windows \u7cfb\u7edf\uff0c\u8bf7\u52a1\u5fc5\u4f7f\u7528 Unix LF \u884c\u5c3e\u6765\u4fdd\u5b58\u6587\u4ef6\uff0c\u5426\u5219\u5728\u7f51\u9875\u4e0a\u4f1a\u6709\u5f88\u591a\u9519\u8bef \u6bcf\u6b21\u66f4\u65b0\u4e86 .md \u9700\u8981\u624b\u52a8\u8f93\u5165 claat export xxxx.md \u6587\u4ef6\uff0c\u76ee\u524d claat \u4f3c\u4e4e\u8fd8\u4e0d\u652f\u6301\u70ed\u66f4\u65b0 TAT \u63d0\u4ea4\u66f4\u6539 pr \u5230 -> gh-pages \u5206\u652f \u63d0\u4ea4 issue \u5982\u679c\u89c9\u5f97\u81ea\u5df1\u4fee\u6539\u6709\u70b9\u9ebb\u70e6\u7684\u8bdd\uff0c\u4e5f\u53ef\u4ee5\u5230 \u8fd9\u91cc \u63d0\u4ea4 issue \uff0c\u5c3d\u91cf\u63d0\u4f9b\u662f\u54ea\u4e9b\u9875\u9762/\u4ee3\u7801\u6709\u9519\u8bef","title":"\u4ee3\u7801\u5b9e\u9a8c\u5ba4"},{"location":"codelabs/#codelabs","text":"Fork Codelabs \u7684\u9879\u76ee","title":"\u5173\u4e8e\u5982\u4f55\u8d21\u732e Codelabs \u6216\u8005\u4fee\u6539\u9519\u8bef"},{"location":"codelabs/#_1","text":"Go Node.js \u548c npm Claat \uff0c\u63a8\u8350\u7528 go \u547d\u4ee4\u6765\u5b89\u88c5","title":"\u4f60\u9700\u8981\u51c6\u5907\u4ee5\u4e0b\u7684\u73af\u5883"},{"location":"codelabs/#_2","text":"\u5728\u9879\u76ee\u6839\u76ee\u5f55\u8fd0\u884c npm install \u8fd0\u884c gulp serve --codelabs-dir=codelabs \u5728 http://localhost:8000/ \u4e2d\u67e5\u770b\u7f51\u9875","title":"\u63a5\u4e0b\u6765"},{"location":"codelabs/#_3","text":"\u8fdb\u5165 codelabs \u6587\u4ef6\u5939\u4e0b\uff0c\u53ef\u4ee5\u770b\u5230\u6709\u8bb8\u591a\u6587\u4ef6\u5939\u548c .md \u6587\u4ef6 \u4fee\u6539\u5bf9\u5e94\u7684 .md \u6587\u4ef6 \u6267\u884c claat export xxxx.md \uff0c\u6210\u529f\u7684\u8bdd\u4f1a\u770b\u5230 ok ----- \u5e76\u4e14\u751f\u6210\u4e00\u4e2a\u6587\u4ef6\u5939(\u5982\u679c\u5df2\u6709\u7684\u8bdd\u4f1a\u8986\u76d6) \u5237\u65b0 http://localhost:8000/ \u6ce8\u610f \u5982\u679c\u662f windows \u7cfb\u7edf\uff0c\u8bf7\u52a1\u5fc5\u4f7f\u7528 Unix LF \u884c\u5c3e\u6765\u4fdd\u5b58\u6587\u4ef6\uff0c\u5426\u5219\u5728\u7f51\u9875\u4e0a\u4f1a\u6709\u5f88\u591a\u9519\u8bef \u6bcf\u6b21\u66f4\u65b0\u4e86 .md \u9700\u8981\u624b\u52a8\u8f93\u5165 claat export xxxx.md \u6587\u4ef6\uff0c\u76ee\u524d claat \u4f3c\u4e4e\u8fd8\u4e0d\u652f\u6301\u70ed\u66f4\u65b0 TAT","title":"\u4fee\u6539"},{"location":"codelabs/#_4","text":"pr \u5230 -> gh-pages \u5206\u652f","title":"\u63d0\u4ea4\u66f4\u6539"},{"location":"codelabs/#issue","text":"\u5982\u679c\u89c9\u5f97\u81ea\u5df1\u4fee\u6539\u6709\u70b9\u9ebb\u70e6\u7684\u8bdd\uff0c\u4e5f\u53ef\u4ee5\u5230 \u8fd9\u91cc \u63d0\u4ea4 issue \uff0c\u5c3d\u91cf\u63d0\u4f9b\u662f\u54ea\u4e9b\u9875\u9762/\u4ee3\u7801\u6709\u9519\u8bef","title":"\u63d0\u4ea4 issue"},{"location":"contributing/","text":"Jetpack Compose \u5982\u679c\u4f60\u60f3\u4e3a Jetpack Compose \u505a\u8d21\u732e\u7684\u8bdd\uff0c\u4f60\u53ef\u4ee5\u52a0\u5165 Kotlin \u7684 Slack \u9891\u9053 #Compose , \u6216\u8005\u5728 https://issuetracker.google.com/issues?q=componentid:612128 \u4e2d\u63d0\u4ea4 Compose \u7684 Bug \u6216\u8005\u9519\u8bef \u5173\u4e8e Codelabs \u672c\u9879\u76ee \u6211\u4eec\u975e\u5e38\u6b22\u8fce\u5404\u79cd\u7684 PR \u8bf7\u6c42\uff0c_(:\u0437)\u2220)_\u672c\u9879\u76ee\u8fd8\u5904\u4e8e\u521d\u671f\u9636\u6bb5\uff0c\u975e\u5e38\u9700\u8981\u5404\u4f4d\u5927\u4f6c\u7684\u5b8c\u5584\u548c\u7ea0\u9519 \u6587\u6863\u91c7\u7528 Material \u4e3b\u9898\u7684 MkDocs \u6765\u7f16\u8f91\uff0c\u975e\u5e38\u597d\u4e0a\u624b,\u4f60\u53ea\u9700\u8981\u6309\u7167\u4ee5\u4e0b\u7684\u6b65\u9aa4\uff1a \u5b89\u88c5\u63d2\u4ef6 pip install mkdocs-material pip install mkdocs-git-revision-date-localized-plugin \u5728\u672c\u5730\u8fd0\u884c\u548c\u6d4b\u8bd5 \u5728\u9879\u76ee\u6839\u76ee\u5f55\u7ec8\u7aef\u6267\u884c mkdocs serve \uff0c\u5c06\u4f1a\u5728 http://localhost:8000/ \u770b\u5230\u6587\u6863 \u5982\u4f55\u6dfb\u52a0/\u66f4\u6539\u6587\u6863\uff1f \u6587\u6863\u90fd\u662f\u7531 Markdown \u8bed\u6cd5\u6765\u7f16\u5199\u7684\uff0c\u6240\u6709\u6587\u6863\u4f4d\u4e8e /docs \u4e2d, \u5982\u679c\u9700\u8981\u6269\u5c55\u5de6\u8fb9\u7684\u5bfc\u822a\u4fa7\u680f\uff0c\u8bf7\u5728 mkdocs.yml \u66f4\u65b0 nav \u56fe\u7247\u6dfb\u52a0\u9700\u8981\u5728 /assets/ \u4e0b\uff0c\u548c\u6587\u6863\u540c\u7b49\u8def\u5f84\u540d\u5b57\u6dfb\u52a0\uff0c \u4f8b\u5982\u5982\u679c\u6211\u4fee\u6539\u4e86 Text \u7684\u6587\u6863\uff0c\u5e76\u4e14\u6dfb\u52a0\u4e86\u4e00\u5f20\u4f8b\u56fe \u90a3\u4e48\u5c31\u662f\u653e\u5728 /assets/elements/text/xxx.png \u6700\u540e \u606d\u559c\u4f60\uff0c\u5f53\u4f60\u540c\u6b65\u4e86\u672c\u9879\u76ee\u7684\u6700\u65b0\u8fdb\u5ea6\u5e76\u4e14\u6dfb\u52a0\u4e86\u4f60\u6240\u60f3\u7684\u4e1c\u897f\uff0c\u4f60\u53ea\u9700\u8981\u63d0\u4ea4 PR \u5373\u53ef\uff0c\u6211\u4eec\u5728\u5ba1\u6838\u901a\u8fc7\u4f1a\u81ea\u52a8\u540c\u6b65\u5230\u7f51\u7ad9\u4e0a \u540c\u6b65\u9879\u76ee\u6700\u65b0\u8fdb\u5ea6 \u9996\u5148\uff0c\u60a8\u9700\u8981 fork \u4e00\u4efd\u672c\u9879\u76ee\uff0c\u7136\u540e\u540c\u6b65\u9879\u76ee\u7684\u6700\u65b0\u8fdb\u5ea6\uff1a \u7b2c\u4e00\u79cd\u65b9\u6cd5\uff08\u63a8\u8350\uff01\uff09 \u5728 github \u7f51\u9875\u4e2d\uff0c\u5728\u4f60\u7684 fork \u4ed3\u5e93\u91cc\uff0c\u70b9\u51fb Fetch upstream \u7136\u540e\u5728\u9879\u76ee\u6839\u76ee\u5f55\u6267\u884c git pull origin main ... // \u5199\u65b0\u5185\u5bb9 git push // push \u5230\u81ea\u5df1\u7684\u5206\u652f pr // \u5728\u7f51\u9875\u4e0a\u63d0\u4ea4 PR \u7b2c\u4e8c\u79cd\u65b9\u6cd5 git remote add fork git@github.com:compose-museum/compose-tutorial.git (\u6216\u4f7f\u7528 HTTPS) git remote -v git fetch fork //\u540c\u6b65\u9879\u76ee\u6700\u65b0\u8fdb\u5ea6 git merge fork/main //\u5408\u5e76\u9879\u76ee\u6700\u65b0\u8fdb\u5ea6 ... // \u5199\u65b0\u5185\u5bb9 git push // push \u5230\u81ea\u5df1\u7684\u5206\u652f pr // \u5728\u7f51\u9875\u4e0a\u63d0\u4ea4 PR","title":"\u5173\u4e8e\u8d21\u732e"},{"location":"contributing/#jetpack-compose","text":"\u5982\u679c\u4f60\u60f3\u4e3a Jetpack Compose \u505a\u8d21\u732e\u7684\u8bdd\uff0c\u4f60\u53ef\u4ee5\u52a0\u5165 Kotlin \u7684 Slack \u9891\u9053 #Compose , \u6216\u8005\u5728 https://issuetracker.google.com/issues?q=componentid:612128 \u4e2d\u63d0\u4ea4 Compose \u7684 Bug \u6216\u8005\u9519\u8bef","title":"Jetpack Compose"},{"location":"contributing/#codelabs","text":"","title":"\u5173\u4e8e Codelabs"},{"location":"contributing/#_1","text":"\u6211\u4eec\u975e\u5e38\u6b22\u8fce\u5404\u79cd\u7684 PR \u8bf7\u6c42\uff0c_(:\u0437)\u2220)_\u672c\u9879\u76ee\u8fd8\u5904\u4e8e\u521d\u671f\u9636\u6bb5\uff0c\u975e\u5e38\u9700\u8981\u5404\u4f4d\u5927\u4f6c\u7684\u5b8c\u5584\u548c\u7ea0\u9519 \u6587\u6863\u91c7\u7528 Material \u4e3b\u9898\u7684 MkDocs \u6765\u7f16\u8f91\uff0c\u975e\u5e38\u597d\u4e0a\u624b,\u4f60\u53ea\u9700\u8981\u6309\u7167\u4ee5\u4e0b\u7684\u6b65\u9aa4\uff1a \u5b89\u88c5\u63d2\u4ef6 pip install mkdocs-material pip install mkdocs-git-revision-date-localized-plugin \u5728\u672c\u5730\u8fd0\u884c\u548c\u6d4b\u8bd5 \u5728\u9879\u76ee\u6839\u76ee\u5f55\u7ec8\u7aef\u6267\u884c mkdocs serve \uff0c\u5c06\u4f1a\u5728 http://localhost:8000/ \u770b\u5230\u6587\u6863 \u5982\u4f55\u6dfb\u52a0/\u66f4\u6539\u6587\u6863\uff1f \u6587\u6863\u90fd\u662f\u7531 Markdown \u8bed\u6cd5\u6765\u7f16\u5199\u7684\uff0c\u6240\u6709\u6587\u6863\u4f4d\u4e8e /docs \u4e2d, \u5982\u679c\u9700\u8981\u6269\u5c55\u5de6\u8fb9\u7684\u5bfc\u822a\u4fa7\u680f\uff0c\u8bf7\u5728 mkdocs.yml \u66f4\u65b0 nav \u56fe\u7247\u6dfb\u52a0\u9700\u8981\u5728 /assets/ \u4e0b\uff0c\u548c\u6587\u6863\u540c\u7b49\u8def\u5f84\u540d\u5b57\u6dfb\u52a0\uff0c \u4f8b\u5982\u5982\u679c\u6211\u4fee\u6539\u4e86 Text \u7684\u6587\u6863\uff0c\u5e76\u4e14\u6dfb\u52a0\u4e86\u4e00\u5f20\u4f8b\u56fe \u90a3\u4e48\u5c31\u662f\u653e\u5728 /assets/elements/text/xxx.png \u6700\u540e \u606d\u559c\u4f60\uff0c\u5f53\u4f60\u540c\u6b65\u4e86\u672c\u9879\u76ee\u7684\u6700\u65b0\u8fdb\u5ea6\u5e76\u4e14\u6dfb\u52a0\u4e86\u4f60\u6240\u60f3\u7684\u4e1c\u897f\uff0c\u4f60\u53ea\u9700\u8981\u63d0\u4ea4 PR \u5373\u53ef\uff0c\u6211\u4eec\u5728\u5ba1\u6838\u901a\u8fc7\u4f1a\u81ea\u52a8\u540c\u6b65\u5230\u7f51\u7ad9\u4e0a","title":"\u672c\u9879\u76ee"},{"location":"contributing/#_2","text":"\u9996\u5148\uff0c\u60a8\u9700\u8981 fork \u4e00\u4efd\u672c\u9879\u76ee\uff0c\u7136\u540e\u540c\u6b65\u9879\u76ee\u7684\u6700\u65b0\u8fdb\u5ea6\uff1a","title":"\u540c\u6b65\u9879\u76ee\u6700\u65b0\u8fdb\u5ea6"},{"location":"contributing/#_3","text":"\u5728 github \u7f51\u9875\u4e2d\uff0c\u5728\u4f60\u7684 fork \u4ed3\u5e93\u91cc\uff0c\u70b9\u51fb Fetch upstream \u7136\u540e\u5728\u9879\u76ee\u6839\u76ee\u5f55\u6267\u884c git pull origin main ... // \u5199\u65b0\u5185\u5bb9 git push // push \u5230\u81ea\u5df1\u7684\u5206\u652f pr // \u5728\u7f51\u9875\u4e0a\u63d0\u4ea4 PR","title":"\u7b2c\u4e00\u79cd\u65b9\u6cd5\uff08\u63a8\u8350\uff01\uff09"},{"location":"contributing/#_4","text":"git remote add fork git@github.com:compose-museum/compose-tutorial.git (\u6216\u4f7f\u7528 HTTPS) git remote -v git fetch fork //\u540c\u6b65\u9879\u76ee\u6700\u65b0\u8fdb\u5ea6 git merge fork/main //\u5408\u5e76\u9879\u76ee\u6700\u65b0\u8fdb\u5ea6 ... // \u5199\u65b0\u5185\u5bb9 git push // push \u5230\u81ea\u5df1\u7684\u5206\u652f pr // \u5728\u7f51\u9875\u4e0a\u63d0\u4ea4 PR","title":"\u7b2c\u4e8c\u79cd\u65b9\u6cd5"},{"location":"resources/","text":"\u4e00\u4e9b\u5bf9 Compose \u9879\u76ee\u5f00\u53d1\u6709\u5e2e\u52a9\u7684\u8d44\u6e90 \u5e93 \u9879\u76ee\u540d \u4ecb\u7ecd Ucrop \u53ef\u4ee5\u5b8c\u6210\u56fe\u7247\u7684\u88c1\u526a\uff0c\u5bf9\u7528\u6237\u7684\u56fe\u7247\u4e0a\u4f20\u529f\u80fd\u6709\u5e2e\u52a9(\u5df2\u77e5 Bilibili \u5728\u7528) Material Design \u5b89\u5353\u5e94\u7528\u7684\u8bbe\u8ba1\u6807\u51c6\uff0c\u5185\u6db5\u4e30\u5bcc\u7684\u56fe\u6807\u6309\u94ae\u8d44\u6e90 Intent \u5b89\u5353\u5e94\u7528\u7684\u5206\u4eab\u529f\u80fd Material Dialog \u542b\u6709\u989c\u8272\u3001\u65f6\u95f4\u9009\u62e9\u5bf9\u8bdd\u6846\u7b49\u7b49 accompanist \u4e00\u4e9b\u8fd8\u6ca1\u6b63\u5f0f\u5e94\u7528\u5728 Compose \u4e2d\u7684\u4e00\u4e9b\u975e\u5e38\u597d\u7528\u7684\u5e93 Material Motion for Jetpack Compose \u4e00\u4e9b\u7528\u4e8e Compose \u5f88\u4e0d\u9519\u7684\u8fc7\u6e21\u52a8\u753b","title":"\u8d44\u6e90"},{"location":"resources/#compose","text":"","title":"\u4e00\u4e9b\u5bf9 Compose \u9879\u76ee\u5f00\u53d1\u6709\u5e2e\u52a9\u7684\u8d44\u6e90"},{"location":"resources/#_1","text":"\u9879\u76ee\u540d \u4ecb\u7ecd Ucrop \u53ef\u4ee5\u5b8c\u6210\u56fe\u7247\u7684\u88c1\u526a\uff0c\u5bf9\u7528\u6237\u7684\u56fe\u7247\u4e0a\u4f20\u529f\u80fd\u6709\u5e2e\u52a9(\u5df2\u77e5 Bilibili \u5728\u7528) Material Design \u5b89\u5353\u5e94\u7528\u7684\u8bbe\u8ba1\u6807\u51c6\uff0c\u5185\u6db5\u4e30\u5bcc\u7684\u56fe\u6807\u6309\u94ae\u8d44\u6e90 Intent \u5b89\u5353\u5e94\u7528\u7684\u5206\u4eab\u529f\u80fd Material Dialog \u542b\u6709\u989c\u8272\u3001\u65f6\u95f4\u9009\u62e9\u5bf9\u8bdd\u6846\u7b49\u7b49 accompanist \u4e00\u4e9b\u8fd8\u6ca1\u6b63\u5f0f\u5e94\u7528\u5728 Compose \u4e2d\u7684\u4e00\u4e9b\u975e\u5e38\u597d\u7528\u7684\u5e93 Material Motion for Jetpack Compose \u4e00\u4e9b\u7528\u4e8e Compose \u5f88\u4e0d\u9519\u7684\u8fc7\u6e21\u52a8\u753b","title":"\u5e93"},{"location":"start/","text":"\u5728\u5f00\u59cb\u4e4b\u524d\uff0c\u7531\u4e8e\u5939\u85cf\u79c1\u8d27\uff0c\u4e0d\u59a8\u5148\u6765\u542c\u4e00\u9996\u4f5c\u8005\u63a8\u8350\u7684\u4e00\u9996\u6b4c\u5427\uff01 \u5728\u5f00\u59cb\u7528 Jetpack Compose \u6765\u7f16\u5199\u8f6f\u4ef6\u65f6\uff0c\u6211\u4eec\u9700\u8981 1. \u4e00\u53f0\u53ef\u4ee5 \u8054\u7f51 \u7684\u7535\u8111 2. \u5b89\u88c5 \u6700\u65b0 Canary \u7248\u7684 Android Studio \u9884\u89c8\u7248 3. \u9009\u62e9\u521b\u5efa Empty Compose Activity 4. \u4fdd\u6301\u7248\u672c\u66f4\u65b0 \u5c1d\u8bd5\u4f7f\u7528\u6700\u65b0\u7684 Compose \u7248\u672c\u548c Kotlin \u7248\u672c build.gralde.kts (Project) buildscript { val compose_version by extra ( \"1.0.0-beta08\" ) // Compose \u7248\u672c repositories { google () mavenCentral () } dependencies { classpath ( \"com.android.tools.build:gradle:7.0.0-beta03\" ) // Kotlin \u7248\u672c\uff0c\u6ce8\u610f\uff1aCompose \u7248\u672c\u6709\u65f6\u5019\u9700\u8981\u8981\u6c42 Kotlin \u5230\u8fbe\u4e00\u5b9a\u7684\u7248\u672c\uff0c\u8bf7\u540c\u6b65\u66f4\u65b0 classpath ( \"org.jetbrains.kotlin:kotlin-gradle-plugin:1.5.10\" ) // NOTE: Do not place your application dependencies here; they belong // in the individual module build.gradle.kts files } } build.gradle (Project) buildscript { ext { compose_version = ' 1.0 . 0 - beta08 ' } repositories { google () mavenCentral () } dependencies { classpath ' com . android . tools . build : gradle : 7.0 . 0 - beta03 ' classpath \"org.jetbrains.kotlin:kotlin-gradle-plugin:1.5.10\" // NOTE: Do not place your application dependencies here; they belong // in the individual module build.gradle files } } 5. \u914d\u7f6e Gradle\uff08\u53ef\u5ffd\u7565\uff09 \u60a8\u9700\u8981\u5c06\u5e94\u7528\u7684\u6700\u4f4e API \u7ea7\u522b\u8bbe\u7f6e\u4e3a 21 \u6216\u66f4\u9ad8\u7ea7\u522b\uff0c\u5e76\u5728\u5e94\u7528\u7684 build.gradle \u6587\u4ef6\u4e2d\u542f\u7528 Jetpack Compose\uff0c\u5982\u4e0b\u6240\u793a\u3002\u53e6\u5916\u8fd8\u8981\u8bbe\u7f6e Kotlin \u7f16\u8bd1\u5668\u63d2\u4ef6\u7684\u7248\u672c\u3002 build.gradle android { compileSdk 30 buildToolsVersion \"30.0.3\" defaultConfig { applicationId \"your id\" minSdk 23 targetSdk 30 versionCode 1 versionName \"1.0\" testInstrumentationRunner \"androidx.test.runner.AndroidJUnitRunner\" } buildTypes { release { minifyEnabled false proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro' } } compileOptions { sourceCompatibility JavaVersion.VERSION_1_8 targetCompatibility JavaVersion.VERSION_1_8 } kotlinOptions { jvmTarget = '1.8' useIR = true } buildFeatures { compose true } composeOptions { kotlinCompilerExtensionVersion compose_version kotlinCompilerVersion '1.4.32' } } 6. \u7f16\u5199\u7b2c\u4e00\u4e2a Compose \u7a0b\u5e8f \u73b0\u5728\uff0c\u5982\u679c\u4e00\u5207\u90fd\u6b63\u5e38\uff0c\u6211\u4eec\u53ef\u4ee5\u770b\u5230\uff0c MainActivity.kt \u4e0a\u663e\u793a\u4ee5\u4e0b\u4ee3\u7801 class MainActivity : ComponentActivity () { override fun onCreate ( savedInstanceState : Bundle?) { super . onCreate ( savedInstanceState ) setContent { MyApplicationTheme { // \u6ce8\u610f\uff1a\u8fd9\u91cc\u4f1a\u6839\u636e\u4f60\u521b\u5efa\u7684\u9879\u76ee\u540d\u800c\u4e0d\u540c // A surface container using the 'background' color from the theme Surface ( color = MaterialTheme . colors . background ) { Greeting ( \"Android\" ) } } } } } @Composable fun Greeting ( name : String ) { Text ( text = \"Hello $ name !\" ) } @Preview ( showBackground = true ) @Composable fun DefaultPreview () { MyApplicationTheme { Greeting ( \"Android\" ) } } \u73b0\u5728\uff0c\u6211\u4eec\u5c06 MainActivity.kt \u4fee\u6539\u6210\u4ee5\u4e0b\uff1a class MainActivity : ComponentActivity () { override fun onCreate ( savedInstanceState : Bundle?) { super . onCreate ( savedInstanceState ) setContent { MyApplicationTheme { Greeting () } } } } @Composable fun Greeting () { Text ( text = \"Hello World\" ) } \u5c1d\u8bd5\u8fd0\u884c\uff0c\u5982\u679c\u4e00\u5207\u6b63\u5e38\uff0c\u4f60\u5c06\u4f1a\u770b\u5230 Hello World \u663e\u793a\u5728\u60a8\u7684 \u865a\u62df\u673a/\u624b\u673a \u4e0a 7. \u5173\u4e8e Composable \u4e00\u4e2a\u57fa\u672c\u7684 Compose \u89c6\u56fe\u662f\u4f7f\u7528\u4e00\u4e2a\u666e\u901a\u7684 Kotlin \u51fd\u6570\uff0c\u8be5\u51fd\u6570\u88ab\u6ce8\u89e3\u4e3a @Composable \uff0c \u6240\u4ee5\u6211\u4eec\u4f7f\u7528 Compose \u5f53\u4e2d\u7684\u4e1c\u897f\u65f6\uff0c\u9700\u8981\u5728\u51fd\u6570\u524d\u52a0\u4e0a @Composable","title":"\u5728\u5f00\u59cb\u4e4b\u524d"},{"location":"start/#_1","text":"\u5728\u5f00\u59cb\u7528 Jetpack Compose \u6765\u7f16\u5199\u8f6f\u4ef6\u65f6\uff0c\u6211\u4eec\u9700\u8981","title":"\u5728\u5f00\u59cb\u4e4b\u524d\uff0c\u7531\u4e8e\u5939\u85cf\u79c1\u8d27\uff0c\u4e0d\u59a8\u5148\u6765\u542c\u4e00\u9996\u4f5c\u8005\u63a8\u8350\u7684\u4e00\u9996\u6b4c\u5427\uff01"},{"location":"start/#1","text":"","title":"1. \u4e00\u53f0\u53ef\u4ee5 \u8054\u7f51 \u7684\u7535\u8111"},{"location":"start/#2-canary-android-studio","text":"","title":"2. \u5b89\u88c5 \u6700\u65b0 Canary \u7248\u7684 Android Studio \u9884\u89c8\u7248"},{"location":"start/#3-empty-compose-activity","text":"","title":"3. \u9009\u62e9\u521b\u5efa Empty Compose Activity"},{"location":"start/#4","text":"\u5c1d\u8bd5\u4f7f\u7528\u6700\u65b0\u7684 Compose \u7248\u672c\u548c Kotlin \u7248\u672c build.gralde.kts (Project) buildscript { val compose_version by extra ( \"1.0.0-beta08\" ) // Compose \u7248\u672c repositories { google () mavenCentral () } dependencies { classpath ( \"com.android.tools.build:gradle:7.0.0-beta03\" ) // Kotlin \u7248\u672c\uff0c\u6ce8\u610f\uff1aCompose \u7248\u672c\u6709\u65f6\u5019\u9700\u8981\u8981\u6c42 Kotlin \u5230\u8fbe\u4e00\u5b9a\u7684\u7248\u672c\uff0c\u8bf7\u540c\u6b65\u66f4\u65b0 classpath ( \"org.jetbrains.kotlin:kotlin-gradle-plugin:1.5.10\" ) // NOTE: Do not place your application dependencies here; they belong // in the individual module build.gradle.kts files } } build.gradle (Project) buildscript { ext { compose_version = ' 1.0 . 0 - beta08 ' } repositories { google () mavenCentral () } dependencies { classpath ' com . android . tools . build : gradle : 7.0 . 0 - beta03 ' classpath \"org.jetbrains.kotlin:kotlin-gradle-plugin:1.5.10\" // NOTE: Do not place your application dependencies here; they belong // in the individual module build.gradle files } }","title":"4. \u4fdd\u6301\u7248\u672c\u66f4\u65b0"},{"location":"start/#5-gradle","text":"\u60a8\u9700\u8981\u5c06\u5e94\u7528\u7684\u6700\u4f4e API \u7ea7\u522b\u8bbe\u7f6e\u4e3a 21 \u6216\u66f4\u9ad8\u7ea7\u522b\uff0c\u5e76\u5728\u5e94\u7528\u7684 build.gradle \u6587\u4ef6\u4e2d\u542f\u7528 Jetpack Compose\uff0c\u5982\u4e0b\u6240\u793a\u3002\u53e6\u5916\u8fd8\u8981\u8bbe\u7f6e Kotlin \u7f16\u8bd1\u5668\u63d2\u4ef6\u7684\u7248\u672c\u3002 build.gradle android { compileSdk 30 buildToolsVersion \"30.0.3\" defaultConfig { applicationId \"your id\" minSdk 23 targetSdk 30 versionCode 1 versionName \"1.0\" testInstrumentationRunner \"androidx.test.runner.AndroidJUnitRunner\" } buildTypes { release { minifyEnabled false proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro' } } compileOptions { sourceCompatibility JavaVersion.VERSION_1_8 targetCompatibility JavaVersion.VERSION_1_8 } kotlinOptions { jvmTarget = '1.8' useIR = true } buildFeatures { compose true } composeOptions { kotlinCompilerExtensionVersion compose_version kotlinCompilerVersion '1.4.32' } }","title":"5. \u914d\u7f6e Gradle\uff08\u53ef\u5ffd\u7565\uff09"},{"location":"start/#6-compose","text":"\u73b0\u5728\uff0c\u5982\u679c\u4e00\u5207\u90fd\u6b63\u5e38\uff0c\u6211\u4eec\u53ef\u4ee5\u770b\u5230\uff0c MainActivity.kt \u4e0a\u663e\u793a\u4ee5\u4e0b\u4ee3\u7801 class MainActivity : ComponentActivity () { override fun onCreate ( savedInstanceState : Bundle?) { super . onCreate ( savedInstanceState ) setContent { MyApplicationTheme { // \u6ce8\u610f\uff1a\u8fd9\u91cc\u4f1a\u6839\u636e\u4f60\u521b\u5efa\u7684\u9879\u76ee\u540d\u800c\u4e0d\u540c // A surface container using the 'background' color from the theme Surface ( color = MaterialTheme . colors . background ) { Greeting ( \"Android\" ) } } } } } @Composable fun Greeting ( name : String ) { Text ( text = \"Hello $ name !\" ) } @Preview ( showBackground = true ) @Composable fun DefaultPreview () { MyApplicationTheme { Greeting ( \"Android\" ) } } \u73b0\u5728\uff0c\u6211\u4eec\u5c06 MainActivity.kt \u4fee\u6539\u6210\u4ee5\u4e0b\uff1a class MainActivity : ComponentActivity () { override fun onCreate ( savedInstanceState : Bundle?) { super . onCreate ( savedInstanceState ) setContent { MyApplicationTheme { Greeting () } } } } @Composable fun Greeting () { Text ( text = \"Hello World\" ) } \u5c1d\u8bd5\u8fd0\u884c\uff0c\u5982\u679c\u4e00\u5207\u6b63\u5e38\uff0c\u4f60\u5c06\u4f1a\u770b\u5230 Hello World \u663e\u793a\u5728\u60a8\u7684 \u865a\u62df\u673a/\u624b\u673a \u4e0a","title":"6. \u7f16\u5199\u7b2c\u4e00\u4e2a Compose \u7a0b\u5e8f"},{"location":"start/#7-composable","text":"\u4e00\u4e2a\u57fa\u672c\u7684 Compose \u89c6\u56fe\u662f\u4f7f\u7528\u4e00\u4e2a\u666e\u901a\u7684 Kotlin \u51fd\u6570\uff0c\u8be5\u51fd\u6570\u88ab\u6ce8\u89e3\u4e3a @Composable \uff0c \u6240\u4ee5\u6211\u4eec\u4f7f\u7528 Compose \u5f53\u4e2d\u7684\u4e1c\u897f\u65f6\uff0c\u9700\u8981\u5728\u51fd\u6570\u524d\u52a0\u4e0a @Composable","title":"7. \u5173\u4e8e Composable"},{"location":"api/elements/text/","text":"1. Text @Composable fun Text ( text : String , modifier : Modifier = Modifier , color : Color = Color . Unspecified , fontSize : TextUnit = TextUnit . Unspecified , fontStyle : FontStyle? = null , fontWeight : FontWeight? = null , fontFamily : FontFamily? = null , letterSpacing : TextUnit = TextUnit . Unspecified , textDecoration : TextDecoration? = null , textAlign : TextAlign? = null , lineHeight : TextUnit = TextUnit . Unspecified , overflow : TextOverflow = TextOverflow . Clip , softWrap : Boolean = true , maxLines : Int = Int . MAX_VALUE , onTextLayout : ( TextLayoutResult ) -> Unit = {}, style : TextStyle = LocalTextStyle . current ): @Composable Unit \u663e\u793a\u6587\u672c\u5e76\u63d0\u4f9b\u8bed\u4e49/\u53ef\u8bfb\u6027\u4fe1\u606f\u7684\u9ad8\u7ea7\u5143\u7d20\u3002 \u9ed8\u8ba4\u6837\u5f0f\u4f7f\u7528 MaterialTheme /\u7ec4\u4ef6\u63d0\u4f9b\u7684 LocalTextStyle \u3002\u5982\u679c\u4f60\u8981\u8bbe\u7f6e\u4f60\u81ea\u5df1\u7684\u6837\u5f0f\uff0c\u4f60\u53ef\u80fd\u8981\u8003\u8651\u9996\u5148\u68c0\u7d22 LocalTextStyle \uff0c\u5e76\u4f7f\u7528 TextStyle.copy \u6765\u4fdd\u7559\u4efb\u4f55\u4e3b\u9898\u5b9a\u4e49\u7684\u5c5e\u6027\uff0c\u53ea\u4fee\u6539\u4f60\u8981\u8986\u76d6\u7684\u7279\u5b9a\u5c5e\u6027\u3002 \u4e3a\u4e86\u4fbf\u4e8e\u4f7f\u7528\uff0c TextStyle \u7684\u5e38\u7528\u53c2\u6570\u4e5f\u5728\u8fd9\u91cc\u51fa\u73b0\uff0c\u4f18\u5148\u987a\u5e8f\u5982\u4e0b\uff1a \u5982\u679c\u4e00\u4e2a\u53c2\u6570\u88ab\u660e\u786e\u5730\u8bbe\u7f6e\u5728\u8fd9\u91cc\uff08\u5373\u5b83\u4e0d\u662f null \u6216 TextUnit.Unspecified \uff09\uff0c\u90a3\u4e48\u8fd9\u4e2a\u53c2\u6570\u5c06\u603b\u662f\u88ab\u4f7f\u7528\u3002 \u5982\u679c\u4e00\u4e2a\u53c2\u6570\u6ca1\u6709\u88ab\u8bbe\u7f6e\uff0c\uff08 null \u6216 TextUnit.Unspecified \uff09\uff0c\u90a3\u4e48 style \u4e2d\u7684\u76f8\u5e94\u503c\u5c06\u88ab\u66ff\u4ee3\u4f7f\u7528\u3002 \u6b64\u5916\uff0c\u5bf9\u4e8e\u989c\u8272\uff0c\u5982\u679c\u6ca1\u6709\u8bbe\u7f6e\u989c\u8272\uff0c\u5e76\u4e14 style \u6ca1\u6709\u989c\u8272\uff0c\u90a3\u4e48\u5c06\u4f7f\u7528 LocalContentColor \u548c LocalContentAlpha \u7684 alpha --\u8fd9\u5141\u8bb8\u8fd9\u4e2a\u6587\u672c\u6216\u5305\u542b\u8fd9\u4e2a\u6587\u672c\u7684\u5143\u7d20\u9002\u5e94\u4e0d\u540c\u7684\u80cc\u666f\u989c\u8272\uff0c\u4ecd\u7136\u4fdd\u6301\u5bf9\u6bd4\u5ea6\u548c\u548c\u53ef\u8bfb\u6027\u3002 \u53c2\u6570 text: AnnotatedString \u8981\u663e\u793a\u7684\u6587\u672c modifier: Modifier = Modifier \u5e94\u7528\u4e8e\u8be5\u5e03\u5c40\u8282\u70b9\u7684 Modifier color: Color = Color.Unspecified \u5e94\u7528\u4e8e\u6587\u672c\u7684\u989c\u8272\u3002\u5982\u679c\u662f Color.Unspecified \uff0c\u5e76\u4e14 style \u6ca1\u6709\u8bbe\u7f6e\u989c\u8272\uff0c\u90a3\u4e48\u5c31\u662f LocalContentColor fontSize: TextUnit = TextUnit.Unspecified \u7ed8\u5236\u6587\u672c\u65f6\u8981\u4f7f\u7528\u7684\u5b57\u5f62\u5927\u5c0f\u3002\u53c2\u89c1 TextStyle.fontSize fontStyle: FontStyle? = null \u7ed8\u5236\u5b57\u6bcd\u65f6\u4f7f\u7528\u7684\u5b57\u4f53\u53d8\u4f53\uff08\u4f8b\u5982\uff0c\u659c\u4f53\uff09\u3002\u53c2\u89c1 TextStyle.fontStyle fontWeight: FontWeight? = null \u7ed8\u5236\u6587\u672c\u65f6\u8981\u4f7f\u7528\u7684\u5b57\u4f53\u539a\u5ea6\uff08\u4f8b\u5982\uff0c FontWeight.Bold \uff09 fontFamily: FontFamily? = null \u6e32\u67d3\u6587\u672c\u65f6\u8981\u4f7f\u7528\u7684 font.family \u3002\u53c2\u89c1 TextStyle.fontFamily letterSpacing: TextUnit = TextUnit.Unspecified \u6bcf\u4e2a\u5b57\u6bcd\u4e4b\u95f4\u8981\u589e\u52a0\u7684\u7a7a\u95f4\u3002\u53c2\u89c1 TextStyle.letterSpacing textDecoration: TextDecoration? = null \u5728\u6587\u672c\u4e0a\u7684\u88c5\u9970\uff08\u4f8b\u5982\uff0c\u4e0b\u5212\u7ebf\uff09\u3002\u53c2\u89c1 TextStyle.textDecoration textAlign: TextAlign? = null \u6bb5\u843d\u5185\u5404\u884c\u6587\u5b57\u7684\u5bf9\u9f50\u65b9\u5f0f\u3002\u53c2\u89c1 TextStyle.textAlign lineHeight: TextUnit = TextUnit.Unspecified \u6bb5\u843d\u7684\u884c\u9ad8\uff0c\u4ee5 TextUnit \u4e3a\u5355\u4f4d\uff0c\u4f8b\u5982 SP \u6216 EM \u3002\u53c2\u89c1 TxtStyle.lineHeight overflow: TextOverflow = TextOverflow.Clip \u5904\u7406\u89c6\u89c9\u6ea2\u51fa\u7684\u95ee\u9898 softWrap: Boolean = true \u6587\u672c\u662f\u5426\u5e94\u5728\u8f6f\u6362\u884c\u65f6\u65ad\u5f00\u3002\u5982\u679c\u662f false \uff0c\u6587\u672c\u4e2d\u7684\u5b57\u5f62\u5c06\u88ab\u5b9a\u4f4d\uff0c\u5c31\u50cf\u6709\u65e0\u9650\u7684\u6c34\u5e73\u7a7a\u95f4\u4e00\u6837\u3002\u5982\u679c softWrap \u4e3a false \uff0c overflow \u548c TextAlign \u53ef\u80fd\u4f1a\u4ea7\u751f\u610f\u5916\u7684\u6548\u679c maxLines: Int = Int.MAX_VALUE \u53ef\u9009\u7684\u6587\u672c\u8de8\u5ea6\u7684\u6700\u5927\u884c\u6570\uff0c\u5982\u679c\u6709\u5fc5\u8981\uff0c\u53ef\u4ee5\u8fdb\u884c\u5305\u88c5\u3002\u5982\u679c\u6587\u672c\u8d85\u8fc7\u4e86\u7ed9\u5b9a\u7684\u884c\u6570\uff0c\u5b83\u5c06\u6839\u636e overflow \u548c softWrap \u88ab\u622a\u65ad\u3002\u5982\u679c\u5b83\u4e0d\u662f\u7a7a\u7684\uff0c\u90a3\u4e48\u5b83\u5fc5\u987b\u5927\u4e8e\u96f6 onTextLayout: (TextLayoutResult) -> Unit = {} \u5f53\u8ba1\u7b97\u4e00\u4e2a\u65b0\u7684\u6587\u672c\u5e03\u5c40\u65f6\u6267\u884c\u7684\u56de\u8c03 style: TextStyle = LocalTextStyle.current \u6587\u672c\u7684\u98ce\u683c\u914d\u7f6e\uff0c\u5982\u989c\u8272\u3001\u5b57\u4f53\u3001\u884c\u9ad8\u7b49 2. Text @Composable fun Text ( text : AnnotatedString , modifier : Modifier = Modifier , color : Color = Color . Unspecified , fontSize : TextUnit = TextUnit . Unspecified , fontStyle : FontStyle? = null , fontWeight : FontWeight? = null , fontFamily : FontFamily? = null , letterSpacing : TextUnit = TextUnit . Unspecified , textDecoration : TextDecoration? = null , textAlign : TextAlign? = null , lineHeight : TextUnit = TextUnit . Unspecified , overflow : TextOverflow = TextOverflow . Clip , softWrap : Boolean = true , maxLines : Int = Int . MAX_VALUE , inlineContent : Map < String , InlineTextContent > = mapOf (), onTextLayout : ( TextLayoutResult ) -> Unit = {}, style : TextStyle = LocalTextStyle . current ): @Composable Unit \u53c2\u6570 text: AnnotatedString \u8981\u663e\u793a\u7684\u6587\u672c modifier: Modifier = Modifier \u5e94\u7528\u4e8e\u8be5\u5e03\u5c40\u8282\u70b9\u7684 Modifier color: Color = Color.Unspecified \u5e94\u7528\u4e8e\u6587\u672c\u7684\u989c\u8272\u3002\u5982\u679c\u662f Color.Unspecified \uff0c\u5e76\u4e14 style \u6ca1\u6709\u8bbe\u7f6e\u989c\u8272\uff0c\u90a3\u4e48\u5c31\u662f LocalContentColor fontSize: TextUnit = TextUnit.Unspecified \u7ed8\u5236\u6587\u672c\u65f6\u8981\u4f7f\u7528\u7684\u5b57\u5f62\u5927\u5c0f\u3002\u53c2\u89c1 TextStyle.fontSize fontStyle: FontStyle? = null \u7ed8\u5236\u5b57\u6bcd\u65f6\u4f7f\u7528\u7684\u5b57\u4f53\u53d8\u4f53\uff08\u4f8b\u5982\uff0c\u659c\u4f53\uff09\u3002\u53c2\u89c1 TextStyle.fontStyle fontWeight: FontWeight? = null \u7ed8\u5236\u6587\u672c\u65f6\u8981\u4f7f\u7528\u7684\u5b57\u4f53\u539a\u5ea6\uff08\u4f8b\u5982\uff0c FontWeight.Bold \uff09 fontFamily: FontFamily? = null \u6e32\u67d3\u6587\u672c\u65f6\u8981\u4f7f\u7528\u7684 font.family \u3002\u53c2\u89c1 TextStyle.fontFamily letterSpacing: TextUnit = TextUnit.Unspecified \u6bcf\u4e2a\u5b57\u6bcd\u4e4b\u95f4\u8981\u589e\u52a0\u7684\u7a7a\u95f4\u3002\u53c2\u89c1 TextStyle.letterSpacing textDecoration: TextDecoration? = null \u5728\u6587\u672c\u4e0a\u7684\u88c5\u9970\uff08\u4f8b\u5982\uff0c\u4e0b\u5212\u7ebf\uff09\u3002\u53c2\u89c1 TextStyle.textDecoration textAlign: TextAlign? = null \u6bb5\u843d\u5185\u5404\u884c\u6587\u5b57\u7684\u5bf9\u9f50\u65b9\u5f0f\u3002\u53c2\u89c1 TextStyle.textAlign lineHeight: TextUnit = TextUnit.Unspecified \u6bb5\u843d\u7684\u884c\u9ad8\uff0c\u4ee5 TextUnit \u4e3a\u5355\u4f4d\uff0c\u4f8b\u5982 SP \u6216 EM \u3002\u53c2\u89c1 TxtStyle.lineHeight overflow: TextOverflow = TextOverflow.Clip \u5904\u7406\u89c6\u89c9\u6ea2\u51fa\u7684\u95ee\u9898 softWrap: Boolean = true \u6587\u672c\u662f\u5426\u5e94\u5728\u8f6f\u6362\u884c\u65f6\u65ad\u5f00\u3002\u5982\u679c\u662f false \uff0c\u6587\u672c\u4e2d\u7684\u5b57\u5f62\u5c06\u88ab\u5b9a\u4f4d\uff0c\u5c31\u50cf\u6709\u65e0\u9650\u7684\u6c34\u5e73\u7a7a\u95f4\u4e00\u6837\u3002\u5982\u679c softWrap \u4e3a false \uff0c overflow \u548c TextAlign \u53ef\u80fd\u4f1a\u4ea7\u751f\u610f\u5916\u7684\u6548\u679c maxLines: Int = Int.MAX_VALUE \u53ef\u9009\u7684\u6587\u672c\u8de8\u5ea6\u7684\u6700\u5927\u884c\u6570\uff0c\u5982\u679c\u6709\u5fc5\u8981\uff0c\u53ef\u4ee5\u8fdb\u884c\u5305\u88c5\u3002\u5982\u679c\u6587\u672c\u8d85\u8fc7\u4e86\u7ed9\u5b9a\u7684\u884c\u6570\uff0c\u5b83\u5c06\u6839\u636e overflow \u548c softWrap \u88ab\u622a\u65ad\u3002\u5982\u679c\u5b83\u4e0d\u662f\u7a7a\u7684\uff0c\u90a3\u4e48\u5b83\u5fc5\u987b\u5927\u4e8e\u96f6 inlineContent: Map < String , InlineTextContent > = mapOf() \u4e00\u4e2a Map \u5b58\u50a8 Composables\uff0c\u53d6\u4ee3\u4e86\u6587\u672c\u7684\u67d0\u4e9b\u8303\u56f4\u3002\u5b83\u7528\u4e8e\u5728\u6587\u672c\u5e03\u5c40\u4e2d\u63d2\u5165 Composables\u3002\u67e5\u770b InlineTextContent \u4ee5\u4e86\u89e3\u66f4\u591a\u4fe1\u606f onTextLayout: (TextLayoutResult) -> Unit = {} \u5f53\u8ba1\u7b97\u4e00\u4e2a\u65b0\u7684\u6587\u672c\u5e03\u5c40\u65f6\u6267\u884c\u7684\u56de\u8c03 style: TextStyle = LocalTextStyle.current \u6587\u672c\u7684\u98ce\u683c\u914d\u7f6e\uff0c\u5982\u989c\u8272\u3001\u5b57\u4f53\u3001\u884c\u9ad8\u7b49","title":"Text"},{"location":"api/elements/text/#1-text","text":"@Composable fun Text ( text : String , modifier : Modifier = Modifier , color : Color = Color . Unspecified , fontSize : TextUnit = TextUnit . Unspecified , fontStyle : FontStyle? = null , fontWeight : FontWeight? = null , fontFamily : FontFamily? = null , letterSpacing : TextUnit = TextUnit . Unspecified , textDecoration : TextDecoration? = null , textAlign : TextAlign? = null , lineHeight : TextUnit = TextUnit . Unspecified , overflow : TextOverflow = TextOverflow . Clip , softWrap : Boolean = true , maxLines : Int = Int . MAX_VALUE , onTextLayout : ( TextLayoutResult ) -> Unit = {}, style : TextStyle = LocalTextStyle . current ): @Composable Unit \u663e\u793a\u6587\u672c\u5e76\u63d0\u4f9b\u8bed\u4e49/\u53ef\u8bfb\u6027\u4fe1\u606f\u7684\u9ad8\u7ea7\u5143\u7d20\u3002 \u9ed8\u8ba4\u6837\u5f0f\u4f7f\u7528 MaterialTheme /\u7ec4\u4ef6\u63d0\u4f9b\u7684 LocalTextStyle \u3002\u5982\u679c\u4f60\u8981\u8bbe\u7f6e\u4f60\u81ea\u5df1\u7684\u6837\u5f0f\uff0c\u4f60\u53ef\u80fd\u8981\u8003\u8651\u9996\u5148\u68c0\u7d22 LocalTextStyle \uff0c\u5e76\u4f7f\u7528 TextStyle.copy \u6765\u4fdd\u7559\u4efb\u4f55\u4e3b\u9898\u5b9a\u4e49\u7684\u5c5e\u6027\uff0c\u53ea\u4fee\u6539\u4f60\u8981\u8986\u76d6\u7684\u7279\u5b9a\u5c5e\u6027\u3002 \u4e3a\u4e86\u4fbf\u4e8e\u4f7f\u7528\uff0c TextStyle \u7684\u5e38\u7528\u53c2\u6570\u4e5f\u5728\u8fd9\u91cc\u51fa\u73b0\uff0c\u4f18\u5148\u987a\u5e8f\u5982\u4e0b\uff1a \u5982\u679c\u4e00\u4e2a\u53c2\u6570\u88ab\u660e\u786e\u5730\u8bbe\u7f6e\u5728\u8fd9\u91cc\uff08\u5373\u5b83\u4e0d\u662f null \u6216 TextUnit.Unspecified \uff09\uff0c\u90a3\u4e48\u8fd9\u4e2a\u53c2\u6570\u5c06\u603b\u662f\u88ab\u4f7f\u7528\u3002 \u5982\u679c\u4e00\u4e2a\u53c2\u6570\u6ca1\u6709\u88ab\u8bbe\u7f6e\uff0c\uff08 null \u6216 TextUnit.Unspecified \uff09\uff0c\u90a3\u4e48 style \u4e2d\u7684\u76f8\u5e94\u503c\u5c06\u88ab\u66ff\u4ee3\u4f7f\u7528\u3002 \u6b64\u5916\uff0c\u5bf9\u4e8e\u989c\u8272\uff0c\u5982\u679c\u6ca1\u6709\u8bbe\u7f6e\u989c\u8272\uff0c\u5e76\u4e14 style \u6ca1\u6709\u989c\u8272\uff0c\u90a3\u4e48\u5c06\u4f7f\u7528 LocalContentColor \u548c LocalContentAlpha \u7684 alpha --\u8fd9\u5141\u8bb8\u8fd9\u4e2a\u6587\u672c\u6216\u5305\u542b\u8fd9\u4e2a\u6587\u672c\u7684\u5143\u7d20\u9002\u5e94\u4e0d\u540c\u7684\u80cc\u666f\u989c\u8272\uff0c\u4ecd\u7136\u4fdd\u6301\u5bf9\u6bd4\u5ea6\u548c\u548c\u53ef\u8bfb\u6027\u3002 \u53c2\u6570 text: AnnotatedString \u8981\u663e\u793a\u7684\u6587\u672c modifier: Modifier = Modifier \u5e94\u7528\u4e8e\u8be5\u5e03\u5c40\u8282\u70b9\u7684 Modifier color: Color = Color.Unspecified \u5e94\u7528\u4e8e\u6587\u672c\u7684\u989c\u8272\u3002\u5982\u679c\u662f Color.Unspecified \uff0c\u5e76\u4e14 style \u6ca1\u6709\u8bbe\u7f6e\u989c\u8272\uff0c\u90a3\u4e48\u5c31\u662f LocalContentColor fontSize: TextUnit = TextUnit.Unspecified \u7ed8\u5236\u6587\u672c\u65f6\u8981\u4f7f\u7528\u7684\u5b57\u5f62\u5927\u5c0f\u3002\u53c2\u89c1 TextStyle.fontSize fontStyle: FontStyle? = null \u7ed8\u5236\u5b57\u6bcd\u65f6\u4f7f\u7528\u7684\u5b57\u4f53\u53d8\u4f53\uff08\u4f8b\u5982\uff0c\u659c\u4f53\uff09\u3002\u53c2\u89c1 TextStyle.fontStyle fontWeight: FontWeight? = null \u7ed8\u5236\u6587\u672c\u65f6\u8981\u4f7f\u7528\u7684\u5b57\u4f53\u539a\u5ea6\uff08\u4f8b\u5982\uff0c FontWeight.Bold \uff09 fontFamily: FontFamily? = null \u6e32\u67d3\u6587\u672c\u65f6\u8981\u4f7f\u7528\u7684 font.family \u3002\u53c2\u89c1 TextStyle.fontFamily letterSpacing: TextUnit = TextUnit.Unspecified \u6bcf\u4e2a\u5b57\u6bcd\u4e4b\u95f4\u8981\u589e\u52a0\u7684\u7a7a\u95f4\u3002\u53c2\u89c1 TextStyle.letterSpacing textDecoration: TextDecoration? = null \u5728\u6587\u672c\u4e0a\u7684\u88c5\u9970\uff08\u4f8b\u5982\uff0c\u4e0b\u5212\u7ebf\uff09\u3002\u53c2\u89c1 TextStyle.textDecoration textAlign: TextAlign? = null \u6bb5\u843d\u5185\u5404\u884c\u6587\u5b57\u7684\u5bf9\u9f50\u65b9\u5f0f\u3002\u53c2\u89c1 TextStyle.textAlign lineHeight: TextUnit = TextUnit.Unspecified \u6bb5\u843d\u7684\u884c\u9ad8\uff0c\u4ee5 TextUnit \u4e3a\u5355\u4f4d\uff0c\u4f8b\u5982 SP \u6216 EM \u3002\u53c2\u89c1 TxtStyle.lineHeight overflow: TextOverflow = TextOverflow.Clip \u5904\u7406\u89c6\u89c9\u6ea2\u51fa\u7684\u95ee\u9898 softWrap: Boolean = true \u6587\u672c\u662f\u5426\u5e94\u5728\u8f6f\u6362\u884c\u65f6\u65ad\u5f00\u3002\u5982\u679c\u662f false \uff0c\u6587\u672c\u4e2d\u7684\u5b57\u5f62\u5c06\u88ab\u5b9a\u4f4d\uff0c\u5c31\u50cf\u6709\u65e0\u9650\u7684\u6c34\u5e73\u7a7a\u95f4\u4e00\u6837\u3002\u5982\u679c softWrap \u4e3a false \uff0c overflow \u548c TextAlign \u53ef\u80fd\u4f1a\u4ea7\u751f\u610f\u5916\u7684\u6548\u679c maxLines: Int = Int.MAX_VALUE \u53ef\u9009\u7684\u6587\u672c\u8de8\u5ea6\u7684\u6700\u5927\u884c\u6570\uff0c\u5982\u679c\u6709\u5fc5\u8981\uff0c\u53ef\u4ee5\u8fdb\u884c\u5305\u88c5\u3002\u5982\u679c\u6587\u672c\u8d85\u8fc7\u4e86\u7ed9\u5b9a\u7684\u884c\u6570\uff0c\u5b83\u5c06\u6839\u636e overflow \u548c softWrap \u88ab\u622a\u65ad\u3002\u5982\u679c\u5b83\u4e0d\u662f\u7a7a\u7684\uff0c\u90a3\u4e48\u5b83\u5fc5\u987b\u5927\u4e8e\u96f6 onTextLayout: (TextLayoutResult) -> Unit = {} \u5f53\u8ba1\u7b97\u4e00\u4e2a\u65b0\u7684\u6587\u672c\u5e03\u5c40\u65f6\u6267\u884c\u7684\u56de\u8c03 style: TextStyle = LocalTextStyle.current \u6587\u672c\u7684\u98ce\u683c\u914d\u7f6e\uff0c\u5982\u989c\u8272\u3001\u5b57\u4f53\u3001\u884c\u9ad8\u7b49","title":"1. Text"},{"location":"api/elements/text/#2-text","text":"@Composable fun Text ( text : AnnotatedString , modifier : Modifier = Modifier , color : Color = Color . Unspecified , fontSize : TextUnit = TextUnit . Unspecified , fontStyle : FontStyle? = null , fontWeight : FontWeight? = null , fontFamily : FontFamily? = null , letterSpacing : TextUnit = TextUnit . Unspecified , textDecoration : TextDecoration? = null , textAlign : TextAlign? = null , lineHeight : TextUnit = TextUnit . Unspecified , overflow : TextOverflow = TextOverflow . Clip , softWrap : Boolean = true , maxLines : Int = Int . MAX_VALUE , inlineContent : Map < String , InlineTextContent > = mapOf (), onTextLayout : ( TextLayoutResult ) -> Unit = {}, style : TextStyle = LocalTextStyle . current ): @Composable Unit \u53c2\u6570 text: AnnotatedString \u8981\u663e\u793a\u7684\u6587\u672c modifier: Modifier = Modifier \u5e94\u7528\u4e8e\u8be5\u5e03\u5c40\u8282\u70b9\u7684 Modifier color: Color = Color.Unspecified \u5e94\u7528\u4e8e\u6587\u672c\u7684\u989c\u8272\u3002\u5982\u679c\u662f Color.Unspecified \uff0c\u5e76\u4e14 style \u6ca1\u6709\u8bbe\u7f6e\u989c\u8272\uff0c\u90a3\u4e48\u5c31\u662f LocalContentColor fontSize: TextUnit = TextUnit.Unspecified \u7ed8\u5236\u6587\u672c\u65f6\u8981\u4f7f\u7528\u7684\u5b57\u5f62\u5927\u5c0f\u3002\u53c2\u89c1 TextStyle.fontSize fontStyle: FontStyle? = null \u7ed8\u5236\u5b57\u6bcd\u65f6\u4f7f\u7528\u7684\u5b57\u4f53\u53d8\u4f53\uff08\u4f8b\u5982\uff0c\u659c\u4f53\uff09\u3002\u53c2\u89c1 TextStyle.fontStyle fontWeight: FontWeight? = null \u7ed8\u5236\u6587\u672c\u65f6\u8981\u4f7f\u7528\u7684\u5b57\u4f53\u539a\u5ea6\uff08\u4f8b\u5982\uff0c FontWeight.Bold \uff09 fontFamily: FontFamily? = null \u6e32\u67d3\u6587\u672c\u65f6\u8981\u4f7f\u7528\u7684 font.family \u3002\u53c2\u89c1 TextStyle.fontFamily letterSpacing: TextUnit = TextUnit.Unspecified \u6bcf\u4e2a\u5b57\u6bcd\u4e4b\u95f4\u8981\u589e\u52a0\u7684\u7a7a\u95f4\u3002\u53c2\u89c1 TextStyle.letterSpacing textDecoration: TextDecoration? = null \u5728\u6587\u672c\u4e0a\u7684\u88c5\u9970\uff08\u4f8b\u5982\uff0c\u4e0b\u5212\u7ebf\uff09\u3002\u53c2\u89c1 TextStyle.textDecoration textAlign: TextAlign? = null \u6bb5\u843d\u5185\u5404\u884c\u6587\u5b57\u7684\u5bf9\u9f50\u65b9\u5f0f\u3002\u53c2\u89c1 TextStyle.textAlign lineHeight: TextUnit = TextUnit.Unspecified \u6bb5\u843d\u7684\u884c\u9ad8\uff0c\u4ee5 TextUnit \u4e3a\u5355\u4f4d\uff0c\u4f8b\u5982 SP \u6216 EM \u3002\u53c2\u89c1 TxtStyle.lineHeight overflow: TextOverflow = TextOverflow.Clip \u5904\u7406\u89c6\u89c9\u6ea2\u51fa\u7684\u95ee\u9898 softWrap: Boolean = true \u6587\u672c\u662f\u5426\u5e94\u5728\u8f6f\u6362\u884c\u65f6\u65ad\u5f00\u3002\u5982\u679c\u662f false \uff0c\u6587\u672c\u4e2d\u7684\u5b57\u5f62\u5c06\u88ab\u5b9a\u4f4d\uff0c\u5c31\u50cf\u6709\u65e0\u9650\u7684\u6c34\u5e73\u7a7a\u95f4\u4e00\u6837\u3002\u5982\u679c softWrap \u4e3a false \uff0c overflow \u548c TextAlign \u53ef\u80fd\u4f1a\u4ea7\u751f\u610f\u5916\u7684\u6548\u679c maxLines: Int = Int.MAX_VALUE \u53ef\u9009\u7684\u6587\u672c\u8de8\u5ea6\u7684\u6700\u5927\u884c\u6570\uff0c\u5982\u679c\u6709\u5fc5\u8981\uff0c\u53ef\u4ee5\u8fdb\u884c\u5305\u88c5\u3002\u5982\u679c\u6587\u672c\u8d85\u8fc7\u4e86\u7ed9\u5b9a\u7684\u884c\u6570\uff0c\u5b83\u5c06\u6839\u636e overflow \u548c softWrap \u88ab\u622a\u65ad\u3002\u5982\u679c\u5b83\u4e0d\u662f\u7a7a\u7684\uff0c\u90a3\u4e48\u5b83\u5fc5\u987b\u5927\u4e8e\u96f6 inlineContent: Map < String , InlineTextContent > = mapOf() \u4e00\u4e2a Map \u5b58\u50a8 Composables\uff0c\u53d6\u4ee3\u4e86\u6587\u672c\u7684\u67d0\u4e9b\u8303\u56f4\u3002\u5b83\u7528\u4e8e\u5728\u6587\u672c\u5e03\u5c40\u4e2d\u63d2\u5165 Composables\u3002\u67e5\u770b InlineTextContent \u4ee5\u4e86\u89e3\u66f4\u591a\u4fe1\u606f onTextLayout: (TextLayoutResult) -> Unit = {} \u5f53\u8ba1\u7b97\u4e00\u4e2a\u65b0\u7684\u6587\u672c\u5e03\u5c40\u65f6\u6267\u884c\u7684\u56de\u8c03 style: TextStyle = LocalTextStyle.current \u6587\u672c\u7684\u98ce\u683c\u914d\u7f6e\uff0c\u5982\u989c\u8272\u3001\u5b57\u4f53\u3001\u884c\u9ad8\u7b49","title":"2. Text"},{"location":"architecture/architecture_for_compose/","text":"\u672c\u6b21 I/O \u5927\u4f1a\u4e0a\u66dd\u51fa\u4e86 Compose 1.0 \u5373\u5c06\u53d1\u5e03\u7684\u6d88\u606f\uff0c\u867d\u7136 API \u5c42\u9762\u5df2\u8d8b\u4e8e\u7a33\u5b9a\uff0c\u4f46\u771f\u6b63\u8981\u5728\u9879\u76ee\u4e2d\u843d\u5730\u8fd8\u5c11\u4e0d\u4e86\u4e00\u5957\u5408\u7406\u7684\u5e94\u7528\u67b6\u6784\u3002\u4f20\u7edf Android \u5f00\u53d1\u4e2d\u7684 MVP\u3001MVVM \u7b49\u67b6\u6784\u5728\u58f0\u660e\u5f0fUI\u8fd9\u4e00\u65b0\u7269\u79cd\u4e2d\u662f\u5426\u8fd8\u4f9d\u65e7\u53ef\u7528\u5462\uff1f \u672c\u6587\u4ee5\u4e00\u4e2a\u7b80\u5355\u7684\u4e1a\u52a1\u573a\u666f\u4e3a\u4f8b\uff0c\u8bd5\u56fe\u627e\u51fa\u4e00\u79cd\u4e0e Compose \u6700\u5951\u5408\u7684\u67b6\u6784\u6a21\u5f0f Sample : Wanandroid Search App\u57fa\u672c\u529f\u80fd\uff1a\u7528\u6237\u8f93\u5165\u5173\u952e\u5b57\uff0c\u5728 wanandroid \u7f51\u7ad9\u4e2d\u641c\u7d22\u51fa\u76f8\u5173\u5185\u5bb9\u5e76\u5c55\u793a \u529f\u80fd\u867d\u7136\u7b80\u5355\uff0c\u4f46\u662f\u96c6\u5408\u4e86\u6570\u636e\u8bf7\u6c42\u3001UI\u5c55\u793a\u7b49\u5e38\u89c1\u4e1a\u52a1\u573a\u666f\uff0c\u53ef\u7528\u6765\u505aUI\u5c42\u4e0e\u903b\u8f91\u5c42\u7684\u89e3\u8026\u5b9e\u9a8c\u3002 \u524d\u671f\u51c6\u5907\uff1aModel\u5c42 \u5176\u5b9e\u65e0\u8bba MVX \u4e2d X \u5982\u4f55\u53d8\u5316\uff0c Model \u90fd\u53ef\u4ee5\u7528\u540c\u4e00\u5957\u5b9e\u73b0\u3002\u6211\u4eec\u5148\u5b9a\u4e49\u4e00\u4e2a DataRepository \uff0c\u7528\u4e8e\u4ece wanandroid \u83b7\u53d6\u641c\u7d22\u7ed3\u679c\u3002 \u540e\u6587Sample\u4e2d\u7684 Model \u5c42\u90fd\u57fa\u4e8e\u6b64 Repo \u5b9e\u73b0 @ViewModelScoped class DataRepository @Inject constructor (){ private val okhttpClient by lazy { OkHttpClient . Builder (). build () } private val apiService by lazy { Retrofit . Builder () . baseUrl ( \"https://www.wanandroid.com/\" ) . client ( okhttpClient ) . addConverterFactory ( GsonConverterFactory . create ()) . build (). create ( ApiService :: class . java ) } suspend fun getArticlesList ( key : String ) = apiService . getArticlesList ( key ) } Compose\u4e3a\u4ec0\u4e48\u9700\u8981\u67b6\u6784\uff1f \u9996\u5148\uff0c\u5148\u770b\u770b\u4e0d\u501f\u52a9\u4efb\u4f55\u67b6\u6784\u7684 Compose \u4ee3\u7801\u662f\u600e\u6837\u7684\uff1f \u4e0d\u4f7f\u7528\u67b6\u6784\u7684\u60c5\u51b5\u4e0b\uff0c\u903b\u8f91\u4ee3\u7801\u5c06\u4e0eUI\u4ee3\u7801\u5076\u5408\u5728\u4e00\u8d77\uff0c\u5728Compose\u4e2d\u8fd9\u79cd\u5f0a\u7aef\u663e\u5f97\u5c24\u4e3a\u660e\u663e\u3002\u5e38\u89c4 Android \u5f00\u53d1\u9ed8\u8ba4\u5f15\u5165\u4e86 MVC \u601d\u60f3\uff0cXML\u7684\u5e03\u5c40\u65b9\u5f0f\u4f7f\u5f97UI\u5c42\u4e0e\u903b\u8f91\u5c42\u6709\u4e86\u521d\u6b65\u7684\u89e3\u8026\u3002\u4f46\u662f Compose \u4e2d\uff0c\u5e03\u5c40\u548c\u903b\u8f91\u540c\u6837\u90fd\u4f7f\u7528Kotlin\u5b9e\u73b0\uff0c\u5f53\u5e03\u5c40\u4e2d\u5939\u4e86\u6742\u903b\u8f91\uff0c\u754c\u9650\u53d8\u5f97\u66f4\u52a0\u6a21\u7cca\u3002 \u6b64\u5916\uff0cCompose UI\u4e2d\u6df7\u5165\u903b\u8f91\u4ee3\u7801\u4f1a\u5e26\u6765\u66f4\u591a\u7684\u6f5c\u5728\u9690\u60a3\u3002\u7531\u4e8e Composable \u4f1a\u9891\u7e41\u91cd\u7ec4\uff0c\u903b\u8f91\u4ee3\u7801\u4e2d\u5982\u679c\u6d89\u53caI/O \u5c31\u5fc5\u987b\u5f53\u505a SideEffect{} \u5904\u7406\u3001\u4e00\u4e9b\u4e0d\u80fd\u968f\u91cd\u7ec4\u9891\u7e41\u521b\u5efa\u7684\u5bf9\u8c61\u4e5f\u5fc5\u987b\u4f7f\u7528 remember{} \u4fdd\u5b58\uff0c\u5f53\u8fd9\u4e9b\u903b\u8f91\u6563\u843d\u5728UI\u4e2d\u65f6\uff0c\u65e0\u5f62\u4e2d\u589e\u52a0\u4e86\u5f00\u53d1\u8005\u7684\u5fc3\u667a\u8d1f\u62c5\uff0c\u5f88\u5bb9\u6613\u53d1\u751f\u9057\u6f0f\u3002 Sample \u7684\u4e1a\u52a1\u573a\u666f\u7279\u522b\u7b80\u5355\uff0cUI\u4e2d\u51fa\u73b0\u5c11\u8bb8 remember{} \u3001 LaunchedEffect{} \u4f3c\u4e4e\u4e5f\u6ca1\u4ec0\u4e48\u4e0d\u59a5\uff0c\u5bf9\u4e8e\u4e00\u4e9b\u76f8\u5bf9\u7b80\u5355\u7684\u4e1a\u52a1\u573a\u666f\u51fa\u73b0\u4e0b\u9762\u8fd9\u6837\u7684\u4ee3\u7801\u6ca1\u6709\u95ee\u9898\uff1a @Composable fun NoArchitectureResultScreen ( answer : String ) { val isLoading = remember { mutableStateOf ( false ) } val dataRepository = remember { DataRepository () } var result : List < ArticleBean > by remember { mutableStateOf ( emptyList ()) } LaunchedEffect ( Unit ) { isLoading . value = true result = withContext ( Dispatchers . IO ) { dataRepository . getArticlesList ( answer ). data . datas } isLoading . value = false } SearchResultScreen ( result , isLoading . value , answer ) } \u4f46\u662f\uff0c\u5f53\u4e1a\u52a1\u8db3\u591f\u590d\u6742\u65f6\uff0c\u4f60\u4f1a\u53d1\u73b0\u8fd9\u6837\u7684\u4ee3\u7801\u662f\u96be\u4ee5\u5fcd\u53d7\u7684\u3002\u8fd9\u6b63\u5982\u5728 React \u524d\u7aef\u5f00\u53d1\u4e2d\uff0c\u867d\u7136 Hooks \u63d0\u4f9b\u4e86\u5904\u7406\u903b\u8f91\u7684\u80fd\u529b\uff0c\u4f46\u5374\u4f9d\u7136\u65e0\u6cd5\u53d6\u4ee3 Redux\u3002 Android\u4e2d\u7684\u5e38\u89c1\u67b6\u6784\u6a21\u5f0f MVP \u3001 MVVM \u3001 MVI \u662f Android\u4e2d\u7684\u800c\u4e00\u4e9b\u5e38\u89c1\u67b6\u6784\u6a21\u5f0f\uff0c\u5b83\u4eec\u7684\u76ee\u7684\u90fd\u662f\u670d\u52a1\u4e8eUI\u5c42\u4e0e\u903b\u8f91\u5c42\u7684\u89e3\u8026\uff0c\u53ea\u662f\u5728\u89e3\u8026\u65b9\u5f0f\u4e0a\u6709\u6240\u4e0d\u540c\uff0c\u5982\u4f55\u9009\u62e9\u53d6\u51b3\u4e8e\u4f7f\u7528\u8005\u7684\u559c\u597d\u4ee5\u53ca\u9879\u76ee\u7684\u7279\u70b9 \u201c\u6ca1\u6709\u6700\u597d\u7684\u67b6\u6784\uff0c\u53ea\u6709\u6700\u5408\u9002\u7684\u67b6\u6784\u3002\u201d \u90a3\u4e48\u5728 Compose \u9879\u76ee\u4e2d\u4f55\u79cd\u67b6\u6784\u6700\u5408\u9002\u5462\uff1f 1. MVP MVP \u4e3b\u8981\u7279\u70b9\u662f Presenter \u4e0e View \u4e4b\u95f4\u901a\u8fc7\u63a5\u53e3\u901a\u4fe1\uff0c Presenter \u901a\u8fc7\u8c03\u7528 View \u7684\u65b9\u6cd5\u5b9e\u73b0UI\u7684\u66f4\u65b0\u3002 \u8fd9\u8981\u6c42 Presenter \u9700\u8981\u6301\u6709\u4e00\u4e2a View \u5c42\u5bf9\u8c61\u7684\u5f15\u7528\uff0c\u4f46\u662f Compose \u663e\u7136\u65e0\u6cd5\u83b7\u5f97\u8fd9\u79cd\u5f15\u7528\uff0c\u56e0\u4e3a\u7528\u6765\u521b\u5efa UI \u7684 Composable \u5fc5\u987b\u8981\u6c42\u8fd4\u56de Unit\uff0c\u5982\u4e0b\uff1a @Composable fun HomeScreen () { Column { Text ( \"Hello World!\" ) } } \u5b98\u65b9\u6587\u6863\u4e2d\u5bf9\u65e0\u8fd4\u56de\u503c\u7684\u8981\u6c42\u4e5f\u8fdb\u884c\u4e86\u660e\u786e\u7ea6\u675f\uff1a The function doesn\u2019t return anything. Compose functions that emit UI do not need to return anything, because they describe the desired screen state instead of constructing UI widgets. https://developer.android.com/jetpack/compose/mental-model Compose UI \u65e2\u7136\u5b58\u5728\u4e8e Android \u4f53\u7cfb\u4e2d\uff0c\u5fc5\u5b9a\u9700\u8981\u6709\u4e00\u4e2a\u4e0e Android \u4e16\u754c\u8fde\u63a5\u7684\u8d77\u70b9\uff0c\u8d77\u70b9\u5904\u53ef\u80fd\u662f\u4e00\u4e2a Activity \u6216\u8005 Fragment \uff0c\u7528\u4ed6\u4eec\u505aUI\u5c42\u7684\u5f15\u7528\u53e5\u67c4\u4e0d\u53ef\u4ee5\u5417? \u7406\u8bba\u4e0a\u53ef\u4ee5\uff0c\u4f46\u662f\u5f53 Activity \u63a5\u6536 Presenter \u901a\u77e5\u540e\uff0c\u4ecd\u7136\u65e0\u6cd5\u5728\u5185\u90e8\u83b7\u53d6\u5c40\u90e8\u5f15\u7528\uff0c\u53ea\u80fd\u8bbe\u6cd5\u89e6\u53d1\u6574\u4f53Recomposition\uff0c\u8fd9\u5b8c\u5168\u4e27\u5931\u4e86 MVP \u7684\u4f18\u52bf\uff0c\u5373\u901a\u8fc7\u83b7\u53d6\u5c40\u90e8\u5f15\u7528\u8fdb\u884c\u7cbe\u51c6\u5237\u65b0\u3002 \u901a\u8fc7\u5206\u6790\u53ef\u4ee5\u5f97\u5230\u7ed3\u8bba\uff1a \u201cMVP \u8fd9\u79cd\u4f9d\u8d56\u63a5\u53e3\u901a\u4fe1\u7684\u89e3\u8026\u65b9\u5f0f\u65e0\u6cd5\u5728 Compose \u9879\u76ee\u4e2d\u4f7f\u7528\u201d 2. MVVM\uff08Without Jetpack\uff09 \u76f8\u5bf9\u4e8e MVP \u7684\u63a5\u53e3\u901a\u4fe1 \uff0cMVVM \u57fa\u4e8e\u89c2\u5bdf\u8005\u6a21\u5f0f\u8fdb\u884c\u901a\u4fe1\uff0c\u5f53 UI \u89c2\u5bdf\u5230\u6765\u81ea ViewModle \u7684\u6570\u636e\u53d8\u5316\u65f6\u81ea\u6211\u66f4\u65b0\u3002 UI\u5c42\u662f\u5426\u80fd\u8fd4\u56de\u5f15\u7528\u53e5\u67c4\u5df2\u4e0d\u518d\u91cd\u8981\uff0c\u8fd9\u4e0e Compose \u7684\u5de5\u4f5c\u65b9\u5f0f\u975e\u5e38\u5951\u5408\u3002 \u81ea\u4ece Android \u7528 ViewModel \u547d\u540d\u4e86\u67d0 Jetpack \u7ec4\u4ef6\u540e\uff0c\u5728\u5f88\u591a\u4eba\u5fc3\u91cc\uff0cJetpack \u4f3c\u4e4e\u5c31\u4e0e MVVM \u753b\u4e0a\u4e86\u7b49\u53f7\u3002\u8fd9\u786e\u5b9e\u5ba2\u89c2\u63a8\u52a8\u4e86 MVVM \u7684\u666e\u53ca\uff0c\u4f46\u662f Jetpack \u7684 ViewModel \u5e76\u975e\u53ea\u80fd\u7528\u5728 MVVM \u4e2d\uff08\u6bd4\u5982\u5982\u540e\u6587\u4ecb\u7ecd\u7684 MVI \u4e5f\u53ef\u4ee5\u4f7f\u7528 \uff09\uff1b \u53cd\u4e4b\uff0c\u6ca1\u6709 Jetpack \uff0c\u7167\u6837\u53ef\u4ee5\u5b9e\u73b0 MVVM\u3002 \u5148\u6765\u770b\u770b\u4e0d\u501f\u52a9 Jetpack \u7684\u60c5\u51b5\u4e0b\uff0cMVVM \u5982\u4f55\u5b9e\u73b0\uff1f Activity \u4e2d\u521b\u5efa ViewModel \u9996\u5148 View \u5c42\u521b\u5efa ViewModel \u7528\u4e8e\u8ba2\u9605 class MvvmActivity : AppCompatActivity () { private val mvvmViewModel = MvvmViewModel ( DataRepository ()) override fun onCreate ( savedInstanceState : Bundle?) { super . onCreate ( savedInstanceState ) setContent { ComposePlaygroundTheme { MvvmApp ( mvvmViewModel ) //\u5c06vm\u4f20\u7ed9Composable } } } } Compose \u9879\u76ee\u4e00\u822c\u4f7f\u7528\u5355 Activity \u7ed3\u6784\uff0c Activity \u4f5c\u4e3a\u5168\u5c40\u5165\u53e3\u975e\u5e38\u9002\u5408\u521b\u5efa\u5168\u5c40 ViewModel\u3002 \u5b50 Compoable \u4e4b\u95f4\u9700\u8981\u57fa\u4e8e ViewModel \u901a\u4fe1\uff0c\u6240\u4ee5\u6784\u5efa Composable \u65f6\u5c06 ViewModel \u4f5c\u4e3a\u53c2\u6570\u4f20\u5165\u3002 Sample \u4e2d\u6211\u4eec\u5728 Activity \u4e2d\u521b\u5efa\u7684 ViewModel \u4ec5\u4ec5\u662f\u4e3a\u4e86\u4f20\u9012\u7ed9 MvvmApp \u4f7f\u7528\uff0c\u8fd9\u79cd\u60c5\u51b5\u4e0b\u4e5f\u53ef\u4ee5\u901a\u8fc7\u4f20\u9012 Lazy<MvvmViewModel> \uff0c\u5c06\u521b\u5efa\u5ef6\u8fdf\u5230\u771f\u6b63\u9700\u8981\u4f7f\u7528\u7684\u65f6\u5019\u4ee5\u63d0\u9ad8\u6027\u80fd\u3002 \u5b9a\u4e49 NavGraph \u5f53\u6d89\u53ca\u5230 Compose \u9875\u9762\u5207\u6362\u65f6\uff0c navigation-compose \u662f\u4e00\u4e2a\u4e0d\u9519\u9009\u62e9\uff0cSample\u4e2d\u4e5f\u7279\u610f\u8bbe\u8ba1\u4e86 SearchBarScreen \u548c SearchResultScreen \u7684\u5207\u6362\u573a\u666f // build.gradle implementation \"androidx.navigation:navigation-compose:$latest_version\" @Composable fun MvvmApp ( mvvmViewModel : MvvmViewModel ) { val navController = rememberNavController () LaunchedEffect ( Unit ) { mvvmViewModel . navigateToResults . collect { navController . navigate ( \"result\" ) //\u8ba2\u9605VM\u8def\u7531\u4e8b\u4ef6\u901a\u77e5\uff0c\u5904\u7406\u8def\u7531\u8df3\u8f6c } } NavHost ( navController , startDestination = \"searchBar\" ) { composable ( \"searchBar\" ) { MvvmSearchBarScreen ( mvvmViewModel , ) } composable ( \"result\" ) { MvvmSearchResultScreen ( mvvmViewModel , ) } } } - \u5728 root-level \u7684 MvvmApp \u4e2d\u5b9a\u4e49 NavGraph \uff0c composable(\"$dest_id\"){} \u4e2d\u6784\u9020\u8def\u7531\u8282\u70b9\u7684\u5404\u4e2a\u5b50 Screen\uff0c\u6784\u9020\u65f6\u4f20\u5165 ViewModel \u7528\u4e8e Screen \u4e4b\u95f4\u7684\u901a\u4fe1 \u6bcf\u4e2a Composable \u90fd\u6709\u4e00\u4e2a CoroutineScope \u4e0e\u5176 Lifecycle \u7ed1\u5b9a\uff0c LaunchedEffect{} \u53ef\u4ee5\u5728\u8fd9\u4e2a Scope \u4e2d\u542f\u52a8\u534f\u7a0b\u5904\u7406\u526f\u4f5c\u7528\u3002 \u4ee3\u7801\u4e2d\u4f7f\u7528\u4e86\u4e00\u4e2a\u53ea\u6267\u884c\u4e00\u6b21\u7684 Effect \u8ba2\u9605 ViewModel \u7684\u8def\u7531\u4e8b\u4ef6\u901a\u77e5 \u5f53\u7136\u6211\u4eec\u53ef\u4ee5\u5c06 navConroller \u4e5f\u4f20\u7ed9 MvvmSearchBarScreen \uff0c\u5728\u5176\u5185\u90e8\u76f4\u63a5\u53d1\u8d77\u8def\u7531\u8df3\u8f6c\u3002\u4f46\u5728\u8f83\u590d\u6742\u7684\u9879\u76ee\u4e2d\uff0c\u8df3\u8f6c\u903b\u8f91\u4e0e\u9875\u9762\u5b9a\u4e49\u5e94\u8be5\u5c3d\u91cf\u4fdd\u6301\u89e3\u8026\uff0c\u8fd9\u66f4\u5229\u4e8e\u9875\u9762\u7684\u590d\u7528\u548c\u6d4b\u8bd5\u3002 \u6211\u4eec\u4e5f\u53ef\u4ee5\u5728 Composeable \u4e2d\u76f4\u63a5 mutableStateOf() \u521b\u5efa state \u6765\u5904\u7406\u8def\u7531\u8df3\u8f6c\uff0c\u4f46\u662f\u65e2\u7136\u9009\u62e9\u4f7f\u7528 ViewModel \u4e86\uff0c\u90a3\u5c31\u5e94\u8be5\u5c3d\u53ef\u80fd\u5c06\u6240\u6709 state \u96c6\u4e2d\u5230 ViewModle \u7ba1\u7406\u3002 \u6ce8\u610f: \u4e0a\u9762\u4f8b\u5b50\u4e2d\u7684\u5904\u7406\u8def\u7531\u8df3\u8f6c\u7684 navigateToResults \u662f\u4e00\u4e2a\u201c\u4e8b\u4ef6\u201d\u800c\u975e\u201c\u72b6\u6001\u201d\uff0c\u5173\u4e8e\u8fd9\u90e8\u5206\u533a\u522b\uff0c\u5728\u540e\u6587\u5728\u8be6\u7ec6\u9610\u8ff0 \u5b9a\u4e49\u5b50 Screen \u63a5\u4e0b\u6765\u770b\u4e00\u4e0b\u4e24\u4e2a Screen \u7684\u5177\u4f53\u5b9e\u73b0 @Composable fun MvvmSearchBarScreen ( mvvmViewModel : MvvmViewModel , ) { SearchBarScreen { mvvmViewModel . searchKeyword ( it ) } } @Composable fun MvvmSearchResultScreen ( mvvmViewModel : MvvmViewModel ) { val result by mvvmViewModel . result . collectAsState () val isLoading by mvvmViewModel . isLoading . collectAsState () SearchResultScreen ( result , isLoading , mvvmViewModel . key . value ) } \u5927\u91cf\u903b\u8f91\u90fd\u62bd\u8c61\u5230 ViewModel \u4e2d\uff0c\u6240\u4ee5 Screen \u975e\u5e38\u7b80\u6d01 SearchBarScreen \u63a5\u53d7\u7528\u6237\u8f93\u5165\uff0c\u5c06\u641c\u7d22\u5173\u952e\u8bcd\u53d1\u9001\u7ed9 ViewModel MvvmSearchResultScreen \u4f5c\u4e3a\u7ed3\u679c\u9875\u663e\u793a ViewModel \u53d1\u9001\u7684\u6570\u636e\uff0c\u5305\u62ec Loading \u72b6\u6001\u548c\u641c\u7d22\u7ed3\u679c\u7b49\u3002 collectAsState \u7528\u6765\u5c06 Flow \u8f6c\u5316\u4e3a Compose \u7684 state\uff0c\u6bcf\u5f53 Flow \u63a5\u6536\u5230\u65b0\u6570\u636e\u65f6\u4f1a\u89e6\u53d1 Composable \u91cd\u7ec4\u3002 Compose \u540c\u65f6\u652f\u6301 LiveData\u3001RxJava \u7b49\u5176\u4ed6\u54cd\u5e94\u5f0f\u5e93\u7684 collectAsState UI\u5c42\u7684\u66f4\u591a\u5185\u5bb9\u53ef\u4ee5\u67e5\u9605 SearchBarScreen \u548c SearchResultScreen \u7684\u6e90\u7801\u3002\u7ecf\u8fc7\u903b\u8f91\u62bd\u79bb\u540e\uff0c\u8fd9\u4e24\u4e2a Composable \u53ea\u5269\u4f59\u5e03\u5c40\u76f8\u5173\u7684\u4ee3\u7801\uff0c\u53ef\u4ee5\u5728\u4efb\u4f55\u4e00\u79cd MVX \u4e2d\u5b9e\u73b0\u590d\u7528\u3002 ViewModel \u5b9e\u73b0 \u6700\u540e\u770b\u4e00\u4e0b ViewModel \u7684\u5b9e\u73b0 class MvvmViewModel ( private val searchService : DataRepository , ) { private val coroutineScope = MainScope () private val _isLoading : MutableStateFlow < Boolean > = MutableStateFlow ( false ) val isLoading = _isLoading . asStateFlow () private val _result : MutableStateFlow < List < ArticleBean >> = MutableStateFlow ( emptyList ()) val result = _result . asStateFlow () private val _key = MutableStateFlow ( \"\" ) val key = _key . asStateFlow () //\u4f7f\u7528Channel\u5b9a\u4e49\u4e8b\u4ef6 private val _navigateToResults = Channel < Boolean > ( Channel . BUFFERED ) val navigateToResults = _navigateToResults . receiveAsFlow () fun searchKeyword ( input : String ) { coroutineScope . launch { _isLoading . value = true _navigateToResults . send ( true ) _key . value = input val result = withContext ( Dispatchers . IO ) { searchService . getArticlesList ( input ) } _result . emit ( result . data . datas ) _isLoading . value = false } } } - \u63a5\u6536\u5230\u7528\u6237\u8f93\u5165\u540e\uff0c\u901a\u8fc7 DataRepository \u53d1\u8d77\u641c\u7d22\u8bf7\u6c42 \u641c\u7d22\u8fc7\u7a0b\u4e2d\u4f9d\u6b21\u66f4\u65b0 loading \uff08loading\u663e\u793a\u72b6\u6001\uff09\u3001 navigateToResult (\u9875\u9762\u8df3\u8f6c\u4e8b\u4ef6)\u3001 key \uff08\u641c\u7d22\u5173\u952e\u8bcd\uff09\u3001 result \uff08\u641c\u7d22\u7ed3\u679c\uff09\u7b49\u5185\u5bb9\uff0c\u4e0d\u65ad\u9a71\u52a8UI\u5237\u65b0 \u6240\u6709\u72b6\u6001\u96c6\u4e2d\u5728 ViewModel \u7ba1\u7406\uff0c\u751a\u81f3\u9875\u9762\u8df3\u8f6c\u3001Toast\u5f39\u51fa\u7b49\u4e8b\u4ef6\u4e5f\u7531 ViewModel \u8d1f\u8d23\u901a\u77e5\uff0c\u8fd9\u5bf9\u5355\u5143\u6d4b\u8bd5\u975e\u5e38\u53cb\u597d\uff0c\u5728\u5355\u6d4b\u4e2d\u65e0\u9700\u518d mock \u5404\u79cdUI\u76f8\u5173\u7684\u4e0a\u4e0b\u6587\u3002 3. Jetpack MVVM Jeptack \u7684\u610f\u4e49\u5728\u4e8e\u964d\u4f4e MVVM \u5728 Android\u5e73\u53f0\u7684\u843d\u5730\u6210\u672c\u3002 \u5f15\u5165 Jetpack \u540e\u7684\u4ee3\u7801\u53d8\u5316\u4e0d\u5927\uff0c\u4e3b\u8981\u53d8\u52a8\u5728\u4e8e ViewModel \u7684\u521b\u5efa\u3002 Jetpack \u63d0\u4f9b\u4e86\u591a\u4e2a\u7ec4\u4ef6\uff0c\u964d\u4f4e\u4e86 ViewModel \u7684\u4f7f\u7528\u6210\u672c\uff1a - \u901a\u8fc7 hilt \u7684 DI \u964d\u4f4e ViewModel \u6784\u9020\u6210\u672c\uff0c\u65e0\u9700\u624b\u52a8\u4f20\u5165 DataRepository \u7b49\u4f9d\u8d56 - \u4efb\u610f Composable \u90fd\u53ef\u4ee5\u4ece\u6700\u8fd1\u7684 Scope \u4e2d\u83b7\u53d6 ViewModel\uff0c\u65e0\u9700\u5c42\u5c42\u4f20\u53c2\u3002 @HiltViewModel class JetpackMvvmViewModel @Inject constructor ( private val searchService : DataRepository // DataRepository \u4f9d\u9760DI\u6ce8\u5165 ) : ViewModel () { ... } @Composable fun JetpackMvvmApp () { val navController = rememberNavController () NavHost ( navController , startDestination = \"searchBar\" , route = \"root\" ) { composable ( \"searchBar\" ) { JetpackMvvmSearchBarScreen ( viewModel ( navController , \"root\" ) //viewModel \u53ef\u4ee5\u5728\u9700\u8981\u65f6\u518d\u83b7\u53d6, \u65e0\u9700\u5b9e\u73b0\u521b\u5efa\u597d\u5e76\u901a\u8fc7\u53c2\u6570\u4f20\u8fdb\u6765 ) } composable ( \"result\" ) { JetpackMvvmSearchResultScreen ( viewModel ( navController , \"root\" ) //\u53ef\u4ee5\u83b7\u53d6\u8ddf\u540c\u4e00\u4e2aViewModel\u5b9e\u4f8b ) } } } @Composable inline fun < reified VM : ViewModel > viewModel ( navController : NavController , graphId : String = \"\" ): VM = //\u5728 NavGraph \u5168\u5c40\u8303\u56f4\u4f7f\u7528 Hilt \u521b\u5efa ViewModel hiltNavGraphViewModel ( backStackEntry = navController . getBackStackEntry ( graphId ) ) Jetpack \u751a\u81f3\u63d0\u4f9b\u4e86 hilt-navigation-compose \u5e93\uff0c\u53ef\u4ee5\u5728 Composable \u4e2d\u83b7\u53d6 NavGraph Scope \u6216 Destination Scope \u7684 ViewModel\uff0c\u5e76\u81ea\u52a8\u4f9d\u8d56 Hilt \u6784\u5efa\u3002Destination Scope \u7684 ViewModel \u4f1a\u8ddf\u968f BackStack \u7684\u5f39\u51fa\u81ea\u52a8 Clear \uff0c\u907f\u514d\u6cc4\u9732\u3002 // build.gradle implementation androidx . hilt : hilt - navigation - compose: $latest_versioin \u201c\u672a\u6765 Jetpack \u5404\u7ec4\u4ef6\u4e4b\u95f4\u534f\u540c\u6548\u5e94\u4f1a\u53d8\u5f97\u8d8a\u6765\u8d8a\u5f3a\u3002\u201d \u53c2\u8003 https://developer.android.com/jetpack/compose/libraries#hilt MVI MVI \u4e0e MVVM \u5f88\u76f8\u4f3c\uff0c\u5176\u501f\u9274\u4e86\u524d\u7aef\u6846\u67b6\u7684\u601d\u60f3\uff0c\u66f4\u52a0\u5f3a\u8c03 \u6570\u636e\u7684\u5355\u5411\u6d41\u52a8 \u548c \u552f\u4e00\u6570\u636e\u6e90 \uff0c\u53ef\u4ee5\u770b\u505a\u662f MVVM + Redux \u7684\u7ed3\u5408\u3002 MVI \u7684 I \u6307 Intent\uff0c\u8fd9\u91cc\u4e0d\u662f\u542f\u52a8 Activity \u90a3\u4e2a Intent\uff0c\u800c\u662f\u4e00\u79cd\u5bf9\u7528\u6237\u64cd\u4f5c\u7684\u5c01\u88c5\u5f62\u5f0f\uff0c\u4e3a\u907f\u514d\u6df7\u6dc6\uff0c\u4e5f\u53ef\u5524\u505a Action \u7b49\u5176\u4ed6\u79f0\u547c\u3002 \u7528\u6237\u64cd\u4f5c\u4ee5 Action \u7684\u5f62\u5f0f\u9001\u7ed9 Model\u5c42 \u8fdb\u884c\u5904\u7406\u3002\u4ee3\u7801\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u7528 Jetpack \u7684 ViewModel \u8d1f\u8d23 Intent \u7684\u63a5\u53d7\u548c\u5904\u7406\uff0c\u56e0\u4e3a ViewModel \u53ef\u4ee5\u5728 Composable \u4e2d\u65b9\u4fbf\u83b7\u53d6\u3002 \u5728 SearchBarScreen \u7528\u6237\u8f93\u5165\u5173\u952e\u8bcd\u540e\u901a\u8fc7 Action \u901a\u77e5 ViewModel \u8fdb\u884c\u641c\u7d22 @Composable fun MviSearchBarScreen ( mviViewModel : MviViewModel , onConfirm : () -> Unit ) { SearchBarScreen { mviViewModel . onAction ( MviViewModel . UiAction . SearchInput ( it )) } } \u901a\u8fc7 Action \u901a\u4fe1\uff0c\u6709\u5229\u4e8e View \u4e0e ViewModel \u4e4b\u95f4\u7684\u8fdb\u4e00\u6b65\u89e3\u8026\uff0c\u540c\u65f6\u6240\u6709\u8c03\u7528\u4ee5 Action \u7684\u5f62\u5f0f\u6c47\u603b\u5230\u4e00\u5904\uff0c\u4e5f\u6709\u5229\u4e8e\u5bf9\u884c\u4e3a\u7684\u96c6\u4e2d\u5206\u6790\u548c\u76d1\u63a7 @Composable fun MviSearchResultScreen ( mviViewModel : MviViewModel ) { val viewState by mviViewModel . viewState . collectAsState () SearchResultScreen ( viewState . result , viewState . isLoading , viewState . key ) } MVVM \u7684 ViewModle \u4e2d\u5206\u6563\u5b9a\u4e49\u4e86\u591a\u4e2a State \uff0cMVI \u4f7f\u7528 ViewState \u5bf9 State \u96c6\u4e2d\u7ba1\u7406\uff0c\u53ea\u9700\u8981\u8ba2\u9605\u4e00\u4e2a ViewState \u4fbf\u53ef\u83b7\u53d6\u9875\u9762\u7684\u6240\u6709\u72b6\u6001\uff0c\u76f8\u5bf9 MVVM \u51cf\u5c11\u4e86\u4e0d\u5c11\u6a21\u677f\u4ee3\u7801\u3002 \u76f8\u5bf9\u4e8e MVVM\uff0cViewModel \u4e5f\u6709\u4e00\u4e9b\u53d8\u5316 class MviViewModel ( private val searchService : DataRepository , ) { private val coroutineScope = MainScope () private val _viewState : MutableStateFlow < ViewState > = MutableStateFlow ( ViewState ()) val viewState = _viewState . asStateFlow () private val _navigateToResults = Channel < OneShotEvent > ( Channel . BUFFERED ) val navigateToResults = _navigateToResults . receiveAsFlow () fun onAction ( uiAction : UiAction ) { when ( uiAction ) { is UiAction . SearchInput -> { coroutineScope . launch { _viewState . value = _viewState . value . copy ( isLoading = true ) val result = withContext ( Dispatchers . IO ) { searchService . getArticlesList ( uiAction . input ) } _viewState . value = _viewState . value . copy ( result = result . data . datas , key = uiAction . input ) _navigateToResults . send ( OneShotEvent . NavigateToResults ) _viewState . value = _viewState . value . copy ( isLoading = false ) } } } } data class ViewState ( val isLoading : Boolean = false , val result : List < ArticleBean > = emptyList (), val key : String = \"\" ) sealed class OneShotEvent { object NavigateToResults : OneShotEvent () } sealed class UiAction { class SearchInput ( val input : String ) : UiAction () } } \u9875\u9762\u6240\u6709\u7684\u72b6\u6001\u90fd\u5b9a\u4e49\u5728 ViewState \u8fd9\u4e2a data class \u4e2d\uff0c\u72b6\u6001\u7684\u4fee\u6539\u53ea\u80fd\u5728 onAction \u4e2d\u8fdb\u884c, \u5176\u4f59\u573a\u6240\u90fd\u662f immutable \u7684\uff0c \u4fdd\u8bc1\u4e86\u6570\u636e\u6d41\u53ea\u80fd\u5355\u5411\u4fee\u6539\u3002 \u53cd\u89c2 MVVM \uff0c MutableStateFlow \u5bf9\u5916\u66b4\u9732\u65f6\u8f6c\u6210 immutable \u624d\u80fd\u4fdd\u8bc1\u8fd9\u79cd\u5b89\u5168\u6027\uff0c\u9700\u8981\u589e\u52a0\u4e0d\u5c11\u6a21\u677f\u4ee3\u7801\u4e14\u4ecd\u7136\u5bb9\u6613\u9057\u6f0f\u3002 \u4e8b\u4ef6\u5219\u7edf\u4e00\u5b9a\u4e49\u5728 OneShotEvent \u4e2d\u3002 Event \u4e0d\u540c\u4e8e State\uff0c\u540c\u4e00\u7c7b\u578b\u7684\u4e8b\u4ef6\u5141\u8bb8\u54cd\u5e94\u591a\u6b21\uff0c\u56e0\u6b64\u5b9a\u4e49\u4e8b\u4ef6\u4f7f\u7528 Channel \u800c\u4e0d\u662f StateFlow \u3002 Compose \u9f13\u52b1\u591a\u4f7f\u7528 State \u5c11\u4f7f\u7528 Event\uff0c Event \u53ea\u9002\u5408\u7528\u5728\u5f39 Toast \u7b49\u5c11\u6570\u573a\u666f\u4e2d \u901a\u8fc7\u6d4f\u89c8 ViewModel \u7684 ViewState \u548c Aciton \u5b9a\u4e49\u5c31\u53ef\u4ee5\u7406\u6e05 ViewModel \u7684\u804c\u8d23\uff0c\u53ef\u4ee5\u76f4\u63a5\u62ff\u6765\u4f5c\u4e3a\u63a5\u53e3\u6587\u6863\u4f7f\u7528\u3002 \u9875\u9762\u8def\u7531 Sample \u4e2d\u4e4b\u6240\u4ee5\u4f7f\u7528\u4e8b\u4ef6\u800c\u975e\u72b6\u6001\u6765\u5904\u7406\u8def\u7531\u8df3\u8f6c\uff0c\u4e00\u4e2a\u4e3b\u8981\u539f\u56e0\u662f\u7531\u4e8e\u4f7f\u7528\u4e86 Navigation \u3002Navigation \u6709\u81ea\u5df1\u7684 backstack \u7ba1\u7406\uff0c\u5f53\u70b9\u51fb back \u952e\u65f6\u4f1a\u81ea\u52a8\u5e2e\u52a9\u6211\u4eec\u8fd4\u56de\u524d\u4e00\u9875\u9762\u3002\u5018\u82e5\u6211\u4eec\u4f7f\u7528\u72b6\u6001\u6765\u63cf\u8ff0\u5f53\u524d\u9875\u9762\uff0c\u5f53\u70b9\u51fb back\u65f6\uff0c\u6ca1\u6709\u673a\u4f1a\u66f4\u65b0\u72b6\u6001\uff0c\u8fd9\u5c06\u9020\u6210 ViewState \u4e0e UI \u7684\u4e0d\u4e00\u81f4\u3002 \u5173\u4e8e\u8def\u7531\u65b9\u6848\u7684\u5efa\u8bae\uff1a\u7b80\u5355\u9879\u76ee\u4f7f\u7528 \u4e8b\u4ef6 \u63a7\u5236\u9875\u9762\u8df3\u8f6c\u6ca1\u6709\u95ee\u9898\uff0c\u4f46\u662f\u5bf9\u4e8e\u590d\u6742\u9879\u76ee\uff0c\u63a8\u8350\u4f7f\u7528 \u72b6\u6001 \u8fdb\u884c\u9875\u9762\u7ba1\u7406\uff0c\u6709\u5229\u4e8e\u903b\u8f91\u5c42\u65f6\u523b\u611f\u77e5\u5230\u5f53\u524d\u7684UI\u72b6\u6001\u3002 \u6211\u4eec\u53ef\u4ee5\u5c06 NavController \u7684 backstack \u72b6\u6001 \u4e0e ViewModel \u7684\u72b6\u6001\u5efa\u7acb\u540c\u6b65\uff1a class MvvmViewModel ( private val searchService : DataRepository , ) { ... //\u4f7f\u7528 StateFlow \u63cf\u8ff0\u9875\u9762 private val _destination = MutableStateFlow ( DestSearchBar ) val destination = _destination . asStateFlow () fun searchKeyword ( input : String ) { coroutineScope . launch { ... _destination . value = DestSearchResult ... } } fun bindNavStack ( navController : NavController ) { //navigation \u7684\u72b6\u6001\u65f6\u523b\u540c\u6b65\u5230 viewModel navController . addOnDestinationChangedListener { _ , _ , arguments -> run { _destination . value = requireNotNull ( arguments ?. getString ( KEY_ROUTE )) } } } } \u5982\u4e0a\uff0c\u5f53 navigation \u72b6\u6001\u53d8\u5316\u65f6\uff0c\u4f1a\u53ca\u65f6\u540c\u6b65\u5230 ViewModel \uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u4f7f\u7528 StateFlow \u800c\u975e Channel \u6765\u63cf\u8ff0\u9875\u9762\u72b6\u6001\u4e86\u3002 @Composable fun MvvmApp ( mvvmViewModel : MvvmViewModel ) { val navController = rememberNavController () LaunchedEffect ( Unit ) { with ( mvvmViewModel ) { bindNavStack ( navController ) //\u5efa\u7acb\u540c\u6b65 destination . collect { navController . navigate ( it ) } } } } \u5728\u5165\u53e3\u5904\uff0c\u4e3a NavController \u548c ViewModel \u5efa\u7acb\u540c\u6b65\u7ed1\u5b9a\u5373\u53ef\u3002 Clean Architecture \u66f4\u5927\u578b\u7684\u9879\u76ee\u4e2d\uff0c\u4f1a\u5f15\u5165 Clean Architecture \uff0c\u901a\u8fc7 Use Case \u5c06 ViewModel \u5185\u7684\u903b\u8f91\u8fdb\u4e00\u6b65\u5206\u89e3\u3002 Compose \u53ea\u662f\u4e2a UI \u6846\u67b6\uff0c\u5bf9\u4e8e ViewModle \u4ee5\u4e0b\u7684\u903b\u8f91\u5c42\u7684\u6cbb\u7406\u65b9\u5f0f\u4e0e\u4f20\u7edf\u7684 Andorid \u5f00\u53d1\u6ca1\u6709\u533a\u522b\u3002\u6240\u4ee5 Clean Architecture \u8fd9\u6837\u7684\u590d\u6742\u67b6\u6784\u4ecd\u7136\u53ef\u4ee5\u5728 Compose \u9879\u76ee\u4e2d\u4f7f\u7528 \u603b\u7ed3 \u6bd4\u8f83\u4e86\u8fd9\u4e48\u591a\u79cd\u67b6\u6784\uff0c\u90a3\u79cd\u4e0e Compose \u6700\u5951\u5408\u5462\uff1f Compose \u7684\u58f0\u660e\u5f0fUI\u601d\u60f3\u6765\u81ea React\uff0c\u6240\u4ee5\u540c\u6837\u6765\u81ea Redux \u601d\u60f3\u7684 MVI \u5e94\u8be5\u662f Compose \u7684\u6700\u4f73\u4f34\u4fa3\u3002\u5f53\u7136 MVI \u53ea\u662f\u5728 MVVM \u7684\u57fa\u7840\u4e0a\u505a\u4e86\u4e00\u4e9b\u6539\u826f\uff0c\u5982\u679c\u4f60\u5df2\u7ecf\u6709\u4e86\u4e00\u4e2a MVVM \u7684\u9879\u76ee\uff0c\u53ea\u662f\u60f3\u5c06 UI \u90e8\u5206\u6539\u9020\u6210 Compose \uff0c\u90a3\u4e48\u6ca1\u5fc5\u8981\u4e3a\u4e86\u6539\u9020\u6210 MVI \u800c\u8fdb\u884c\u91cd\u6784\uff0cMVVM \u4e5f\u53ef\u4ee5\u5f88\u597d\u5730\u914d\u5408 Compose \u4f7f\u7528\u7684\u3002 \u4f46\u662f\u5982\u679c\u4f60\u60f3\u5c06\u4e00\u4e2a MVP \u9879\u76ee\u6539\u9020\u6210 Compose \u53ef\u80fd\u6210\u672c\u5c31\u6709\u70b9\u5927\u4e86\u3002 \u5173\u4e8e Jetpack\uff0c\u5982\u679c\u4f60\u7684\u9879\u76ee\u53ea\u7528\u4e8e Android\uff0c\u90a3\u4e48 Jetpack \u65e0\u7591\u662f\u4e00\u4e2a\u597d\u5de5\u5177\u3002\u4f46\u662f Compose \u672a\u6765\u7684\u5e94\u7528\u573a\u666f\u5c06\u4f1a\u5f88\u5e7f\u6cdb\uff0c\u5982\u679c\u4f60\u6709\u9884\u671f\u672a\u6765\u4f1a\u914d\u5408 KMP \u5f00\u53d1\u8de8\u5e73\u53f0\u5e94\u7528\uff0c\u90a3\u4e48\u5c31\u9700\u8981\u5b66\u4f1a\u4e0d\u4f9d\u8d56 Jetpack \u7684\u5f00\u53d1\u65b9\u5f0f\uff0c\u8fd9\u4e5f\u662f\u672c\u6587\u4e3a\u4ec0\u4e48\u8981\u4ecb\u7ecd\u975e Jetpack \u4e0b\u7684 MVVM \u7684\u4e00\u4e2a\u521d\u8877\u3002 Sample \u4ee3\u7801\uff1a \u70b9\u51fb\u8fd9\u91cc","title":"Compose\u67b6\u6784\u5982\u4f55\u9009\uff1fMVP,MVVM,MVI"},{"location":"architecture/architecture_for_compose/#sample-wanandroid-search","text":"App\u57fa\u672c\u529f\u80fd\uff1a\u7528\u6237\u8f93\u5165\u5173\u952e\u5b57\uff0c\u5728 wanandroid \u7f51\u7ad9\u4e2d\u641c\u7d22\u51fa\u76f8\u5173\u5185\u5bb9\u5e76\u5c55\u793a \u529f\u80fd\u867d\u7136\u7b80\u5355\uff0c\u4f46\u662f\u96c6\u5408\u4e86\u6570\u636e\u8bf7\u6c42\u3001UI\u5c55\u793a\u7b49\u5e38\u89c1\u4e1a\u52a1\u573a\u666f\uff0c\u53ef\u7528\u6765\u505aUI\u5c42\u4e0e\u903b\u8f91\u5c42\u7684\u89e3\u8026\u5b9e\u9a8c\u3002","title":"Sample :  Wanandroid Search"},{"location":"architecture/architecture_for_compose/#model","text":"\u5176\u5b9e\u65e0\u8bba MVX \u4e2d X \u5982\u4f55\u53d8\u5316\uff0c Model \u90fd\u53ef\u4ee5\u7528\u540c\u4e00\u5957\u5b9e\u73b0\u3002\u6211\u4eec\u5148\u5b9a\u4e49\u4e00\u4e2a DataRepository \uff0c\u7528\u4e8e\u4ece wanandroid \u83b7\u53d6\u641c\u7d22\u7ed3\u679c\u3002 \u540e\u6587Sample\u4e2d\u7684 Model \u5c42\u90fd\u57fa\u4e8e\u6b64 Repo \u5b9e\u73b0 @ViewModelScoped class DataRepository @Inject constructor (){ private val okhttpClient by lazy { OkHttpClient . Builder (). build () } private val apiService by lazy { Retrofit . Builder () . baseUrl ( \"https://www.wanandroid.com/\" ) . client ( okhttpClient ) . addConverterFactory ( GsonConverterFactory . create ()) . build (). create ( ApiService :: class . java ) } suspend fun getArticlesList ( key : String ) = apiService . getArticlesList ( key ) }","title":"\u524d\u671f\u51c6\u5907\uff1aModel\u5c42"},{"location":"architecture/architecture_for_compose/#compose","text":"\u9996\u5148\uff0c\u5148\u770b\u770b\u4e0d\u501f\u52a9\u4efb\u4f55\u67b6\u6784\u7684 Compose \u4ee3\u7801\u662f\u600e\u6837\u7684\uff1f \u4e0d\u4f7f\u7528\u67b6\u6784\u7684\u60c5\u51b5\u4e0b\uff0c\u903b\u8f91\u4ee3\u7801\u5c06\u4e0eUI\u4ee3\u7801\u5076\u5408\u5728\u4e00\u8d77\uff0c\u5728Compose\u4e2d\u8fd9\u79cd\u5f0a\u7aef\u663e\u5f97\u5c24\u4e3a\u660e\u663e\u3002\u5e38\u89c4 Android \u5f00\u53d1\u9ed8\u8ba4\u5f15\u5165\u4e86 MVC \u601d\u60f3\uff0cXML\u7684\u5e03\u5c40\u65b9\u5f0f\u4f7f\u5f97UI\u5c42\u4e0e\u903b\u8f91\u5c42\u6709\u4e86\u521d\u6b65\u7684\u89e3\u8026\u3002\u4f46\u662f Compose \u4e2d\uff0c\u5e03\u5c40\u548c\u903b\u8f91\u540c\u6837\u90fd\u4f7f\u7528Kotlin\u5b9e\u73b0\uff0c\u5f53\u5e03\u5c40\u4e2d\u5939\u4e86\u6742\u903b\u8f91\uff0c\u754c\u9650\u53d8\u5f97\u66f4\u52a0\u6a21\u7cca\u3002 \u6b64\u5916\uff0cCompose UI\u4e2d\u6df7\u5165\u903b\u8f91\u4ee3\u7801\u4f1a\u5e26\u6765\u66f4\u591a\u7684\u6f5c\u5728\u9690\u60a3\u3002\u7531\u4e8e Composable \u4f1a\u9891\u7e41\u91cd\u7ec4\uff0c\u903b\u8f91\u4ee3\u7801\u4e2d\u5982\u679c\u6d89\u53caI/O \u5c31\u5fc5\u987b\u5f53\u505a SideEffect{} \u5904\u7406\u3001\u4e00\u4e9b\u4e0d\u80fd\u968f\u91cd\u7ec4\u9891\u7e41\u521b\u5efa\u7684\u5bf9\u8c61\u4e5f\u5fc5\u987b\u4f7f\u7528 remember{} \u4fdd\u5b58\uff0c\u5f53\u8fd9\u4e9b\u903b\u8f91\u6563\u843d\u5728UI\u4e2d\u65f6\uff0c\u65e0\u5f62\u4e2d\u589e\u52a0\u4e86\u5f00\u53d1\u8005\u7684\u5fc3\u667a\u8d1f\u62c5\uff0c\u5f88\u5bb9\u6613\u53d1\u751f\u9057\u6f0f\u3002 Sample \u7684\u4e1a\u52a1\u573a\u666f\u7279\u522b\u7b80\u5355\uff0cUI\u4e2d\u51fa\u73b0\u5c11\u8bb8 remember{} \u3001 LaunchedEffect{} \u4f3c\u4e4e\u4e5f\u6ca1\u4ec0\u4e48\u4e0d\u59a5\uff0c\u5bf9\u4e8e\u4e00\u4e9b\u76f8\u5bf9\u7b80\u5355\u7684\u4e1a\u52a1\u573a\u666f\u51fa\u73b0\u4e0b\u9762\u8fd9\u6837\u7684\u4ee3\u7801\u6ca1\u6709\u95ee\u9898\uff1a @Composable fun NoArchitectureResultScreen ( answer : String ) { val isLoading = remember { mutableStateOf ( false ) } val dataRepository = remember { DataRepository () } var result : List < ArticleBean > by remember { mutableStateOf ( emptyList ()) } LaunchedEffect ( Unit ) { isLoading . value = true result = withContext ( Dispatchers . IO ) { dataRepository . getArticlesList ( answer ). data . datas } isLoading . value = false } SearchResultScreen ( result , isLoading . value , answer ) } \u4f46\u662f\uff0c\u5f53\u4e1a\u52a1\u8db3\u591f\u590d\u6742\u65f6\uff0c\u4f60\u4f1a\u53d1\u73b0\u8fd9\u6837\u7684\u4ee3\u7801\u662f\u96be\u4ee5\u5fcd\u53d7\u7684\u3002\u8fd9\u6b63\u5982\u5728 React \u524d\u7aef\u5f00\u53d1\u4e2d\uff0c\u867d\u7136 Hooks \u63d0\u4f9b\u4e86\u5904\u7406\u903b\u8f91\u7684\u80fd\u529b\uff0c\u4f46\u5374\u4f9d\u7136\u65e0\u6cd5\u53d6\u4ee3 Redux\u3002","title":"Compose\u4e3a\u4ec0\u4e48\u9700\u8981\u67b6\u6784\uff1f"},{"location":"architecture/architecture_for_compose/#android","text":"MVP \u3001 MVVM \u3001 MVI \u662f Android\u4e2d\u7684\u800c\u4e00\u4e9b\u5e38\u89c1\u67b6\u6784\u6a21\u5f0f\uff0c\u5b83\u4eec\u7684\u76ee\u7684\u90fd\u662f\u670d\u52a1\u4e8eUI\u5c42\u4e0e\u903b\u8f91\u5c42\u7684\u89e3\u8026\uff0c\u53ea\u662f\u5728\u89e3\u8026\u65b9\u5f0f\u4e0a\u6709\u6240\u4e0d\u540c\uff0c\u5982\u4f55\u9009\u62e9\u53d6\u51b3\u4e8e\u4f7f\u7528\u8005\u7684\u559c\u597d\u4ee5\u53ca\u9879\u76ee\u7684\u7279\u70b9 \u201c\u6ca1\u6709\u6700\u597d\u7684\u67b6\u6784\uff0c\u53ea\u6709\u6700\u5408\u9002\u7684\u67b6\u6784\u3002\u201d \u90a3\u4e48\u5728 Compose \u9879\u76ee\u4e2d\u4f55\u79cd\u67b6\u6784\u6700\u5408\u9002\u5462\uff1f","title":"Android\u4e2d\u7684\u5e38\u89c1\u67b6\u6784\u6a21\u5f0f"},{"location":"architecture/architecture_for_compose/#1-mvp","text":"MVP \u4e3b\u8981\u7279\u70b9\u662f Presenter \u4e0e View \u4e4b\u95f4\u901a\u8fc7\u63a5\u53e3\u901a\u4fe1\uff0c Presenter \u901a\u8fc7\u8c03\u7528 View \u7684\u65b9\u6cd5\u5b9e\u73b0UI\u7684\u66f4\u65b0\u3002 \u8fd9\u8981\u6c42 Presenter \u9700\u8981\u6301\u6709\u4e00\u4e2a View \u5c42\u5bf9\u8c61\u7684\u5f15\u7528\uff0c\u4f46\u662f Compose \u663e\u7136\u65e0\u6cd5\u83b7\u5f97\u8fd9\u79cd\u5f15\u7528\uff0c\u56e0\u4e3a\u7528\u6765\u521b\u5efa UI \u7684 Composable \u5fc5\u987b\u8981\u6c42\u8fd4\u56de Unit\uff0c\u5982\u4e0b\uff1a @Composable fun HomeScreen () { Column { Text ( \"Hello World!\" ) } } \u5b98\u65b9\u6587\u6863\u4e2d\u5bf9\u65e0\u8fd4\u56de\u503c\u7684\u8981\u6c42\u4e5f\u8fdb\u884c\u4e86\u660e\u786e\u7ea6\u675f\uff1a The function doesn\u2019t return anything. Compose functions that emit UI do not need to return anything, because they describe the desired screen state instead of constructing UI widgets. https://developer.android.com/jetpack/compose/mental-model Compose UI \u65e2\u7136\u5b58\u5728\u4e8e Android \u4f53\u7cfb\u4e2d\uff0c\u5fc5\u5b9a\u9700\u8981\u6709\u4e00\u4e2a\u4e0e Android \u4e16\u754c\u8fde\u63a5\u7684\u8d77\u70b9\uff0c\u8d77\u70b9\u5904\u53ef\u80fd\u662f\u4e00\u4e2a Activity \u6216\u8005 Fragment \uff0c\u7528\u4ed6\u4eec\u505aUI\u5c42\u7684\u5f15\u7528\u53e5\u67c4\u4e0d\u53ef\u4ee5\u5417? \u7406\u8bba\u4e0a\u53ef\u4ee5\uff0c\u4f46\u662f\u5f53 Activity \u63a5\u6536 Presenter \u901a\u77e5\u540e\uff0c\u4ecd\u7136\u65e0\u6cd5\u5728\u5185\u90e8\u83b7\u53d6\u5c40\u90e8\u5f15\u7528\uff0c\u53ea\u80fd\u8bbe\u6cd5\u89e6\u53d1\u6574\u4f53Recomposition\uff0c\u8fd9\u5b8c\u5168\u4e27\u5931\u4e86 MVP \u7684\u4f18\u52bf\uff0c\u5373\u901a\u8fc7\u83b7\u53d6\u5c40\u90e8\u5f15\u7528\u8fdb\u884c\u7cbe\u51c6\u5237\u65b0\u3002 \u901a\u8fc7\u5206\u6790\u53ef\u4ee5\u5f97\u5230\u7ed3\u8bba\uff1a \u201cMVP \u8fd9\u79cd\u4f9d\u8d56\u63a5\u53e3\u901a\u4fe1\u7684\u89e3\u8026\u65b9\u5f0f\u65e0\u6cd5\u5728 Compose \u9879\u76ee\u4e2d\u4f7f\u7528\u201d","title":"1. MVP"},{"location":"architecture/architecture_for_compose/#2-mvvmwithout-jetpack","text":"\u76f8\u5bf9\u4e8e MVP \u7684\u63a5\u53e3\u901a\u4fe1 \uff0cMVVM \u57fa\u4e8e\u89c2\u5bdf\u8005\u6a21\u5f0f\u8fdb\u884c\u901a\u4fe1\uff0c\u5f53 UI \u89c2\u5bdf\u5230\u6765\u81ea ViewModle \u7684\u6570\u636e\u53d8\u5316\u65f6\u81ea\u6211\u66f4\u65b0\u3002 UI\u5c42\u662f\u5426\u80fd\u8fd4\u56de\u5f15\u7528\u53e5\u67c4\u5df2\u4e0d\u518d\u91cd\u8981\uff0c\u8fd9\u4e0e Compose \u7684\u5de5\u4f5c\u65b9\u5f0f\u975e\u5e38\u5951\u5408\u3002 \u81ea\u4ece Android \u7528 ViewModel \u547d\u540d\u4e86\u67d0 Jetpack \u7ec4\u4ef6\u540e\uff0c\u5728\u5f88\u591a\u4eba\u5fc3\u91cc\uff0cJetpack \u4f3c\u4e4e\u5c31\u4e0e MVVM \u753b\u4e0a\u4e86\u7b49\u53f7\u3002\u8fd9\u786e\u5b9e\u5ba2\u89c2\u63a8\u52a8\u4e86 MVVM \u7684\u666e\u53ca\uff0c\u4f46\u662f Jetpack \u7684 ViewModel \u5e76\u975e\u53ea\u80fd\u7528\u5728 MVVM \u4e2d\uff08\u6bd4\u5982\u5982\u540e\u6587\u4ecb\u7ecd\u7684 MVI \u4e5f\u53ef\u4ee5\u4f7f\u7528 \uff09\uff1b \u53cd\u4e4b\uff0c\u6ca1\u6709 Jetpack \uff0c\u7167\u6837\u53ef\u4ee5\u5b9e\u73b0 MVVM\u3002 \u5148\u6765\u770b\u770b\u4e0d\u501f\u52a9 Jetpack \u7684\u60c5\u51b5\u4e0b\uff0cMVVM \u5982\u4f55\u5b9e\u73b0\uff1f","title":"2. MVVM\uff08Without Jetpack\uff09"},{"location":"architecture/architecture_for_compose/#activity-viewmodel","text":"\u9996\u5148 View \u5c42\u521b\u5efa ViewModel \u7528\u4e8e\u8ba2\u9605 class MvvmActivity : AppCompatActivity () { private val mvvmViewModel = MvvmViewModel ( DataRepository ()) override fun onCreate ( savedInstanceState : Bundle?) { super . onCreate ( savedInstanceState ) setContent { ComposePlaygroundTheme { MvvmApp ( mvvmViewModel ) //\u5c06vm\u4f20\u7ed9Composable } } } } Compose \u9879\u76ee\u4e00\u822c\u4f7f\u7528\u5355 Activity \u7ed3\u6784\uff0c Activity \u4f5c\u4e3a\u5168\u5c40\u5165\u53e3\u975e\u5e38\u9002\u5408\u521b\u5efa\u5168\u5c40 ViewModel\u3002 \u5b50 Compoable \u4e4b\u95f4\u9700\u8981\u57fa\u4e8e ViewModel \u901a\u4fe1\uff0c\u6240\u4ee5\u6784\u5efa Composable \u65f6\u5c06 ViewModel \u4f5c\u4e3a\u53c2\u6570\u4f20\u5165\u3002 Sample \u4e2d\u6211\u4eec\u5728 Activity \u4e2d\u521b\u5efa\u7684 ViewModel \u4ec5\u4ec5\u662f\u4e3a\u4e86\u4f20\u9012\u7ed9 MvvmApp \u4f7f\u7528\uff0c\u8fd9\u79cd\u60c5\u51b5\u4e0b\u4e5f\u53ef\u4ee5\u901a\u8fc7\u4f20\u9012 Lazy<MvvmViewModel> \uff0c\u5c06\u521b\u5efa\u5ef6\u8fdf\u5230\u771f\u6b63\u9700\u8981\u4f7f\u7528\u7684\u65f6\u5019\u4ee5\u63d0\u9ad8\u6027\u80fd\u3002","title":"Activity \u4e2d\u521b\u5efa ViewModel"},{"location":"architecture/architecture_for_compose/#navgraph","text":"\u5f53\u6d89\u53ca\u5230 Compose \u9875\u9762\u5207\u6362\u65f6\uff0c navigation-compose \u662f\u4e00\u4e2a\u4e0d\u9519\u9009\u62e9\uff0cSample\u4e2d\u4e5f\u7279\u610f\u8bbe\u8ba1\u4e86 SearchBarScreen \u548c SearchResultScreen \u7684\u5207\u6362\u573a\u666f // build.gradle implementation \"androidx.navigation:navigation-compose:$latest_version\" @Composable fun MvvmApp ( mvvmViewModel : MvvmViewModel ) { val navController = rememberNavController () LaunchedEffect ( Unit ) { mvvmViewModel . navigateToResults . collect { navController . navigate ( \"result\" ) //\u8ba2\u9605VM\u8def\u7531\u4e8b\u4ef6\u901a\u77e5\uff0c\u5904\u7406\u8def\u7531\u8df3\u8f6c } } NavHost ( navController , startDestination = \"searchBar\" ) { composable ( \"searchBar\" ) { MvvmSearchBarScreen ( mvvmViewModel , ) } composable ( \"result\" ) { MvvmSearchResultScreen ( mvvmViewModel , ) } } } - \u5728 root-level \u7684 MvvmApp \u4e2d\u5b9a\u4e49 NavGraph \uff0c composable(\"$dest_id\"){} \u4e2d\u6784\u9020\u8def\u7531\u8282\u70b9\u7684\u5404\u4e2a\u5b50 Screen\uff0c\u6784\u9020\u65f6\u4f20\u5165 ViewModel \u7528\u4e8e Screen \u4e4b\u95f4\u7684\u901a\u4fe1 \u6bcf\u4e2a Composable \u90fd\u6709\u4e00\u4e2a CoroutineScope \u4e0e\u5176 Lifecycle \u7ed1\u5b9a\uff0c LaunchedEffect{} \u53ef\u4ee5\u5728\u8fd9\u4e2a Scope \u4e2d\u542f\u52a8\u534f\u7a0b\u5904\u7406\u526f\u4f5c\u7528\u3002 \u4ee3\u7801\u4e2d\u4f7f\u7528\u4e86\u4e00\u4e2a\u53ea\u6267\u884c\u4e00\u6b21\u7684 Effect \u8ba2\u9605 ViewModel \u7684\u8def\u7531\u4e8b\u4ef6\u901a\u77e5 \u5f53\u7136\u6211\u4eec\u53ef\u4ee5\u5c06 navConroller \u4e5f\u4f20\u7ed9 MvvmSearchBarScreen \uff0c\u5728\u5176\u5185\u90e8\u76f4\u63a5\u53d1\u8d77\u8def\u7531\u8df3\u8f6c\u3002\u4f46\u5728\u8f83\u590d\u6742\u7684\u9879\u76ee\u4e2d\uff0c\u8df3\u8f6c\u903b\u8f91\u4e0e\u9875\u9762\u5b9a\u4e49\u5e94\u8be5\u5c3d\u91cf\u4fdd\u6301\u89e3\u8026\uff0c\u8fd9\u66f4\u5229\u4e8e\u9875\u9762\u7684\u590d\u7528\u548c\u6d4b\u8bd5\u3002 \u6211\u4eec\u4e5f\u53ef\u4ee5\u5728 Composeable \u4e2d\u76f4\u63a5 mutableStateOf() \u521b\u5efa state \u6765\u5904\u7406\u8def\u7531\u8df3\u8f6c\uff0c\u4f46\u662f\u65e2\u7136\u9009\u62e9\u4f7f\u7528 ViewModel \u4e86\uff0c\u90a3\u5c31\u5e94\u8be5\u5c3d\u53ef\u80fd\u5c06\u6240\u6709 state \u96c6\u4e2d\u5230 ViewModle \u7ba1\u7406\u3002 \u6ce8\u610f: \u4e0a\u9762\u4f8b\u5b50\u4e2d\u7684\u5904\u7406\u8def\u7531\u8df3\u8f6c\u7684 navigateToResults \u662f\u4e00\u4e2a\u201c\u4e8b\u4ef6\u201d\u800c\u975e\u201c\u72b6\u6001\u201d\uff0c\u5173\u4e8e\u8fd9\u90e8\u5206\u533a\u522b\uff0c\u5728\u540e\u6587\u5728\u8be6\u7ec6\u9610\u8ff0","title":"\u5b9a\u4e49 NavGraph"},{"location":"architecture/architecture_for_compose/#screen","text":"\u63a5\u4e0b\u6765\u770b\u4e00\u4e0b\u4e24\u4e2a Screen \u7684\u5177\u4f53\u5b9e\u73b0 @Composable fun MvvmSearchBarScreen ( mvvmViewModel : MvvmViewModel , ) { SearchBarScreen { mvvmViewModel . searchKeyword ( it ) } } @Composable fun MvvmSearchResultScreen ( mvvmViewModel : MvvmViewModel ) { val result by mvvmViewModel . result . collectAsState () val isLoading by mvvmViewModel . isLoading . collectAsState () SearchResultScreen ( result , isLoading , mvvmViewModel . key . value ) } \u5927\u91cf\u903b\u8f91\u90fd\u62bd\u8c61\u5230 ViewModel \u4e2d\uff0c\u6240\u4ee5 Screen \u975e\u5e38\u7b80\u6d01 SearchBarScreen \u63a5\u53d7\u7528\u6237\u8f93\u5165\uff0c\u5c06\u641c\u7d22\u5173\u952e\u8bcd\u53d1\u9001\u7ed9 ViewModel MvvmSearchResultScreen \u4f5c\u4e3a\u7ed3\u679c\u9875\u663e\u793a ViewModel \u53d1\u9001\u7684\u6570\u636e\uff0c\u5305\u62ec Loading \u72b6\u6001\u548c\u641c\u7d22\u7ed3\u679c\u7b49\u3002 collectAsState \u7528\u6765\u5c06 Flow \u8f6c\u5316\u4e3a Compose \u7684 state\uff0c\u6bcf\u5f53 Flow \u63a5\u6536\u5230\u65b0\u6570\u636e\u65f6\u4f1a\u89e6\u53d1 Composable \u91cd\u7ec4\u3002 Compose \u540c\u65f6\u652f\u6301 LiveData\u3001RxJava \u7b49\u5176\u4ed6\u54cd\u5e94\u5f0f\u5e93\u7684 collectAsState UI\u5c42\u7684\u66f4\u591a\u5185\u5bb9\u53ef\u4ee5\u67e5\u9605 SearchBarScreen \u548c SearchResultScreen \u7684\u6e90\u7801\u3002\u7ecf\u8fc7\u903b\u8f91\u62bd\u79bb\u540e\uff0c\u8fd9\u4e24\u4e2a Composable \u53ea\u5269\u4f59\u5e03\u5c40\u76f8\u5173\u7684\u4ee3\u7801\uff0c\u53ef\u4ee5\u5728\u4efb\u4f55\u4e00\u79cd MVX \u4e2d\u5b9e\u73b0\u590d\u7528\u3002","title":"\u5b9a\u4e49\u5b50 Screen"},{"location":"architecture/architecture_for_compose/#viewmodel","text":"\u6700\u540e\u770b\u4e00\u4e0b ViewModel \u7684\u5b9e\u73b0 class MvvmViewModel ( private val searchService : DataRepository , ) { private val coroutineScope = MainScope () private val _isLoading : MutableStateFlow < Boolean > = MutableStateFlow ( false ) val isLoading = _isLoading . asStateFlow () private val _result : MutableStateFlow < List < ArticleBean >> = MutableStateFlow ( emptyList ()) val result = _result . asStateFlow () private val _key = MutableStateFlow ( \"\" ) val key = _key . asStateFlow () //\u4f7f\u7528Channel\u5b9a\u4e49\u4e8b\u4ef6 private val _navigateToResults = Channel < Boolean > ( Channel . BUFFERED ) val navigateToResults = _navigateToResults . receiveAsFlow () fun searchKeyword ( input : String ) { coroutineScope . launch { _isLoading . value = true _navigateToResults . send ( true ) _key . value = input val result = withContext ( Dispatchers . IO ) { searchService . getArticlesList ( input ) } _result . emit ( result . data . datas ) _isLoading . value = false } } } - \u63a5\u6536\u5230\u7528\u6237\u8f93\u5165\u540e\uff0c\u901a\u8fc7 DataRepository \u53d1\u8d77\u641c\u7d22\u8bf7\u6c42 \u641c\u7d22\u8fc7\u7a0b\u4e2d\u4f9d\u6b21\u66f4\u65b0 loading \uff08loading\u663e\u793a\u72b6\u6001\uff09\u3001 navigateToResult (\u9875\u9762\u8df3\u8f6c\u4e8b\u4ef6)\u3001 key \uff08\u641c\u7d22\u5173\u952e\u8bcd\uff09\u3001 result \uff08\u641c\u7d22\u7ed3\u679c\uff09\u7b49\u5185\u5bb9\uff0c\u4e0d\u65ad\u9a71\u52a8UI\u5237\u65b0 \u6240\u6709\u72b6\u6001\u96c6\u4e2d\u5728 ViewModel \u7ba1\u7406\uff0c\u751a\u81f3\u9875\u9762\u8df3\u8f6c\u3001Toast\u5f39\u51fa\u7b49\u4e8b\u4ef6\u4e5f\u7531 ViewModel \u8d1f\u8d23\u901a\u77e5\uff0c\u8fd9\u5bf9\u5355\u5143\u6d4b\u8bd5\u975e\u5e38\u53cb\u597d\uff0c\u5728\u5355\u6d4b\u4e2d\u65e0\u9700\u518d mock \u5404\u79cdUI\u76f8\u5173\u7684\u4e0a\u4e0b\u6587\u3002","title":"ViewModel \u5b9e\u73b0"},{"location":"architecture/architecture_for_compose/#3-jetpack-mvvm","text":"Jeptack \u7684\u610f\u4e49\u5728\u4e8e\u964d\u4f4e MVVM \u5728 Android\u5e73\u53f0\u7684\u843d\u5730\u6210\u672c\u3002 \u5f15\u5165 Jetpack \u540e\u7684\u4ee3\u7801\u53d8\u5316\u4e0d\u5927\uff0c\u4e3b\u8981\u53d8\u52a8\u5728\u4e8e ViewModel \u7684\u521b\u5efa\u3002 Jetpack \u63d0\u4f9b\u4e86\u591a\u4e2a\u7ec4\u4ef6\uff0c\u964d\u4f4e\u4e86 ViewModel \u7684\u4f7f\u7528\u6210\u672c\uff1a - \u901a\u8fc7 hilt \u7684 DI \u964d\u4f4e ViewModel \u6784\u9020\u6210\u672c\uff0c\u65e0\u9700\u624b\u52a8\u4f20\u5165 DataRepository \u7b49\u4f9d\u8d56 - \u4efb\u610f Composable \u90fd\u53ef\u4ee5\u4ece\u6700\u8fd1\u7684 Scope \u4e2d\u83b7\u53d6 ViewModel\uff0c\u65e0\u9700\u5c42\u5c42\u4f20\u53c2\u3002 @HiltViewModel class JetpackMvvmViewModel @Inject constructor ( private val searchService : DataRepository // DataRepository \u4f9d\u9760DI\u6ce8\u5165 ) : ViewModel () { ... } @Composable fun JetpackMvvmApp () { val navController = rememberNavController () NavHost ( navController , startDestination = \"searchBar\" , route = \"root\" ) { composable ( \"searchBar\" ) { JetpackMvvmSearchBarScreen ( viewModel ( navController , \"root\" ) //viewModel \u53ef\u4ee5\u5728\u9700\u8981\u65f6\u518d\u83b7\u53d6, \u65e0\u9700\u5b9e\u73b0\u521b\u5efa\u597d\u5e76\u901a\u8fc7\u53c2\u6570\u4f20\u8fdb\u6765 ) } composable ( \"result\" ) { JetpackMvvmSearchResultScreen ( viewModel ( navController , \"root\" ) //\u53ef\u4ee5\u83b7\u53d6\u8ddf\u540c\u4e00\u4e2aViewModel\u5b9e\u4f8b ) } } } @Composable inline fun < reified VM : ViewModel > viewModel ( navController : NavController , graphId : String = \"\" ): VM = //\u5728 NavGraph \u5168\u5c40\u8303\u56f4\u4f7f\u7528 Hilt \u521b\u5efa ViewModel hiltNavGraphViewModel ( backStackEntry = navController . getBackStackEntry ( graphId ) ) Jetpack \u751a\u81f3\u63d0\u4f9b\u4e86 hilt-navigation-compose \u5e93\uff0c\u53ef\u4ee5\u5728 Composable \u4e2d\u83b7\u53d6 NavGraph Scope \u6216 Destination Scope \u7684 ViewModel\uff0c\u5e76\u81ea\u52a8\u4f9d\u8d56 Hilt \u6784\u5efa\u3002Destination Scope \u7684 ViewModel \u4f1a\u8ddf\u968f BackStack \u7684\u5f39\u51fa\u81ea\u52a8 Clear \uff0c\u907f\u514d\u6cc4\u9732\u3002 // build.gradle implementation androidx . hilt : hilt - navigation - compose: $latest_versioin \u201c\u672a\u6765 Jetpack \u5404\u7ec4\u4ef6\u4e4b\u95f4\u534f\u540c\u6548\u5e94\u4f1a\u53d8\u5f97\u8d8a\u6765\u8d8a\u5f3a\u3002\u201d \u53c2\u8003 https://developer.android.com/jetpack/compose/libraries#hilt","title":"3. Jetpack MVVM"},{"location":"architecture/architecture_for_compose/#mvi","text":"MVI \u4e0e MVVM \u5f88\u76f8\u4f3c\uff0c\u5176\u501f\u9274\u4e86\u524d\u7aef\u6846\u67b6\u7684\u601d\u60f3\uff0c\u66f4\u52a0\u5f3a\u8c03 \u6570\u636e\u7684\u5355\u5411\u6d41\u52a8 \u548c \u552f\u4e00\u6570\u636e\u6e90 \uff0c\u53ef\u4ee5\u770b\u505a\u662f MVVM + Redux \u7684\u7ed3\u5408\u3002 MVI \u7684 I \u6307 Intent\uff0c\u8fd9\u91cc\u4e0d\u662f\u542f\u52a8 Activity \u90a3\u4e2a Intent\uff0c\u800c\u662f\u4e00\u79cd\u5bf9\u7528\u6237\u64cd\u4f5c\u7684\u5c01\u88c5\u5f62\u5f0f\uff0c\u4e3a\u907f\u514d\u6df7\u6dc6\uff0c\u4e5f\u53ef\u5524\u505a Action \u7b49\u5176\u4ed6\u79f0\u547c\u3002 \u7528\u6237\u64cd\u4f5c\u4ee5 Action \u7684\u5f62\u5f0f\u9001\u7ed9 Model\u5c42 \u8fdb\u884c\u5904\u7406\u3002\u4ee3\u7801\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u7528 Jetpack \u7684 ViewModel \u8d1f\u8d23 Intent \u7684\u63a5\u53d7\u548c\u5904\u7406\uff0c\u56e0\u4e3a ViewModel \u53ef\u4ee5\u5728 Composable \u4e2d\u65b9\u4fbf\u83b7\u53d6\u3002 \u5728 SearchBarScreen \u7528\u6237\u8f93\u5165\u5173\u952e\u8bcd\u540e\u901a\u8fc7 Action \u901a\u77e5 ViewModel \u8fdb\u884c\u641c\u7d22 @Composable fun MviSearchBarScreen ( mviViewModel : MviViewModel , onConfirm : () -> Unit ) { SearchBarScreen { mviViewModel . onAction ( MviViewModel . UiAction . SearchInput ( it )) } } \u901a\u8fc7 Action \u901a\u4fe1\uff0c\u6709\u5229\u4e8e View \u4e0e ViewModel \u4e4b\u95f4\u7684\u8fdb\u4e00\u6b65\u89e3\u8026\uff0c\u540c\u65f6\u6240\u6709\u8c03\u7528\u4ee5 Action \u7684\u5f62\u5f0f\u6c47\u603b\u5230\u4e00\u5904\uff0c\u4e5f\u6709\u5229\u4e8e\u5bf9\u884c\u4e3a\u7684\u96c6\u4e2d\u5206\u6790\u548c\u76d1\u63a7 @Composable fun MviSearchResultScreen ( mviViewModel : MviViewModel ) { val viewState by mviViewModel . viewState . collectAsState () SearchResultScreen ( viewState . result , viewState . isLoading , viewState . key ) } MVVM \u7684 ViewModle \u4e2d\u5206\u6563\u5b9a\u4e49\u4e86\u591a\u4e2a State \uff0cMVI \u4f7f\u7528 ViewState \u5bf9 State \u96c6\u4e2d\u7ba1\u7406\uff0c\u53ea\u9700\u8981\u8ba2\u9605\u4e00\u4e2a ViewState \u4fbf\u53ef\u83b7\u53d6\u9875\u9762\u7684\u6240\u6709\u72b6\u6001\uff0c\u76f8\u5bf9 MVVM \u51cf\u5c11\u4e86\u4e0d\u5c11\u6a21\u677f\u4ee3\u7801\u3002 \u76f8\u5bf9\u4e8e MVVM\uff0cViewModel \u4e5f\u6709\u4e00\u4e9b\u53d8\u5316 class MviViewModel ( private val searchService : DataRepository , ) { private val coroutineScope = MainScope () private val _viewState : MutableStateFlow < ViewState > = MutableStateFlow ( ViewState ()) val viewState = _viewState . asStateFlow () private val _navigateToResults = Channel < OneShotEvent > ( Channel . BUFFERED ) val navigateToResults = _navigateToResults . receiveAsFlow () fun onAction ( uiAction : UiAction ) { when ( uiAction ) { is UiAction . SearchInput -> { coroutineScope . launch { _viewState . value = _viewState . value . copy ( isLoading = true ) val result = withContext ( Dispatchers . IO ) { searchService . getArticlesList ( uiAction . input ) } _viewState . value = _viewState . value . copy ( result = result . data . datas , key = uiAction . input ) _navigateToResults . send ( OneShotEvent . NavigateToResults ) _viewState . value = _viewState . value . copy ( isLoading = false ) } } } } data class ViewState ( val isLoading : Boolean = false , val result : List < ArticleBean > = emptyList (), val key : String = \"\" ) sealed class OneShotEvent { object NavigateToResults : OneShotEvent () } sealed class UiAction { class SearchInput ( val input : String ) : UiAction () } } \u9875\u9762\u6240\u6709\u7684\u72b6\u6001\u90fd\u5b9a\u4e49\u5728 ViewState \u8fd9\u4e2a data class \u4e2d\uff0c\u72b6\u6001\u7684\u4fee\u6539\u53ea\u80fd\u5728 onAction \u4e2d\u8fdb\u884c, \u5176\u4f59\u573a\u6240\u90fd\u662f immutable \u7684\uff0c \u4fdd\u8bc1\u4e86\u6570\u636e\u6d41\u53ea\u80fd\u5355\u5411\u4fee\u6539\u3002 \u53cd\u89c2 MVVM \uff0c MutableStateFlow \u5bf9\u5916\u66b4\u9732\u65f6\u8f6c\u6210 immutable \u624d\u80fd\u4fdd\u8bc1\u8fd9\u79cd\u5b89\u5168\u6027\uff0c\u9700\u8981\u589e\u52a0\u4e0d\u5c11\u6a21\u677f\u4ee3\u7801\u4e14\u4ecd\u7136\u5bb9\u6613\u9057\u6f0f\u3002 \u4e8b\u4ef6\u5219\u7edf\u4e00\u5b9a\u4e49\u5728 OneShotEvent \u4e2d\u3002 Event \u4e0d\u540c\u4e8e State\uff0c\u540c\u4e00\u7c7b\u578b\u7684\u4e8b\u4ef6\u5141\u8bb8\u54cd\u5e94\u591a\u6b21\uff0c\u56e0\u6b64\u5b9a\u4e49\u4e8b\u4ef6\u4f7f\u7528 Channel \u800c\u4e0d\u662f StateFlow \u3002 Compose \u9f13\u52b1\u591a\u4f7f\u7528 State \u5c11\u4f7f\u7528 Event\uff0c Event \u53ea\u9002\u5408\u7528\u5728\u5f39 Toast \u7b49\u5c11\u6570\u573a\u666f\u4e2d \u901a\u8fc7\u6d4f\u89c8 ViewModel \u7684 ViewState \u548c Aciton \u5b9a\u4e49\u5c31\u53ef\u4ee5\u7406\u6e05 ViewModel \u7684\u804c\u8d23\uff0c\u53ef\u4ee5\u76f4\u63a5\u62ff\u6765\u4f5c\u4e3a\u63a5\u53e3\u6587\u6863\u4f7f\u7528\u3002","title":"MVI"},{"location":"architecture/architecture_for_compose/#_1","text":"Sample \u4e2d\u4e4b\u6240\u4ee5\u4f7f\u7528\u4e8b\u4ef6\u800c\u975e\u72b6\u6001\u6765\u5904\u7406\u8def\u7531\u8df3\u8f6c\uff0c\u4e00\u4e2a\u4e3b\u8981\u539f\u56e0\u662f\u7531\u4e8e\u4f7f\u7528\u4e86 Navigation \u3002Navigation \u6709\u81ea\u5df1\u7684 backstack \u7ba1\u7406\uff0c\u5f53\u70b9\u51fb back \u952e\u65f6\u4f1a\u81ea\u52a8\u5e2e\u52a9\u6211\u4eec\u8fd4\u56de\u524d\u4e00\u9875\u9762\u3002\u5018\u82e5\u6211\u4eec\u4f7f\u7528\u72b6\u6001\u6765\u63cf\u8ff0\u5f53\u524d\u9875\u9762\uff0c\u5f53\u70b9\u51fb back\u65f6\uff0c\u6ca1\u6709\u673a\u4f1a\u66f4\u65b0\u72b6\u6001\uff0c\u8fd9\u5c06\u9020\u6210 ViewState \u4e0e UI \u7684\u4e0d\u4e00\u81f4\u3002 \u5173\u4e8e\u8def\u7531\u65b9\u6848\u7684\u5efa\u8bae\uff1a\u7b80\u5355\u9879\u76ee\u4f7f\u7528 \u4e8b\u4ef6 \u63a7\u5236\u9875\u9762\u8df3\u8f6c\u6ca1\u6709\u95ee\u9898\uff0c\u4f46\u662f\u5bf9\u4e8e\u590d\u6742\u9879\u76ee\uff0c\u63a8\u8350\u4f7f\u7528 \u72b6\u6001 \u8fdb\u884c\u9875\u9762\u7ba1\u7406\uff0c\u6709\u5229\u4e8e\u903b\u8f91\u5c42\u65f6\u523b\u611f\u77e5\u5230\u5f53\u524d\u7684UI\u72b6\u6001\u3002 \u6211\u4eec\u53ef\u4ee5\u5c06 NavController \u7684 backstack \u72b6\u6001 \u4e0e ViewModel \u7684\u72b6\u6001\u5efa\u7acb\u540c\u6b65\uff1a class MvvmViewModel ( private val searchService : DataRepository , ) { ... //\u4f7f\u7528 StateFlow \u63cf\u8ff0\u9875\u9762 private val _destination = MutableStateFlow ( DestSearchBar ) val destination = _destination . asStateFlow () fun searchKeyword ( input : String ) { coroutineScope . launch { ... _destination . value = DestSearchResult ... } } fun bindNavStack ( navController : NavController ) { //navigation \u7684\u72b6\u6001\u65f6\u523b\u540c\u6b65\u5230 viewModel navController . addOnDestinationChangedListener { _ , _ , arguments -> run { _destination . value = requireNotNull ( arguments ?. getString ( KEY_ROUTE )) } } } } \u5982\u4e0a\uff0c\u5f53 navigation \u72b6\u6001\u53d8\u5316\u65f6\uff0c\u4f1a\u53ca\u65f6\u540c\u6b65\u5230 ViewModel \uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u4f7f\u7528 StateFlow \u800c\u975e Channel \u6765\u63cf\u8ff0\u9875\u9762\u72b6\u6001\u4e86\u3002 @Composable fun MvvmApp ( mvvmViewModel : MvvmViewModel ) { val navController = rememberNavController () LaunchedEffect ( Unit ) { with ( mvvmViewModel ) { bindNavStack ( navController ) //\u5efa\u7acb\u540c\u6b65 destination . collect { navController . navigate ( it ) } } } } \u5728\u5165\u53e3\u5904\uff0c\u4e3a NavController \u548c ViewModel \u5efa\u7acb\u540c\u6b65\u7ed1\u5b9a\u5373\u53ef\u3002","title":"\u9875\u9762\u8def\u7531"},{"location":"architecture/architecture_for_compose/#clean-architecture","text":"\u66f4\u5927\u578b\u7684\u9879\u76ee\u4e2d\uff0c\u4f1a\u5f15\u5165 Clean Architecture \uff0c\u901a\u8fc7 Use Case \u5c06 ViewModel \u5185\u7684\u903b\u8f91\u8fdb\u4e00\u6b65\u5206\u89e3\u3002 Compose \u53ea\u662f\u4e2a UI \u6846\u67b6\uff0c\u5bf9\u4e8e ViewModle \u4ee5\u4e0b\u7684\u903b\u8f91\u5c42\u7684\u6cbb\u7406\u65b9\u5f0f\u4e0e\u4f20\u7edf\u7684 Andorid \u5f00\u53d1\u6ca1\u6709\u533a\u522b\u3002\u6240\u4ee5 Clean Architecture \u8fd9\u6837\u7684\u590d\u6742\u67b6\u6784\u4ecd\u7136\u53ef\u4ee5\u5728 Compose \u9879\u76ee\u4e2d\u4f7f\u7528","title":"Clean Architecture"},{"location":"architecture/architecture_for_compose/#_2","text":"\u6bd4\u8f83\u4e86\u8fd9\u4e48\u591a\u79cd\u67b6\u6784\uff0c\u90a3\u79cd\u4e0e Compose \u6700\u5951\u5408\u5462\uff1f Compose \u7684\u58f0\u660e\u5f0fUI\u601d\u60f3\u6765\u81ea React\uff0c\u6240\u4ee5\u540c\u6837\u6765\u81ea Redux \u601d\u60f3\u7684 MVI \u5e94\u8be5\u662f Compose \u7684\u6700\u4f73\u4f34\u4fa3\u3002\u5f53\u7136 MVI \u53ea\u662f\u5728 MVVM \u7684\u57fa\u7840\u4e0a\u505a\u4e86\u4e00\u4e9b\u6539\u826f\uff0c\u5982\u679c\u4f60\u5df2\u7ecf\u6709\u4e86\u4e00\u4e2a MVVM \u7684\u9879\u76ee\uff0c\u53ea\u662f\u60f3\u5c06 UI \u90e8\u5206\u6539\u9020\u6210 Compose \uff0c\u90a3\u4e48\u6ca1\u5fc5\u8981\u4e3a\u4e86\u6539\u9020\u6210 MVI \u800c\u8fdb\u884c\u91cd\u6784\uff0cMVVM \u4e5f\u53ef\u4ee5\u5f88\u597d\u5730\u914d\u5408 Compose \u4f7f\u7528\u7684\u3002 \u4f46\u662f\u5982\u679c\u4f60\u60f3\u5c06\u4e00\u4e2a MVP \u9879\u76ee\u6539\u9020\u6210 Compose \u53ef\u80fd\u6210\u672c\u5c31\u6709\u70b9\u5927\u4e86\u3002 \u5173\u4e8e Jetpack\uff0c\u5982\u679c\u4f60\u7684\u9879\u76ee\u53ea\u7528\u4e8e Android\uff0c\u90a3\u4e48 Jetpack \u65e0\u7591\u662f\u4e00\u4e2a\u597d\u5de5\u5177\u3002\u4f46\u662f Compose \u672a\u6765\u7684\u5e94\u7528\u573a\u666f\u5c06\u4f1a\u5f88\u5e7f\u6cdb\uff0c\u5982\u679c\u4f60\u6709\u9884\u671f\u672a\u6765\u4f1a\u914d\u5408 KMP \u5f00\u53d1\u8de8\u5e73\u53f0\u5e94\u7528\uff0c\u90a3\u4e48\u5c31\u9700\u8981\u5b66\u4f1a\u4e0d\u4f9d\u8d56 Jetpack \u7684\u5f00\u53d1\u65b9\u5f0f\uff0c\u8fd9\u4e5f\u662f\u672c\u6587\u4e3a\u4ec0\u4e48\u8981\u4ecb\u7ecd\u975e Jetpack \u4e0b\u7684 MVVM \u7684\u4e00\u4e2a\u521d\u8877\u3002","title":"\u603b\u7ed3"},{"location":"architecture/architecture_for_compose/#sample","text":"\u70b9\u51fb\u8fd9\u91cc","title":"Sample \u4ee3\u7801\uff1a"},{"location":"code/design/overview/stickyHeader/","text":"@Composable fun Contributors (){ Column { MemberList ( R . drawable . m1 , \"\u9999\u8fa3\u9e21\u817f\u5821\" ) MemberList ( R . drawable . m2 , text = \"Ruger\" ) MemberList ( R . drawable . m3 , \"\u51db\" ) MemberList ( R . drawable . m4 , text = \"RE\" ) MemberList ( R . drawable . m5 , \"fundroid\" ) } } @Composable fun TouchFish (){ for ( index in 0. . 20 ) MemberList ( R . drawable . m2 , text = \"Ruger\" ) } @Composable fun MemberList ( imageID : Int , text : String ){ Row ( modifier = Modifier . fillMaxWidth () . padding ( horizontal = 10. dp , vertical = 5. dp ), verticalAlignment = Alignment . CenterVertically ){ Surface ( shape = CircleShape , modifier = Modifier . size ( 40. dp )){ Image ( painter = painterResource ( imageID ), contentDescription = null ) } Spacer ( modifier = Modifier . padding ( horizontal = 8. dp )) Text ( text = text , style = MaterialTheme . typography . body1 , fontWeight = FontWeight . W500 ) Box ( modifier = Modifier . fillMaxWidth (), contentAlignment = Alignment . CenterEnd ){ IconButton ( onClick = { /*TODO*/ }) { Icon ( Icons . Filled . Email , null ) } } } } @ExperimentalFoundationApi @Composable fun ListWithHeader () { val sections = listOf ( \"\u8d21\u732e\u8005\" , \"\u7720\u7720\u7684\u7c89\u4e1d\" ) Column { TopAppBar ( title = { Text ( text = \"Compose Museum \u8d21\u732e\u8005\" , ) }, actions = { IconButton ( onClick = { /*TODO*/ }) { Icon ( Icons . Filled . Search , null ) } }, backgroundColor = Color . White ) LazyColumn { sections . forEachIndexed { index , section -> stickyHeader { Text ( text = section , modifier = Modifier . fillMaxWidth () . background ( Color ( 0 xFFF2F4FB )) . padding ( horizontal = 10. dp , vertical = 5. dp ), fontWeight = FontWeight . W700 , color = Color ( 0 xFF0079D3 ) ) } when ( index ){ 0 -> item { Contributors ()} 1 -> item { TouchFish ()} } } } } }","title":"stickyHeader"},{"location":"code/elements/text/%E7%94%A8%E6%88%B7%E5%8D%8F%E8%AE%AE/","text":"< resources > < string name = \"content\" > \u5982\u679c\u4f60\u770b\u5230\u4e86\u8fd9\u4e2a\u754c\u9762\uff0c\u5c31\u9ed8\u8ba4\u4ee3\u8868\u4f60\u540c\u610f\u6211\u4eec\u7684\u6240\u6709\u7528\u6237\u534f\u8bae\uff08 bushi \uff09 </ string > </ resources > var content by remember { mutableStateOf ( \"\" )} val openDialog = remember { mutableStateOf ( false ) } val annotatedText = buildAnnotatedString { append ( \"\u52fe\u9009\u5373\u4ee3\u8868\u540c\u610f\" ) pushStringAnnotation ( tag = \"tag\" , annotation = stringResource ( id = R . string . content ) ) withStyle ( style = SpanStyle ( color = Color ( 0 xFF0E9FF2 ), fontWeight = FontWeight . Bold ) ) { append ( \"\u7528\u6237\u534f\u8bae\" ) } pop () } Box ( modifier = Modifier . fillMaxSize () . padding ( bottom = 15. dp ), contentAlignment = Alignment . BottomCenter ){ ClickableText ( text = annotatedText , onClick = { offset -> annotatedText . getStringAnnotations ( tag = \"tag\" , start = offset , end = offset ). firstOrNull () ?. let { annotation -> openDialog . value = true content = annotation . item } } ) } if ( openDialog . value ){ AlertDialog ( onDismissRequest = { openDialog . value = false }, title = { Box ( Modifier . fillMaxWidth (), contentAlignment = Alignment . Center ){ Text ( text = \"\u7528\u6237\u534f\u8bae\" , style = MaterialTheme . typography . h6 , ) } }, text = { Text ( content ) }, confirmButton = { Button ( onClick = { openDialog . value = false } ) { Text ( \"\u786e\u8ba4\" ) } }, dismissButton = { Button ( onClick = { openDialog . value = false } ) { Text ( \"\u53d6\u6d88\" ) } } ) }","title":"\u7528\u6237\u534f\u8bae"},{"location":"code/layout/bottomNavigation/bottomNavigation/","text":"import androidx.compose.animation.AnimatedVisibility import androidx.compose.animation.ExperimentalAnimationApi import androidx.compose.foundation.clickable import androidx.compose.foundation.interaction.MutableInteractionSource import androidx.compose.foundation.layout.* import androidx.compose.foundation.shape.CircleShape import androidx.compose.material.* import androidx.compose.material.icons.Icons import androidx.compose.material.icons.filled.Home import androidx.compose.material.icons.filled.Settings import androidx.compose.runtime.Composable import androidx.compose.runtime.CompositionLocalProvider import androidx.compose.ui.Alignment import androidx.compose.ui.Modifier import androidx.compose.ui.graphics.Color import androidx.compose.ui.res.painterResource import androidx.compose.ui.unit.dp @ExperimentalAnimationApi @Composable fun MyBottomNavigation (){ var selectedItem by remember { mutableStateOf ( 0 )} BottomNavigation ( backgroundColor = Color . White ) { for ( index in 0. . 2 ){ Column ( modifier = Modifier . fillMaxHeight () . weight ( 1f ) . clickable ( onClick = { selectedItem = index }, indication = null , interactionSource = MutableInteractionSource () ), verticalArrangement = Arrangement . Center , horizontalAlignment = Alignment . CenterHorizontally ) { NavigationIcon ( index , selectedItem ) Spacer ( Modifier . padding ( top = 2. dp )) AnimatedVisibility ( visible = index == selectedItem ) { Surface ( shape = CircleShape , modifier = Modifier . size ( 5. dp ), color = Color ( 0 xFF252527 )) {} } } } } } @Composable fun NavigationIcon ( index : Int , selectedItem : Int ){ val alpha = if ( selectedItem != index ) 0.5f else 1f CompositionLocalProvider ( LocalContentAlpha provides alpha ) { when ( index ){ 0 -> Icon ( Icons . Filled . Home , contentDescription = null ) 1 -> Icon ( painterResource ( R . drawable . musicnote ), contentDescription = null ) else -> Icon ( Icons . Filled . Settings , contentDescription = null ) } } }","title":"bottomNavigation"},{"location":"design/animation/animatestate/","text":"animate*AsState \u51fd\u6570\u662f Compose \u4e2d\u6700\u7b80\u5355\u7684\u52a8\u753b API \uff0c\u7528\u4e8e\u4e3a\u5355\u4e2a\u503c\u5236\u4f5c\u52a8\u753b\u3002\u4f60\u53ea\u9700\u63d0\u4f9b\u7ed3\u675f\u503c\uff08\u6216\u76ee\u6807\u503c\uff09\uff0cAPI \u5c31\u4f1a\u4ece\u5f53\u524d\u503c\u5230\u6307\u5b9a\u503c\u5f00\u59cb\u52a8\u753b\u3002 1. \u7b80\u5355\u4f7f\u7528 \u4e0b\u9762\u662f\u4e00\u4e2a\u4f7f\u7528\u8fd9\u4e2a API \u5236\u4f5c\u6309\u94ae\u5927\u5c0f\u52a8\u753b\u7684\u4f8b\u5b50\u3002 @Composable fun Demo (){ var change by remember { mutableStateOf ( false ) } var flag by remember { mutableStateOf ( false ) } val buttonSize by animateDpAsState ( targetValue = if ( change ) 32. dp else 24. dp ) if ( buttonSize == 32. dp ) { change = false } IconButton ( onClick = { change = true flag = ! flag } ) { Icon ( Icons . Rounded . Favorite , contentDescription = null , modifier = Modifier . size ( buttonSize ), tint = if ( flag ) Color . Red else Color . Gray ) } } \u6ce8\u610f\uff0c\u4f60\u4e0d\u9700\u8981\u521b\u5efa\u4efb\u4f55\u52a8\u753b\u7c7b\u7684\u5b9e\u4f8b\uff0c\u4e5f\u4e0d\u9700\u8981\u5904\u7406\u4e2d\u65ad\u3002\u5728\u80cc\u540e\uff0c\u4e00\u4e2a\u52a8\u753b\u5bf9\u8c61\uff08\u5373\u4e00\u4e2a Animatable \u5b9e\u4f8b\uff09\u5c06\u88ab\u521b\u5efa\uff0c\u5e76\u88ab\u8bb0\u4f4f\u5728\u8c03\u7528\u5730\u70b9\uff0c\u4ee5\u7b2c\u4e00\u4e2a\u76ee\u6807\u503c\u4f5c\u4e3a\u5176\u521d\u59cb\u503c\u3002\u4ece\u90a3\u4ee5\u540e\uff0c\u4efb\u4f55\u65f6\u5019\u4f60\u7ed9\u8fd9\u4e2a Composable \u5bf9\u8c61\u63d0\u4f9b\u4e00\u4e2a\u4e0d\u540c\u7684\u76ee\u6807\u503c\uff0c\u4e00\u4e2a\u52a8\u753b\u5c31\u4f1a\u81ea\u52a8\u5f00\u59cb\u5411\u90a3\u4e2a\u503c\u53d1\u5c55\u3002\u5982\u679c\u5df2\u7ecf\u6709\u4e00\u4e2a\u52a8\u753b\u5728\u8fd0\u884c\uff0c\u8fd9\u4e2a\u52a8\u753b\u5c31\u4f1a\u4ece\u5b83\u7684\u5f53\u524d\u503c\uff08\u548c\u901f\u5ea6\uff09\u5f00\u59cb\uff0c\u7136\u540e\u5411\u76ee\u6807\u503c\u52a8\u753b\u3002\u5728\u52a8\u753b\u8fc7\u7a0b\u4e2d\uff0c\u8fd9\u4e2a Composable \u4e1c\u897f\u88ab\u91cd\u65b0\u7ec4\u5408\uff0c\u6bcf\u4e00\u5e27\u90fd\u8fd4\u56de\u4e00\u4e2a\u66f4\u65b0\u7684\u52a8\u753b\u503c\u3002 \u5f00\u7bb1\u5373\u7528\uff0c Compose \u4e3a Float \u3001 Color \u3001 Dp \u3001 Size \u3001 Bounds \u3001 Offset \u3001 Rect \u3001 Int \u3001 IntOffset \u548c IntSize \u63d0\u4f9b animate*AsState \u51fd\u6570\u3002\u901a\u8fc7\u4e3a\u5e26\u6709\u901a\u7528\u7c7b\u578b\u7684 animateValueAsState \u63d0\u4f9b TwoWayConverter \uff0c\u53ef\u4ee5\u8f7b\u677e\u6dfb\u52a0\u5bf9\u5176\u4ed6\u6570\u636e\u7c7b\u578b\u7684\u652f\u6301\u3002 \u4f60\u53ef\u4ee5\u901a\u8fc7\u63d0\u4f9b\u4e00\u4e2a AnimationSpec \u6765\u5b9a\u5236\u52a8\u753b\u89c4\u683c\u3002\u8bf7\u53c2\u9605 AnimationSpec \u4ee5\u4e86\u89e3\u66f4\u591a\u4fe1\u606f","title":"Animate*State"},{"location":"design/animation/animatestate/#1","text":"\u4e0b\u9762\u662f\u4e00\u4e2a\u4f7f\u7528\u8fd9\u4e2a API \u5236\u4f5c\u6309\u94ae\u5927\u5c0f\u52a8\u753b\u7684\u4f8b\u5b50\u3002 @Composable fun Demo (){ var change by remember { mutableStateOf ( false ) } var flag by remember { mutableStateOf ( false ) } val buttonSize by animateDpAsState ( targetValue = if ( change ) 32. dp else 24. dp ) if ( buttonSize == 32. dp ) { change = false } IconButton ( onClick = { change = true flag = ! flag } ) { Icon ( Icons . Rounded . Favorite , contentDescription = null , modifier = Modifier . size ( buttonSize ), tint = if ( flag ) Color . Red else Color . Gray ) } } \u6ce8\u610f\uff0c\u4f60\u4e0d\u9700\u8981\u521b\u5efa\u4efb\u4f55\u52a8\u753b\u7c7b\u7684\u5b9e\u4f8b\uff0c\u4e5f\u4e0d\u9700\u8981\u5904\u7406\u4e2d\u65ad\u3002\u5728\u80cc\u540e\uff0c\u4e00\u4e2a\u52a8\u753b\u5bf9\u8c61\uff08\u5373\u4e00\u4e2a Animatable \u5b9e\u4f8b\uff09\u5c06\u88ab\u521b\u5efa\uff0c\u5e76\u88ab\u8bb0\u4f4f\u5728\u8c03\u7528\u5730\u70b9\uff0c\u4ee5\u7b2c\u4e00\u4e2a\u76ee\u6807\u503c\u4f5c\u4e3a\u5176\u521d\u59cb\u503c\u3002\u4ece\u90a3\u4ee5\u540e\uff0c\u4efb\u4f55\u65f6\u5019\u4f60\u7ed9\u8fd9\u4e2a Composable \u5bf9\u8c61\u63d0\u4f9b\u4e00\u4e2a\u4e0d\u540c\u7684\u76ee\u6807\u503c\uff0c\u4e00\u4e2a\u52a8\u753b\u5c31\u4f1a\u81ea\u52a8\u5f00\u59cb\u5411\u90a3\u4e2a\u503c\u53d1\u5c55\u3002\u5982\u679c\u5df2\u7ecf\u6709\u4e00\u4e2a\u52a8\u753b\u5728\u8fd0\u884c\uff0c\u8fd9\u4e2a\u52a8\u753b\u5c31\u4f1a\u4ece\u5b83\u7684\u5f53\u524d\u503c\uff08\u548c\u901f\u5ea6\uff09\u5f00\u59cb\uff0c\u7136\u540e\u5411\u76ee\u6807\u503c\u52a8\u753b\u3002\u5728\u52a8\u753b\u8fc7\u7a0b\u4e2d\uff0c\u8fd9\u4e2a Composable \u4e1c\u897f\u88ab\u91cd\u65b0\u7ec4\u5408\uff0c\u6bcf\u4e00\u5e27\u90fd\u8fd4\u56de\u4e00\u4e2a\u66f4\u65b0\u7684\u52a8\u753b\u503c\u3002 \u5f00\u7bb1\u5373\u7528\uff0c Compose \u4e3a Float \u3001 Color \u3001 Dp \u3001 Size \u3001 Bounds \u3001 Offset \u3001 Rect \u3001 Int \u3001 IntOffset \u548c IntSize \u63d0\u4f9b animate*AsState \u51fd\u6570\u3002\u901a\u8fc7\u4e3a\u5e26\u6709\u901a\u7528\u7c7b\u578b\u7684 animateValueAsState \u63d0\u4f9b TwoWayConverter \uff0c\u53ef\u4ee5\u8f7b\u677e\u6dfb\u52a0\u5bf9\u5176\u4ed6\u6570\u636e\u7c7b\u578b\u7684\u652f\u6301\u3002 \u4f60\u53ef\u4ee5\u901a\u8fc7\u63d0\u4f9b\u4e00\u4e2a AnimationSpec \u6765\u5b9a\u5236\u52a8\u753b\u89c4\u683c\u3002\u8bf7\u53c2\u9605 AnimationSpec \u4ee5\u4e86\u89e3\u66f4\u591a\u4fe1\u606f","title":"1. \u7b80\u5355\u4f7f\u7528"},{"location":"design/animation/animationvisibility/","text":"1. \u57fa\u7840\u7528\u6cd5 var state by remember { mutableStateOf ( true )} Column ( modifier = Modifier . fillMaxSize (), horizontalAlignment = Alignment . CenterHorizontally , verticalArrangement = Arrangement . Center ){ AnimatedVisibility ( visible = state ) { Text ( text = \"\u8fd9\u662f\u4e00\u4e2a\u666e\u901a\u7684\u6b63\u6587\" , fontWeight = FontWeight . W900 , style = MaterialTheme . typography . h5 ) } Spacer ( Modifier . padding ( vertical = 50. dp )) Button ( onClick = { state = ! state }) { Text ( if ( state ) \"\u9690\u85cf\" else \"\u663e\u793a\" ) } } 2. \u8fdb\u573a\u52a8\u753b \u8ba9\u6211\u4eec\u6765\u8bd5\u8bd5 AnimatedVisibility \u4e2d\u7684 Enter \u53c2\u6570\u7684\u7b80\u5355\u4f7f\u7528\u5427\uff01 var state by remember { mutableStateOf ( true )} AnimatedVisibility ( visible = state , enter = slideInVertically ( initialOffsetY = { - 1000 }, animationSpec = tween ( durationMillis = 1200 ) ) ) { Text ( text = \"\u8fd9\u662f\u4e00\u4e2a\u666e\u901a\u7684\u6b63\u6587\" , fontWeight = FontWeight . W900 , style = MaterialTheme . typography . h5 ) } enter : EnterTransition = fadeIn () + expandVertically () sealed class EnterTransition EnterTransition \u5b9a\u4e49\u4e86\u5f53\u4e00\u4e2a AnimatedVisibility Composable \u53d8\u5f97\u53ef\u89c1\u65f6\uff0c\u5b83\u662f\u5982\u4f55\u51fa\u73b0\u5728\u5c4f\u5e55\u4e0a\u7684 \u73b0\u53ef\u7528\u7684 3 \u79cd EnterTransition \u7684\u7c7b\u522b\u5206\u522b\u662f\uff1a fade fadeIn slide\uff1a slideIn , slideInHorizontally , slideInVertically expand\uff1a expandIn , expandHorizontally , expandVertically \u5e76\u4e14\uff0c\u5b83\u4eec\u4e4b\u95f4\u80fd\u591f\u8fdb\u884c\u52a0\u6cd5\u8fd0\u7b97\uff0c\u4f8b\u5982\uff1a var state by remember { mutableStateOf ( true )} AnimatedVisibility ( visible = state , enter = slideInVertically ( initialOffsetY = { - 1000 }, animationSpec = tween ( durationMillis = 1200 ) ) + fadeIn ( animationSpec = tween ( durationMillis = 1200 ) ) ) { Text ( text = \"\u8fd9\u662f\u4e00\u4e2a\u666e\u901a\u7684\u6b63\u6587\" , fontWeight = FontWeight . W900 , style = MaterialTheme . typography . h5 ) } \u6ce8\u610f fadeIn \u548c slideIn \u4e0d\u5f71\u54cd AnimatedVisibility Composable \u3002\u76f8\u6bd4\u4e4b\u4e0b\uff0c expandIn \u5c06\u6269\u5927\u526a\u8f91\u8303\u56f4\u4ee5\u663e\u793a\u6574\u4e2a\u5185\u5bb9\u3002\u8fd9\u5c06\u81ea\u52a8\u5730\u5c06\u5176\u4ed6\u7684\u5e03\u5c40\u52a8\u753b\u5316\uff0c\u975e\u5e38\u50cf Modifier.animateContentSize 3. \u66f4\u591a AnimatedVisibility \u53c2\u6570\u8be6\u60c5","title":"AnimationVisibility"},{"location":"design/animation/animationvisibility/#1","text":"var state by remember { mutableStateOf ( true )} Column ( modifier = Modifier . fillMaxSize (), horizontalAlignment = Alignment . CenterHorizontally , verticalArrangement = Arrangement . Center ){ AnimatedVisibility ( visible = state ) { Text ( text = \"\u8fd9\u662f\u4e00\u4e2a\u666e\u901a\u7684\u6b63\u6587\" , fontWeight = FontWeight . W900 , style = MaterialTheme . typography . h5 ) } Spacer ( Modifier . padding ( vertical = 50. dp )) Button ( onClick = { state = ! state }) { Text ( if ( state ) \"\u9690\u85cf\" else \"\u663e\u793a\" ) } }","title":"1. \u57fa\u7840\u7528\u6cd5"},{"location":"design/animation/animationvisibility/#2","text":"\u8ba9\u6211\u4eec\u6765\u8bd5\u8bd5 AnimatedVisibility \u4e2d\u7684 Enter \u53c2\u6570\u7684\u7b80\u5355\u4f7f\u7528\u5427\uff01 var state by remember { mutableStateOf ( true )} AnimatedVisibility ( visible = state , enter = slideInVertically ( initialOffsetY = { - 1000 }, animationSpec = tween ( durationMillis = 1200 ) ) ) { Text ( text = \"\u8fd9\u662f\u4e00\u4e2a\u666e\u901a\u7684\u6b63\u6587\" , fontWeight = FontWeight . W900 , style = MaterialTheme . typography . h5 ) } enter : EnterTransition = fadeIn () + expandVertically () sealed class EnterTransition EnterTransition \u5b9a\u4e49\u4e86\u5f53\u4e00\u4e2a AnimatedVisibility Composable \u53d8\u5f97\u53ef\u89c1\u65f6\uff0c\u5b83\u662f\u5982\u4f55\u51fa\u73b0\u5728\u5c4f\u5e55\u4e0a\u7684 \u73b0\u53ef\u7528\u7684 3 \u79cd EnterTransition \u7684\u7c7b\u522b\u5206\u522b\u662f\uff1a fade fadeIn slide\uff1a slideIn , slideInHorizontally , slideInVertically expand\uff1a expandIn , expandHorizontally , expandVertically \u5e76\u4e14\uff0c\u5b83\u4eec\u4e4b\u95f4\u80fd\u591f\u8fdb\u884c\u52a0\u6cd5\u8fd0\u7b97\uff0c\u4f8b\u5982\uff1a var state by remember { mutableStateOf ( true )} AnimatedVisibility ( visible = state , enter = slideInVertically ( initialOffsetY = { - 1000 }, animationSpec = tween ( durationMillis = 1200 ) ) + fadeIn ( animationSpec = tween ( durationMillis = 1200 ) ) ) { Text ( text = \"\u8fd9\u662f\u4e00\u4e2a\u666e\u901a\u7684\u6b63\u6587\" , fontWeight = FontWeight . W900 , style = MaterialTheme . typography . h5 ) } \u6ce8\u610f fadeIn \u548c slideIn \u4e0d\u5f71\u54cd AnimatedVisibility Composable \u3002\u76f8\u6bd4\u4e4b\u4e0b\uff0c expandIn \u5c06\u6269\u5927\u526a\u8f91\u8303\u56f4\u4ee5\u663e\u793a\u6574\u4e2a\u5185\u5bb9\u3002\u8fd9\u5c06\u81ea\u52a8\u5730\u5c06\u5176\u4ed6\u7684\u5e03\u5c40\u52a8\u753b\u5316\uff0c\u975e\u5e38\u50cf Modifier.animateContentSize","title":"2. \u8fdb\u573a\u52a8\u753b"},{"location":"design/animation/animationvisibility/#3","text":"AnimatedVisibility \u53c2\u6570\u8be6\u60c5","title":"3. \u66f4\u591a"},{"location":"design/animation/overview/","text":"Jetpack Compose \u63d0\u4f9b\u4e86\u5f3a\u5927\u7684\u3001\u53ef\u6269\u5c55\u7684 API\uff0c\u4f7f\u5f97\u5728\u4f60\u7684\u5e94\u7528\u7a0b\u5e8f\u7684\u7528\u6237\u754c\u9762\u4e0a\u5b9e\u73b0\u5404\u79cd\u52a8\u753b\u53d8\u5f97\u5bb9\u6613\u3002\u672c\u6587\u63cf\u8ff0\u4e86\u5982\u4f55\u4f7f\u7528\u8fd9\u4e9b API\uff0c\u4ee5\u53ca\u6839\u636e\u4f60\u7684\u52a8\u753b\u573a\u666f\u4f7f\u7528\u54ea\u4e2a API\u3002 1. \u6982\u8ff0 \u4e3a\u4e86\u5b9e\u73b0\u6d41\u7545\u548c\u53ef\u7406\u89e3\u7684\u7528\u6237\u4f53\u9a8c\uff0c\u52a8\u753b\u5728\u73b0\u4ee3\u79fb\u52a8\u5e94\u7528\u4e2d\u662f\u5fc5\u4e0d\u53ef\u5c11\u7684\u3002\u8bb8\u591a Jetpack Compose \u52a8\u753b API \u5c31\u50cf\u5e03\u5c40\u548c\u5176\u4ed6 UI \u5143\u7d20\u4e00\u6837\uff0c\u53ef\u4ee5\u4f5c\u4e3a Composable \u51fd\u6570\uff0c\u5b83\u4eec\u7531\u7528 Kotlin coroutine suspend \u51fd\u6570\u6784\u5efa\u7684\u4f4e\u7ea7API \u652f\u6301\u3002\u672c\u6307\u5357\u4ece\u5728\u8bb8\u591a\u5b9e\u9645\u573a\u666f\u4e2d\u5f88\u6709\u7528\u7684\u9ad8\u7ea7 API \u5f00\u59cb\uff0c\u63a5\u7740\u89e3\u91ca\u7ed9\u4f60\u8fdb\u4e00\u6b65\u63a7\u5236\u548c\u5b9a\u5236\u7684\u4f4e\u7ea7 API\u3002 \u4e0b\u9762\u8fd9\u4e2a\u56fe\u8868\u53ef\u4ee5\u5e2e\u52a9\u4f60\u51b3\u5b9a\u4f7f\u7528\u4ec0\u4e48 API \u6765\u5b9e\u73b0\u4f60\u7684\u52a8\u753b\u3002 API \u529f\u80fd AnimationVisibility \u8fdb\u5165/\u9000\u51fa\u7684\u8fc7\u6e21\u52a8\u753b Modifier.contentSize \u5185\u5bb9\u5927\u5c0f\u7684\u53d8\u5316\u8fc7\u6e21\u52a8\u753b Crossfade rememberInfiniteTransition updateTransition animate*AsState \u6307\u5b9a\u7c7b\u578b\u7684\u6570\u636e\u53d8\u5316\u52a8\u753b 2. \u9ad8\u7ea7\u52a8\u753b API Compose \u4e3a\u8bb8\u591a\u5e94\u7528\u7a0b\u5e8f\u4e2d\u4f7f\u7528\u7684\u51e0\u79cd\u5e38\u89c1\u52a8\u753b\u6a21\u5f0f\u63d0\u4f9b\u4e86\u9ad8\u7ea7\u52a8\u753b API \u3002 \u8fd9\u4e9b API \u662f\u4e3a\u9002\u5e94 Material Design Motion \u7684\u6700\u4f73\u5b9e\u8df5\u800c\u91cf\u8eab\u5b9a\u5236\u7684\u3002 AnimatedVisibiliy (\u5b9e\u9a8c\u6027) \u6ce8\u610f \u5b9e\u9a8c\u6027API\u5c06\u6765\u53ef\u80fd\u4f1a\u66f4\u6539\uff0c\u6216\u8005\u53ef\u80fd\u4f1a\u5b8c\u5168\u5220\u9664\u3002 var state by remember { mutableStateOf ( true )} Column ( modifier = Modifier . fillMaxSize (), horizontalAlignment = Alignment . CenterHorizontally , verticalArrangement = Arrangement . Center ){ AnimatedVisibility ( visible = state ) { Text ( text = \"\u8fd9\u662f\u4e00\u4e2a\u666e\u901a\u7684\u6b63\u6587\" , fontWeight = FontWeight . W900 , style = MaterialTheme . typography . h5 ) } Spacer ( Modifier . padding ( vertical = 50. dp )) Button ( onClick = { state = ! state }) { Text ( if ( state ) \"\u9690\u85cf\" else \"\u663e\u793a\" ) } } \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u5185\u5bb9\u901a\u8fc7\u6de1\u5165\u548c\u6269\u5c55\u51fa\u73b0\uff0c\u901a\u8fc7\u6de1\u51fa\u548c\u7f29\u51cf\u6d88\u5931\u3002\u53ef\u4ee5\u901a\u8fc7\u6307\u5b9a EnterTransition \u548c ExitTransition \u6765\u5b9a\u5236\u8fc7\u6e21 var visible by remember { mutableStateOf ( true ) } AnimatedVisibility ( visible = visible , enter = slideInVertically ( initialOffsetY = { - 40 } ) + expandVertically ( expandFrom = Alignment . Top ) + fadeIn ( initialAlpha = 0.3f ), exit = slideOutVertically () + shrinkVertically () + fadeOut () ) { Text ( \"Hello\" , Modifier . fillMaxWidth (). height ( 200. dp )) } \u5982\u4e0a\u4f8b\u6240\u793a\uff0c\u60a8\u53ef\u4ee5\u5c06\u591a\u4e2a EnterTransition \u6216 ExitTransition \u5bf9\u8c61\u4e0e\u4e00\u4e2a + \u8fd0\u7b97\u7b26\u7ec4\u5408\u5728\u4e00\u8d77\uff0c\u5e76\u4e14\u6bcf\u4e2a\u5bf9\u8c61\u90fd\u63a5\u53d7\u53ef\u9009\u53c2\u6570\u4ee5\u81ea\u5b9a\u4e49\u5176\u884c\u4e3a\u3002 EnterTransition fadeIn slideIn expandIn expandHorizontally expandVertically slideInHorizontally slideInVertically ExitTransition fadeOut slideOut expandOut expandHorizontally expandVertically slideOutHorizontally slideOutVertically animateContentSize animateContentSize \u53ef\u4ee5\u5bf9\u5c3a\u5bf8\u66f4\u6539\u8fdb\u884c\u52a8\u753b\u5904\u7406 \u4ee5\u4e0b\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\uff1a var text by remember { mutableStateOf ( \"animateContentSize \u52a8\u753b\" )} Box ( modifier = Modifier . fillMaxSize (), contentAlignment = Alignment . Center ){ Text ( text , modifier = Modifier . clickable { text += text } . animateContentSize () ) } \u518d\u6765\u770b\u770b\u6ca1\u6709\u52a0 animateContentSize() \u7684\u6548\u679c\u5427 Crossfade Crossfade \u5728\u4e24\u4e2a\u5e03\u5c40\u4e4b\u95f4\u7528\u4ea4\u53c9\u6de1\u5165\u6de1\u51fa\u7684\u52a8\u753b\u3002\u901a\u8fc7\u5207\u6362\u4f20\u9012\u7ed9\u5f53\u524d\u53c2\u6570\u7684\u503c\uff0c\u5185\u5bb9\u4ee5\u4ea4\u53c9\u6e10\u53d8\u52a8\u753b\u7684\u65b9\u5f0f\u5207\u6362 @Composable fun < T > Crossfade ( targetState : T , modifier : Modifier = Modifier , animationSpec : FiniteAnimationSpec < Float > = tween (), content : @Composable ( T ) -> Unit ) \u6765\u770b\u770b\u4e00\u4e2a\u7b80\u5355\u7684\u4f7f\u7528 var flag by remember { mutableStateOf ( false )} Column { Crossfade ( targetState = flag , animationSpec = tween ( 1000 )) { when ( it ){ false -> Screen1 () true -> Screen2 () } } Button ( onClick = { flag = ! flag } ) { Text ( \"\u5207\u6362\" ) } } @Composable fun Screen1 (){ Box ( modifier = Modifier . background ( Color . Red ) . size ( 200. dp ), contentAlignment = Alignment . Center ){} } @Composable fun Screen2 (){ Box ( modifier = Modifier . background ( Color . Blue ) . size ( 200. dp ), contentAlignment = Alignment . Center ){} } 3. \u4f4e\u7ea7\u52a8\u753b API \u4e0a\u4e00\u8282\u63d0\u5230\u7684\u6240\u6709\u9ad8\u7ea7\u52a8\u753b API \u90fd\u662f\u5efa\u7acb\u5728\u4f4e\u7ea7\u52a8\u753b API \u7684\u57fa\u7840\u4e4b\u4e0a\u7684\u3002 animate*AsState \u51fd\u6570\u662f\u6700\u7b80\u5355\u7684 API \uff0c\u5b83\u5c06\u4e00\u4e2a\u5373\u65f6\u7684\u503c\u53d8\u5316\u6e32\u67d3\u6210\u4e00\u4e2a\u52a8\u753b\u503c\u3002\u5b83\u7531 Animatable \u652f\u6301\uff0c Animatable \u662f\u4e00\u4e2a\u57fa\u4e8e\u534f\u7a0b\u7684 API \uff0c\u7528\u4e8e\u7ed9\u5355\u4e2a\u503c\u5236\u4f5c\u52a8\u753b\u3002 updateTransition \u521b\u5efa\u4e86\u4e00\u4e2a\u8fc7\u6e21\u5bf9\u8c61\uff0c\u53ef\u4ee5\u7ba1\u7406\u591a\u4e2a\u52a8\u753b\u503c\uff0c\u5e76\u6839\u636e\u72b6\u6001\u53d8\u5316\u8fd0\u884c\u5b83\u4eec\u3002 rememberInfiniteTransition \u7c7b\u4f3c\uff0c\u4f46\u5b83\u521b\u5efa\u4e86\u4e00\u4e2a\u65e0\u9650\u7684\u8fc7\u6e21\uff0c\u53ef\u4ee5\u7ba1\u7406\u591a\u4e2a\u52a8\u753b\uff0c\u65e0\u9650\u5730\u6301\u7eed\u8fd0\u884c\u3002\u9664\u4e86 Animatable \u4e4b\u5916\uff0c\u6240\u6709\u8fd9\u4e9b API \u90fd\u662f\u53ef\u7ec4\u5408\u7684\uff0c\u8fd9\u610f\u5473\u7740\u53ef\u4ee5\u5728\u5408\u6210\u4e4b\u5916\u521b\u5efa\u8fd9\u4e9b\u52a8\u753b\u3002 \u6240\u6709\u8fd9\u4e9b API \u90fd\u662f\u57fa\u4e8e\u66f4\u57fa\u672c\u7684 Animation API \u3002\u5c3d\u7ba1\u5927\u591a\u6570\u5e94\u7528\u7a0b\u5e8f\u4e0d\u4f1a\u76f4\u63a5\u4e0e Animation \u4ea4\u4e92\uff0c\u4f46 Animation \u7684\u4e00\u4e9b\u5b9a\u5236\u529f\u80fd\u53ef\u4ee5\u901a\u8fc7\u66f4\u9ad8\u7ea7\u522b\u7684 API \u83b7\u5f97\u3002\u5173\u4e8e AnimationVector \u548c AnimationSpec \u7684\u66f4\u591a\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605 \u81ea\u5b9a\u4e49\u52a8\u753b \u3002 animate*AsState animate*AsState \u51fd\u6570\u662f Compose \u4e2d\u6700\u7b80\u5355\u7684\u52a8\u753b API \uff0c\u7528\u4e8e\u4e3a\u5355\u4e2a\u503c\u5236\u4f5c\u52a8\u753b\u3002\u4f60\u53ea\u9700\u63d0\u4f9b\u7ed3\u675f\u503c\uff08\u6216\u76ee\u6807\u503c\uff09\uff0c API \u5c31\u4f1a\u4ece\u5f53\u524d\u503c\u5230\u6307\u5b9a\u503c\u5f00\u59cb\u52a8\u753b\u3002 \u4e0b\u9762\u662f\u4e00\u4e2a\u4f7f\u7528\u8fd9\u4e2a API \u5236\u4f5c alpha \u52a8\u753b\u7684\u4f8b\u5b50\u3002\u901a\u8fc7\u7b80\u5355\u5730\u5c06\u76ee\u6807\u503c\u5305\u88f9\u5728 animateFloatAsState \u4e2d\uff0c alpha \u503c\u73b0\u5728\u662f\u4e00\u4e2a\u4ecb\u4e8e\u6240\u63d0\u4f9b\u7684\u503c\uff08\u672c\u4f8b\u4e2d\u662f 1f \u6216 0.5f \uff09\u4e4b\u95f4\u7684\u52a8\u753b\u503c\u3002 val alpha : Float by animateFloatAsState ( if ( enabled ) 1f else 0.5f ) Box ( Modifier . fillMaxSize () . graphicsLayer ( alpha = alpha ) . background ( Color . Red ) ) \u5728\u8fd9\u91cc\u67e5\u770b\u5173\u4e8e animate*AsState \u7684\u66f4\u591a\u4ecb\u7ecd Animatable Animatable \u4f1a\u5728\u5185\u90e8\u50a8\u5b58\u4e00\u4e2a\u503c\uff0c\u5f53\u503c\u901a\u8fc7 animateTo \u88ab\u6539\u53d8\u65f6\uff0c\u5b83\u53ef\u4ee5\u4ea7\u751f\u52a8\u753b\u3002\u8fd9\u5c31\u662f\u652f\u6301 animate*AsState \u5b9e\u73b0\u7684 API \u3002\u5b83\u786e\u4fdd\u4e86\u4e00\u81f4\u7684\u5ef6\u7eed\u6027\u548c\u4e92\u65a5\u6027\uff0c\u8fd9\u610f\u5473\u7740\u503c\u7684\u53d8\u5316\u603b\u662f\u8fde\u7eed\u7684\uff0c\u4efb\u4f55\u6b63\u5728\u8fdb\u884c\u7684\u52a8\u753b\u90fd\u4f1a\u88ab\u53d6\u6d88\u3002 Animatable \u7684\u8bb8\u591a\u529f\u80fd\uff0c\u5305\u62ec animateTo \uff0c\u90fd\u662f\u4f5c\u4e3a suspend \u51fd\u6570\u63d0\u4f9b\u7684\u3002\u8fd9\u610f\u5473\u7740\u5b83\u4eec\u9700\u8981\u88ab\u5305\u88f9\u5728\u4e00\u4e2a\u9002\u5f53\u7684\u534f\u7a0b\u4f5c\u7528\u57df\u5185\u5185\u3002\u4f8b\u5982\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528 LaunchedEffect \u8fd9\u4e2a Composable \u6765\u521b\u5efa\u4e00\u4e2a\u53ea\u9488\u5bf9\u6307\u5b9a\u952e\u503c\u7684\u6301\u7eed\u65f6\u95f4\u7684\u4f5c\u7528\u57df\u3002 var flag by remember { mutableStateOf ( false )} val color = remember { Animatable ( Color . Gray ) } Column { Box ( Modifier . size ( 300. dp ). background ( color . value )) Button ( onClick = { flag = ! flag }) { Text ( \"\u5207\u6362\" ) } } LaunchedEffect ( flag ) { color . animateTo ( targetValue = if ( flag ){ Color . Green } else { Color . Red }, animationSpec = tween ( 1000 ) ) } \u5728\u4e0a\u9762\u7684\u4f8b\u5b50\u4e2d\uff0c\u6211\u4eec\u521b\u5efa\u5e76\u8bb0\u4f4f\u4e86\u4e00\u4e2a Animatable \u7684\u5b9e\u4f8b\uff0c\u5176\u521d\u59cb\u503c\u4e3a Color.Gray \u3002\u6839\u636e flag \u7684\u503c\uff0c\u989c\u8272\u4f1a\u52a8\u753b\u5730\u53d8\u6210 Color.Green \u6216 Color.Red \u3002\u4efb\u4f55\u5bf9 flag \u7684\u540e\u7eed\u6539\u53d8\u90fd\u4f1a\u542f\u52a8\u52a8\u753b\u5230\u53e6\u4e00\u79cd\u989c\u8272\u3002\u5982\u679c\u5728\u6539\u53d8\u503c\u7684\u65f6\u5019\u6709\u4e00\u4e2a\u6b63\u5728\u8fdb\u884c\u7684\u52a8\u753b\uff0c\u90a3\u4e48\u8fd9\u4e2a\u52a8\u753b\u4f1a\u88ab\u53d6\u6d88\uff0c\u65b0\u7684\u52a8\u753b\u4f1a\u4ece\u5f53\u524d\u7684\u5feb\u7167\u503c\u548c\u5f53\u524d\u7684\u901f\u5ea6\u5f00\u59cb\u3002 \u8fd9\u662f\u652f\u6301\u4e0a\u4e00\u8282\u4e2d\u63d0\u5230\u7684 animate*AsState API \u7684\u52a8\u753b\u5b9e\u73b0\u3002\u4e0e animate*AsState \u76f8\u6bd4\uff0c\u76f4\u63a5\u4f7f\u7528 Animatable \u5728\u51e0\u4e2a\u65b9\u9762\u7ed9\u4e86\u6211\u4eec\u66f4\u7cbe\u7ec6\u7684\u63a7\u5236\u3002\u9996\u5148\uff0c Animatable \u53ef\u4ee5\u6709\u4e00\u4e2a\u4e0d\u540c\u4e8e\u5176\u7b2c\u4e00\u4e2a\u76ee\u6807\u503c\u7684\u521d\u59cb\u503c\u3002\u4f8b\u5982\uff0c\u4e0a\u9762\u7684\u4ee3\u7801\u4f8b\u5b50\u4e00\u5f00\u59cb\u663e\u793a\u7684\u662f\u4e00\u4e2a\u7070\u8272\u7684\u76d2\u5b50\uff0c\u5f53\u8fd0\u884c\u7a0b\u5e8f\u7684\u65f6\u5019\u7acb\u5373\u5f00\u59cb\u52a8\u753b\u5730\u53d8\u6210\u4e3a\u7eff\u8272\u6216\u7ea2\u8272\u3002\u7b2c\u4e8c\uff0c Animatable \u5bf9\u5185\u5bb9\u503c\u63d0\u4f9b\u4e86\u66f4\u591a\u7684\u64cd\u4f5c\uff0c\u5373 snapTo \u548c animateDecay \u3002 snapTo \u5c06\u5f53\u524d\u503c\u7acb\u5373\u8bbe\u7f6e\u4e3a\u76ee\u6807\u503c\u3002\u5f53\u52a8\u753b\u672c\u8eab\u4e0d\u662f\u552f\u4e00\u7684\u6570\u636e\u6e90\uff0c\u5e76\u4e14\u5fc5\u987b\u4e0e\u5176\u4ed6\u72b6\u6001\u540c\u6b65\u65f6\uff0c\u4f8b\u5982\u89e6\u6478\u4e8b\u4ef6\uff0c\u8fd9\u662f\u975e\u5e38\u6709\u7528\u7684\u3002 animateDecay \u542f\u52a8\u4e00\u4e2a\u4ece\u7ed9\u5b9a\u901f\u5ea6\u5f00\u59cb\u653e\u7f13\u7684\u52a8\u753b\u3002\u8fd9\u5bf9\u4e8e\u5b9e\u73b0\u7529\u52a8\u884c\u4e3a\u5f88\u6709\u7528\u3002\u66f4\u591a\u4fe1\u606f\u89c1\u624b\u52bf\u548c\u52a8\u753b\u3002 Animatable \u652f\u6301 Float \u548c Color \uff0c\u4f46\u4efb\u4f55\u6570\u636e\u7c7b\u578b\u90fd\u53ef\u4ee5\u901a\u8fc7\u63d0\u4f9b\u4e00\u4e2a TwoWayConverter \u6765\u4f7f\u7528\u3002\u53c2\u89c1 AnimationVector \u83b7\u53d6\u66f4\u591a\u4fe1\u606f\u3002 \u4f60\u53ef\u4ee5\u901a\u8fc7\u63d0\u4f9b\u4e00\u4e2a AnimationSpec \u6765\u5b9a\u5236\u52a8\u753b\u89c4\u683c\u3002\u53c2\u89c1 AnimationSpec \u83b7\u53d6\u66f4\u591a\u4fe1\u606f\u3002","title":"\u6982\u8ff0"},{"location":"design/animation/overview/#1","text":"\u4e3a\u4e86\u5b9e\u73b0\u6d41\u7545\u548c\u53ef\u7406\u89e3\u7684\u7528\u6237\u4f53\u9a8c\uff0c\u52a8\u753b\u5728\u73b0\u4ee3\u79fb\u52a8\u5e94\u7528\u4e2d\u662f\u5fc5\u4e0d\u53ef\u5c11\u7684\u3002\u8bb8\u591a Jetpack Compose \u52a8\u753b API \u5c31\u50cf\u5e03\u5c40\u548c\u5176\u4ed6 UI \u5143\u7d20\u4e00\u6837\uff0c\u53ef\u4ee5\u4f5c\u4e3a Composable \u51fd\u6570\uff0c\u5b83\u4eec\u7531\u7528 Kotlin coroutine suspend \u51fd\u6570\u6784\u5efa\u7684\u4f4e\u7ea7API \u652f\u6301\u3002\u672c\u6307\u5357\u4ece\u5728\u8bb8\u591a\u5b9e\u9645\u573a\u666f\u4e2d\u5f88\u6709\u7528\u7684\u9ad8\u7ea7 API \u5f00\u59cb\uff0c\u63a5\u7740\u89e3\u91ca\u7ed9\u4f60\u8fdb\u4e00\u6b65\u63a7\u5236\u548c\u5b9a\u5236\u7684\u4f4e\u7ea7 API\u3002 \u4e0b\u9762\u8fd9\u4e2a\u56fe\u8868\u53ef\u4ee5\u5e2e\u52a9\u4f60\u51b3\u5b9a\u4f7f\u7528\u4ec0\u4e48 API \u6765\u5b9e\u73b0\u4f60\u7684\u52a8\u753b\u3002 API \u529f\u80fd AnimationVisibility \u8fdb\u5165/\u9000\u51fa\u7684\u8fc7\u6e21\u52a8\u753b Modifier.contentSize \u5185\u5bb9\u5927\u5c0f\u7684\u53d8\u5316\u8fc7\u6e21\u52a8\u753b Crossfade rememberInfiniteTransition updateTransition animate*AsState \u6307\u5b9a\u7c7b\u578b\u7684\u6570\u636e\u53d8\u5316\u52a8\u753b","title":"1. \u6982\u8ff0"},{"location":"design/animation/overview/#2-api","text":"Compose \u4e3a\u8bb8\u591a\u5e94\u7528\u7a0b\u5e8f\u4e2d\u4f7f\u7528\u7684\u51e0\u79cd\u5e38\u89c1\u52a8\u753b\u6a21\u5f0f\u63d0\u4f9b\u4e86\u9ad8\u7ea7\u52a8\u753b API \u3002 \u8fd9\u4e9b API \u662f\u4e3a\u9002\u5e94 Material Design Motion \u7684\u6700\u4f73\u5b9e\u8df5\u800c\u91cf\u8eab\u5b9a\u5236\u7684\u3002","title":"2. \u9ad8\u7ea7\u52a8\u753b API"},{"location":"design/animation/overview/#animatedvisibiliy","text":"\u6ce8\u610f \u5b9e\u9a8c\u6027API\u5c06\u6765\u53ef\u80fd\u4f1a\u66f4\u6539\uff0c\u6216\u8005\u53ef\u80fd\u4f1a\u5b8c\u5168\u5220\u9664\u3002 var state by remember { mutableStateOf ( true )} Column ( modifier = Modifier . fillMaxSize (), horizontalAlignment = Alignment . CenterHorizontally , verticalArrangement = Arrangement . Center ){ AnimatedVisibility ( visible = state ) { Text ( text = \"\u8fd9\u662f\u4e00\u4e2a\u666e\u901a\u7684\u6b63\u6587\" , fontWeight = FontWeight . W900 , style = MaterialTheme . typography . h5 ) } Spacer ( Modifier . padding ( vertical = 50. dp )) Button ( onClick = { state = ! state }) { Text ( if ( state ) \"\u9690\u85cf\" else \"\u663e\u793a\" ) } } \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u5185\u5bb9\u901a\u8fc7\u6de1\u5165\u548c\u6269\u5c55\u51fa\u73b0\uff0c\u901a\u8fc7\u6de1\u51fa\u548c\u7f29\u51cf\u6d88\u5931\u3002\u53ef\u4ee5\u901a\u8fc7\u6307\u5b9a EnterTransition \u548c ExitTransition \u6765\u5b9a\u5236\u8fc7\u6e21 var visible by remember { mutableStateOf ( true ) } AnimatedVisibility ( visible = visible , enter = slideInVertically ( initialOffsetY = { - 40 } ) + expandVertically ( expandFrom = Alignment . Top ) + fadeIn ( initialAlpha = 0.3f ), exit = slideOutVertically () + shrinkVertically () + fadeOut () ) { Text ( \"Hello\" , Modifier . fillMaxWidth (). height ( 200. dp )) } \u5982\u4e0a\u4f8b\u6240\u793a\uff0c\u60a8\u53ef\u4ee5\u5c06\u591a\u4e2a EnterTransition \u6216 ExitTransition \u5bf9\u8c61\u4e0e\u4e00\u4e2a + \u8fd0\u7b97\u7b26\u7ec4\u5408\u5728\u4e00\u8d77\uff0c\u5e76\u4e14\u6bcf\u4e2a\u5bf9\u8c61\u90fd\u63a5\u53d7\u53ef\u9009\u53c2\u6570\u4ee5\u81ea\u5b9a\u4e49\u5176\u884c\u4e3a\u3002 EnterTransition fadeIn slideIn expandIn expandHorizontally expandVertically slideInHorizontally slideInVertically ExitTransition fadeOut slideOut expandOut expandHorizontally expandVertically slideOutHorizontally slideOutVertically","title":"AnimatedVisibiliy (\u5b9e\u9a8c\u6027)"},{"location":"design/animation/overview/#animatecontentsize","text":"animateContentSize \u53ef\u4ee5\u5bf9\u5c3a\u5bf8\u66f4\u6539\u8fdb\u884c\u52a8\u753b\u5904\u7406 \u4ee5\u4e0b\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\uff1a var text by remember { mutableStateOf ( \"animateContentSize \u52a8\u753b\" )} Box ( modifier = Modifier . fillMaxSize (), contentAlignment = Alignment . Center ){ Text ( text , modifier = Modifier . clickable { text += text } . animateContentSize () ) } \u518d\u6765\u770b\u770b\u6ca1\u6709\u52a0 animateContentSize() \u7684\u6548\u679c\u5427","title":"animateContentSize"},{"location":"design/animation/overview/#crossfade","text":"Crossfade \u5728\u4e24\u4e2a\u5e03\u5c40\u4e4b\u95f4\u7528\u4ea4\u53c9\u6de1\u5165\u6de1\u51fa\u7684\u52a8\u753b\u3002\u901a\u8fc7\u5207\u6362\u4f20\u9012\u7ed9\u5f53\u524d\u53c2\u6570\u7684\u503c\uff0c\u5185\u5bb9\u4ee5\u4ea4\u53c9\u6e10\u53d8\u52a8\u753b\u7684\u65b9\u5f0f\u5207\u6362 @Composable fun < T > Crossfade ( targetState : T , modifier : Modifier = Modifier , animationSpec : FiniteAnimationSpec < Float > = tween (), content : @Composable ( T ) -> Unit ) \u6765\u770b\u770b\u4e00\u4e2a\u7b80\u5355\u7684\u4f7f\u7528 var flag by remember { mutableStateOf ( false )} Column { Crossfade ( targetState = flag , animationSpec = tween ( 1000 )) { when ( it ){ false -> Screen1 () true -> Screen2 () } } Button ( onClick = { flag = ! flag } ) { Text ( \"\u5207\u6362\" ) } } @Composable fun Screen1 (){ Box ( modifier = Modifier . background ( Color . Red ) . size ( 200. dp ), contentAlignment = Alignment . Center ){} } @Composable fun Screen2 (){ Box ( modifier = Modifier . background ( Color . Blue ) . size ( 200. dp ), contentAlignment = Alignment . Center ){} }","title":"Crossfade"},{"location":"design/animation/overview/#3-api","text":"\u4e0a\u4e00\u8282\u63d0\u5230\u7684\u6240\u6709\u9ad8\u7ea7\u52a8\u753b API \u90fd\u662f\u5efa\u7acb\u5728\u4f4e\u7ea7\u52a8\u753b API \u7684\u57fa\u7840\u4e4b\u4e0a\u7684\u3002 animate*AsState \u51fd\u6570\u662f\u6700\u7b80\u5355\u7684 API \uff0c\u5b83\u5c06\u4e00\u4e2a\u5373\u65f6\u7684\u503c\u53d8\u5316\u6e32\u67d3\u6210\u4e00\u4e2a\u52a8\u753b\u503c\u3002\u5b83\u7531 Animatable \u652f\u6301\uff0c Animatable \u662f\u4e00\u4e2a\u57fa\u4e8e\u534f\u7a0b\u7684 API \uff0c\u7528\u4e8e\u7ed9\u5355\u4e2a\u503c\u5236\u4f5c\u52a8\u753b\u3002 updateTransition \u521b\u5efa\u4e86\u4e00\u4e2a\u8fc7\u6e21\u5bf9\u8c61\uff0c\u53ef\u4ee5\u7ba1\u7406\u591a\u4e2a\u52a8\u753b\u503c\uff0c\u5e76\u6839\u636e\u72b6\u6001\u53d8\u5316\u8fd0\u884c\u5b83\u4eec\u3002 rememberInfiniteTransition \u7c7b\u4f3c\uff0c\u4f46\u5b83\u521b\u5efa\u4e86\u4e00\u4e2a\u65e0\u9650\u7684\u8fc7\u6e21\uff0c\u53ef\u4ee5\u7ba1\u7406\u591a\u4e2a\u52a8\u753b\uff0c\u65e0\u9650\u5730\u6301\u7eed\u8fd0\u884c\u3002\u9664\u4e86 Animatable \u4e4b\u5916\uff0c\u6240\u6709\u8fd9\u4e9b API \u90fd\u662f\u53ef\u7ec4\u5408\u7684\uff0c\u8fd9\u610f\u5473\u7740\u53ef\u4ee5\u5728\u5408\u6210\u4e4b\u5916\u521b\u5efa\u8fd9\u4e9b\u52a8\u753b\u3002 \u6240\u6709\u8fd9\u4e9b API \u90fd\u662f\u57fa\u4e8e\u66f4\u57fa\u672c\u7684 Animation API \u3002\u5c3d\u7ba1\u5927\u591a\u6570\u5e94\u7528\u7a0b\u5e8f\u4e0d\u4f1a\u76f4\u63a5\u4e0e Animation \u4ea4\u4e92\uff0c\u4f46 Animation \u7684\u4e00\u4e9b\u5b9a\u5236\u529f\u80fd\u53ef\u4ee5\u901a\u8fc7\u66f4\u9ad8\u7ea7\u522b\u7684 API \u83b7\u5f97\u3002\u5173\u4e8e AnimationVector \u548c AnimationSpec \u7684\u66f4\u591a\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605 \u81ea\u5b9a\u4e49\u52a8\u753b \u3002","title":"3. \u4f4e\u7ea7\u52a8\u753b API"},{"location":"design/animation/overview/#animateasstate","text":"animate*AsState \u51fd\u6570\u662f Compose \u4e2d\u6700\u7b80\u5355\u7684\u52a8\u753b API \uff0c\u7528\u4e8e\u4e3a\u5355\u4e2a\u503c\u5236\u4f5c\u52a8\u753b\u3002\u4f60\u53ea\u9700\u63d0\u4f9b\u7ed3\u675f\u503c\uff08\u6216\u76ee\u6807\u503c\uff09\uff0c API \u5c31\u4f1a\u4ece\u5f53\u524d\u503c\u5230\u6307\u5b9a\u503c\u5f00\u59cb\u52a8\u753b\u3002 \u4e0b\u9762\u662f\u4e00\u4e2a\u4f7f\u7528\u8fd9\u4e2a API \u5236\u4f5c alpha \u52a8\u753b\u7684\u4f8b\u5b50\u3002\u901a\u8fc7\u7b80\u5355\u5730\u5c06\u76ee\u6807\u503c\u5305\u88f9\u5728 animateFloatAsState \u4e2d\uff0c alpha \u503c\u73b0\u5728\u662f\u4e00\u4e2a\u4ecb\u4e8e\u6240\u63d0\u4f9b\u7684\u503c\uff08\u672c\u4f8b\u4e2d\u662f 1f \u6216 0.5f \uff09\u4e4b\u95f4\u7684\u52a8\u753b\u503c\u3002 val alpha : Float by animateFloatAsState ( if ( enabled ) 1f else 0.5f ) Box ( Modifier . fillMaxSize () . graphicsLayer ( alpha = alpha ) . background ( Color . Red ) ) \u5728\u8fd9\u91cc\u67e5\u770b\u5173\u4e8e animate*AsState \u7684\u66f4\u591a\u4ecb\u7ecd","title":"animate*AsState"},{"location":"design/animation/overview/#animatable","text":"Animatable \u4f1a\u5728\u5185\u90e8\u50a8\u5b58\u4e00\u4e2a\u503c\uff0c\u5f53\u503c\u901a\u8fc7 animateTo \u88ab\u6539\u53d8\u65f6\uff0c\u5b83\u53ef\u4ee5\u4ea7\u751f\u52a8\u753b\u3002\u8fd9\u5c31\u662f\u652f\u6301 animate*AsState \u5b9e\u73b0\u7684 API \u3002\u5b83\u786e\u4fdd\u4e86\u4e00\u81f4\u7684\u5ef6\u7eed\u6027\u548c\u4e92\u65a5\u6027\uff0c\u8fd9\u610f\u5473\u7740\u503c\u7684\u53d8\u5316\u603b\u662f\u8fde\u7eed\u7684\uff0c\u4efb\u4f55\u6b63\u5728\u8fdb\u884c\u7684\u52a8\u753b\u90fd\u4f1a\u88ab\u53d6\u6d88\u3002 Animatable \u7684\u8bb8\u591a\u529f\u80fd\uff0c\u5305\u62ec animateTo \uff0c\u90fd\u662f\u4f5c\u4e3a suspend \u51fd\u6570\u63d0\u4f9b\u7684\u3002\u8fd9\u610f\u5473\u7740\u5b83\u4eec\u9700\u8981\u88ab\u5305\u88f9\u5728\u4e00\u4e2a\u9002\u5f53\u7684\u534f\u7a0b\u4f5c\u7528\u57df\u5185\u5185\u3002\u4f8b\u5982\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528 LaunchedEffect \u8fd9\u4e2a Composable \u6765\u521b\u5efa\u4e00\u4e2a\u53ea\u9488\u5bf9\u6307\u5b9a\u952e\u503c\u7684\u6301\u7eed\u65f6\u95f4\u7684\u4f5c\u7528\u57df\u3002 var flag by remember { mutableStateOf ( false )} val color = remember { Animatable ( Color . Gray ) } Column { Box ( Modifier . size ( 300. dp ). background ( color . value )) Button ( onClick = { flag = ! flag }) { Text ( \"\u5207\u6362\" ) } } LaunchedEffect ( flag ) { color . animateTo ( targetValue = if ( flag ){ Color . Green } else { Color . Red }, animationSpec = tween ( 1000 ) ) } \u5728\u4e0a\u9762\u7684\u4f8b\u5b50\u4e2d\uff0c\u6211\u4eec\u521b\u5efa\u5e76\u8bb0\u4f4f\u4e86\u4e00\u4e2a Animatable \u7684\u5b9e\u4f8b\uff0c\u5176\u521d\u59cb\u503c\u4e3a Color.Gray \u3002\u6839\u636e flag \u7684\u503c\uff0c\u989c\u8272\u4f1a\u52a8\u753b\u5730\u53d8\u6210 Color.Green \u6216 Color.Red \u3002\u4efb\u4f55\u5bf9 flag \u7684\u540e\u7eed\u6539\u53d8\u90fd\u4f1a\u542f\u52a8\u52a8\u753b\u5230\u53e6\u4e00\u79cd\u989c\u8272\u3002\u5982\u679c\u5728\u6539\u53d8\u503c\u7684\u65f6\u5019\u6709\u4e00\u4e2a\u6b63\u5728\u8fdb\u884c\u7684\u52a8\u753b\uff0c\u90a3\u4e48\u8fd9\u4e2a\u52a8\u753b\u4f1a\u88ab\u53d6\u6d88\uff0c\u65b0\u7684\u52a8\u753b\u4f1a\u4ece\u5f53\u524d\u7684\u5feb\u7167\u503c\u548c\u5f53\u524d\u7684\u901f\u5ea6\u5f00\u59cb\u3002 \u8fd9\u662f\u652f\u6301\u4e0a\u4e00\u8282\u4e2d\u63d0\u5230\u7684 animate*AsState API \u7684\u52a8\u753b\u5b9e\u73b0\u3002\u4e0e animate*AsState \u76f8\u6bd4\uff0c\u76f4\u63a5\u4f7f\u7528 Animatable \u5728\u51e0\u4e2a\u65b9\u9762\u7ed9\u4e86\u6211\u4eec\u66f4\u7cbe\u7ec6\u7684\u63a7\u5236\u3002\u9996\u5148\uff0c Animatable \u53ef\u4ee5\u6709\u4e00\u4e2a\u4e0d\u540c\u4e8e\u5176\u7b2c\u4e00\u4e2a\u76ee\u6807\u503c\u7684\u521d\u59cb\u503c\u3002\u4f8b\u5982\uff0c\u4e0a\u9762\u7684\u4ee3\u7801\u4f8b\u5b50\u4e00\u5f00\u59cb\u663e\u793a\u7684\u662f\u4e00\u4e2a\u7070\u8272\u7684\u76d2\u5b50\uff0c\u5f53\u8fd0\u884c\u7a0b\u5e8f\u7684\u65f6\u5019\u7acb\u5373\u5f00\u59cb\u52a8\u753b\u5730\u53d8\u6210\u4e3a\u7eff\u8272\u6216\u7ea2\u8272\u3002\u7b2c\u4e8c\uff0c Animatable \u5bf9\u5185\u5bb9\u503c\u63d0\u4f9b\u4e86\u66f4\u591a\u7684\u64cd\u4f5c\uff0c\u5373 snapTo \u548c animateDecay \u3002 snapTo \u5c06\u5f53\u524d\u503c\u7acb\u5373\u8bbe\u7f6e\u4e3a\u76ee\u6807\u503c\u3002\u5f53\u52a8\u753b\u672c\u8eab\u4e0d\u662f\u552f\u4e00\u7684\u6570\u636e\u6e90\uff0c\u5e76\u4e14\u5fc5\u987b\u4e0e\u5176\u4ed6\u72b6\u6001\u540c\u6b65\u65f6\uff0c\u4f8b\u5982\u89e6\u6478\u4e8b\u4ef6\uff0c\u8fd9\u662f\u975e\u5e38\u6709\u7528\u7684\u3002 animateDecay \u542f\u52a8\u4e00\u4e2a\u4ece\u7ed9\u5b9a\u901f\u5ea6\u5f00\u59cb\u653e\u7f13\u7684\u52a8\u753b\u3002\u8fd9\u5bf9\u4e8e\u5b9e\u73b0\u7529\u52a8\u884c\u4e3a\u5f88\u6709\u7528\u3002\u66f4\u591a\u4fe1\u606f\u89c1\u624b\u52bf\u548c\u52a8\u753b\u3002 Animatable \u652f\u6301 Float \u548c Color \uff0c\u4f46\u4efb\u4f55\u6570\u636e\u7c7b\u578b\u90fd\u53ef\u4ee5\u901a\u8fc7\u63d0\u4f9b\u4e00\u4e2a TwoWayConverter \u6765\u4f7f\u7528\u3002\u53c2\u89c1 AnimationVector \u83b7\u53d6\u66f4\u591a\u4fe1\u606f\u3002 \u4f60\u53ef\u4ee5\u901a\u8fc7\u63d0\u4f9b\u4e00\u4e2a AnimationSpec \u6765\u5b9a\u5236\u52a8\u753b\u89c4\u683c\u3002\u53c2\u89c1 AnimationSpec \u83b7\u53d6\u66f4\u591a\u4fe1\u606f\u3002","title":"Animatable"},{"location":"design/gesture/draggable/","text":"1. Draggable\u80fd\u505a\u4ec0\u4e48 draggable \u4fee\u9970\u7b26\u5141\u8bb8\u5f00\u53d1\u8005\u76d1\u542cUI\u7ec4\u4ef6\u7684\u62d6\u52a8\u624b\u52bf\u504f\u79fb\u91cf\uff0c\u901a\u8fc7\u504f\u79fb\u91cf\u4ece\u800c\u53ef\u4ee5\u5b9a\u5236UI\u52a8\u753b\u6548\u679c\u3002 \u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0c draggable \u4fee\u9970\u7b26\u53ea\u80fd\u76d1\u542c\u5782\u76f4\u65b9\u5411\u504f\u79fb\u6216\u6c34\u5e73\u65b9\u5411\u504f\u79fb\u3002 2. Draggable\u53c2\u6570\u5217\u8868 \u4f7f\u7528 draggable \u4fee\u9970\u7b26\u81f3\u5c11\u9700\u8981\u4f20\u5165\u4e24\u4e2a\u53c2\u6570 draggableState \u3001 orientation draggableState\uff1a\u901a\u8fc7 draggableState \u53ef\u4ee5\u83b7\u53d6\u5230\u62d6\u52a8\u624b\u52bf\u7684\u504f\u79fb\u91cf\uff0c\u5e76\u5141\u8bb8\u5f00\u53d1\u8005\u52a8\u6001\u63a7\u5236\u504f\u79fb\u91cf orientation\uff1a\u76d1\u542c\u7684\u62d6\u52a8\u624b\u52bf\u65b9\u5411\uff0c\u53ea\u80fd\u662f\u6c34\u5e73\u65b9\u5411(Orientation.Horizontal)\u6216\u5782\u76f4\u65b9\u5411(Orientation.Vertical) fun Modifier . draggable ( state : DraggableState , orientation : Orientation , enabled : Boolean = true , interactionSource : MutableInteractionSource? = null , startDragImmediately : Boolean = false , onDragStarted : suspend CoroutineScope .( startedPosition : Offset ) -> Unit = {}, onDragStopped : suspend CoroutineScope .( velocity : Float ) -> Unit = {}, reverseDirection : Boolean = false ) 3. Draggable\u4f7f\u7528\u793a\u4f8b \u5728\u672c\u8282\u4e2d\uff0c\u6211\u4eec\u5c06\u4f7f\u7528 Draggable \u4fee\u9970\u7b26\u5b8c\u6210\u4e00\u4e2a\u7b80\u5355\u7684\u6ed1\u5757\u62d6\u52a8\u52a8\u753b\u3002 \u9996\u5148\u6211\u4eec\u5b9a\u4e49\u4e86\u6ed1\u5757\u504f\u79fb\u91cf\u4ee5\u53ca\u6ed1\u5757\u7684\u8fb9\u957f\u3002 \u901a\u8fc7 rememberDraggableState \u65b9\u6cd5\u83b7\u53d6 DraggableState \u5b9e\u4f8b\uff0c\u901a\u8fc7\u56de\u8c03lambda\u76d1\u542c\u5f53\u524d\u7684\u504f\u79fb\u91cf\u5e76\u8fdb\u884c\u7d2f\u52a0\uff0c\u5e76\u4e14\u9650\u5236\u4e86\u6ed1\u5757\u7684\u504f\u79fb\u533a\u95f4\u3002 var offsetX by remember { mutableStateOf ( 0f ) } val boxSideLengthDp = 50. dp val boxSildeLengthPx = with ( LocalDensity . current ) { boxSideLengthDp . toPx () } val draggableState = rememberDraggableState { offsetX = ( offsetX + it ). coerceIn ( 0f , 3 * boxSildeLengthPx ) } \u63a5\u4e0b\u6765\u6211\u4eec\u5c06\u4e3a draggable \u4fee\u9970\u7b26\u63d0\u4f9b\u7ed9draggableState\u4e0eorientation\u4e86\u3002 \u6ce8\u610f\uff1a\u7531\u4e8eModifer\u94fe\u5f0f\u6267\u884c\uff0c\u6b64\u65f6offset\u5fc5\u9700\u5728draggable\u4e0ebackground\u524d\u9762\u3002 \u26a0\ufe0f\u9519\u8bef\u793a\u4f8b1(draggable\u5728offset\u524d\u9762) : \u7b2c\u4e8c\u6b21\u62d6\u52a8\u65f6UI\u63a7\u4ef6\u62d6\u52a8\u53ea\u80fd\u62d6\u52a8\u521d\u59cb\u4f4d\u7f6e\u624d\u751f\u6548\uff0c\u4e0d\u4f1a\u8ddf\u968fUI\u63a7\u4ef6\u800c\u79fb\u52a8\u76d1\u542c\uff0c\u539f\u56e0\u662f\u6bcf\u6b21\u62d6\u52a8\u65f6draggable\u90fd\u76d1\u542c\u7684\u90fd\u662f\u521d\u59cb\u4f4d\u7f6e\uff0c\u4e0d\u662f\u504f\u79fb\u540e\u4f4d\u7f6e\u3002 \u26a0\ufe0f\u9519\u8bef\u793a\u4f8b2(background\u5728offset\u524d\u9762) : UI\u63a7\u4ef6\u7ed8\u5236\u7684\u9ed1\u5757\u4e0d\u4f1a\u8ddf\u624b\uff0c\u539f\u56e0\u5728\u4e8e\u6bcf\u6b21\u7ed8\u5236\u65f6background\u90fd\u5728\u521d\u59cb\u4f4d\u7f6e\u7ed8\u5236\uff0c\u4e0d\u662f\u504f\u79fb\u540e\u4f4d\u7f6e\u3002 Box ( Modifier . width ( boxSideLengthDp * 4 ) . height ( boxSideLengthDp ) . background ( Color . LightGray ) ) { Box ( Modifier . size ( boxSideLengthDp ) . offset { IntOffset ( offsetX . roundToInt (), 0 ) } . draggable ( orientation = Orientation . Horizontal , state = draggableState ) . background ( Color . DarkGray ) ) } \u6548\u679c\u5c55\u793a","title":"Draggable\u62d6\u52a8"},{"location":"design/gesture/draggable/#1-draggable","text":"draggable \u4fee\u9970\u7b26\u5141\u8bb8\u5f00\u53d1\u8005\u76d1\u542cUI\u7ec4\u4ef6\u7684\u62d6\u52a8\u624b\u52bf\u504f\u79fb\u91cf\uff0c\u901a\u8fc7\u504f\u79fb\u91cf\u4ece\u800c\u53ef\u4ee5\u5b9a\u5236UI\u52a8\u753b\u6548\u679c\u3002 \u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0c draggable \u4fee\u9970\u7b26\u53ea\u80fd\u76d1\u542c\u5782\u76f4\u65b9\u5411\u504f\u79fb\u6216\u6c34\u5e73\u65b9\u5411\u504f\u79fb\u3002","title":"1. Draggable\u80fd\u505a\u4ec0\u4e48"},{"location":"design/gesture/draggable/#2-draggable","text":"\u4f7f\u7528 draggable \u4fee\u9970\u7b26\u81f3\u5c11\u9700\u8981\u4f20\u5165\u4e24\u4e2a\u53c2\u6570 draggableState \u3001 orientation draggableState\uff1a\u901a\u8fc7 draggableState \u53ef\u4ee5\u83b7\u53d6\u5230\u62d6\u52a8\u624b\u52bf\u7684\u504f\u79fb\u91cf\uff0c\u5e76\u5141\u8bb8\u5f00\u53d1\u8005\u52a8\u6001\u63a7\u5236\u504f\u79fb\u91cf orientation\uff1a\u76d1\u542c\u7684\u62d6\u52a8\u624b\u52bf\u65b9\u5411\uff0c\u53ea\u80fd\u662f\u6c34\u5e73\u65b9\u5411(Orientation.Horizontal)\u6216\u5782\u76f4\u65b9\u5411(Orientation.Vertical) fun Modifier . draggable ( state : DraggableState , orientation : Orientation , enabled : Boolean = true , interactionSource : MutableInteractionSource? = null , startDragImmediately : Boolean = false , onDragStarted : suspend CoroutineScope .( startedPosition : Offset ) -> Unit = {}, onDragStopped : suspend CoroutineScope .( velocity : Float ) -> Unit = {}, reverseDirection : Boolean = false )","title":"2. Draggable\u53c2\u6570\u5217\u8868"},{"location":"design/gesture/draggable/#3-draggable","text":"\u5728\u672c\u8282\u4e2d\uff0c\u6211\u4eec\u5c06\u4f7f\u7528 Draggable \u4fee\u9970\u7b26\u5b8c\u6210\u4e00\u4e2a\u7b80\u5355\u7684\u6ed1\u5757\u62d6\u52a8\u52a8\u753b\u3002 \u9996\u5148\u6211\u4eec\u5b9a\u4e49\u4e86\u6ed1\u5757\u504f\u79fb\u91cf\u4ee5\u53ca\u6ed1\u5757\u7684\u8fb9\u957f\u3002 \u901a\u8fc7 rememberDraggableState \u65b9\u6cd5\u83b7\u53d6 DraggableState \u5b9e\u4f8b\uff0c\u901a\u8fc7\u56de\u8c03lambda\u76d1\u542c\u5f53\u524d\u7684\u504f\u79fb\u91cf\u5e76\u8fdb\u884c\u7d2f\u52a0\uff0c\u5e76\u4e14\u9650\u5236\u4e86\u6ed1\u5757\u7684\u504f\u79fb\u533a\u95f4\u3002 var offsetX by remember { mutableStateOf ( 0f ) } val boxSideLengthDp = 50. dp val boxSildeLengthPx = with ( LocalDensity . current ) { boxSideLengthDp . toPx () } val draggableState = rememberDraggableState { offsetX = ( offsetX + it ). coerceIn ( 0f , 3 * boxSildeLengthPx ) } \u63a5\u4e0b\u6765\u6211\u4eec\u5c06\u4e3a draggable \u4fee\u9970\u7b26\u63d0\u4f9b\u7ed9draggableState\u4e0eorientation\u4e86\u3002 \u6ce8\u610f\uff1a\u7531\u4e8eModifer\u94fe\u5f0f\u6267\u884c\uff0c\u6b64\u65f6offset\u5fc5\u9700\u5728draggable\u4e0ebackground\u524d\u9762\u3002 \u26a0\ufe0f\u9519\u8bef\u793a\u4f8b1(draggable\u5728offset\u524d\u9762) : \u7b2c\u4e8c\u6b21\u62d6\u52a8\u65f6UI\u63a7\u4ef6\u62d6\u52a8\u53ea\u80fd\u62d6\u52a8\u521d\u59cb\u4f4d\u7f6e\u624d\u751f\u6548\uff0c\u4e0d\u4f1a\u8ddf\u968fUI\u63a7\u4ef6\u800c\u79fb\u52a8\u76d1\u542c\uff0c\u539f\u56e0\u662f\u6bcf\u6b21\u62d6\u52a8\u65f6draggable\u90fd\u76d1\u542c\u7684\u90fd\u662f\u521d\u59cb\u4f4d\u7f6e\uff0c\u4e0d\u662f\u504f\u79fb\u540e\u4f4d\u7f6e\u3002 \u26a0\ufe0f\u9519\u8bef\u793a\u4f8b2(background\u5728offset\u524d\u9762) : UI\u63a7\u4ef6\u7ed8\u5236\u7684\u9ed1\u5757\u4e0d\u4f1a\u8ddf\u624b\uff0c\u539f\u56e0\u5728\u4e8e\u6bcf\u6b21\u7ed8\u5236\u65f6background\u90fd\u5728\u521d\u59cb\u4f4d\u7f6e\u7ed8\u5236\uff0c\u4e0d\u662f\u504f\u79fb\u540e\u4f4d\u7f6e\u3002 Box ( Modifier . width ( boxSideLengthDp * 4 ) . height ( boxSideLengthDp ) . background ( Color . LightGray ) ) { Box ( Modifier . size ( boxSideLengthDp ) . offset { IntOffset ( offsetX . roundToInt (), 0 ) } . draggable ( orientation = Orientation . Horizontal , state = draggableState ) . background ( Color . DarkGray ) ) } \u6548\u679c\u5c55\u793a","title":"3. Draggable\u4f7f\u7528\u793a\u4f8b"},{"location":"design/gesture/overview/","text":"","title":"\u6982\u8ff0"},{"location":"design/gesture/swipeable/","text":"1. Swipeable\u80fd\u505a\u4ec0\u4e48 \u4e0e draggable \u4fee\u9970\u7b26\u4e0d\u540c\u7684\u662f\uff0c swipeable \u4fee\u9970\u7b26\u5141\u8bb8\u5f00\u53d1\u8005\u901a\u8fc7\u951a\u70b9\u8bbe\u7f6e\u4ece\u800c\u5b9e\u73b0\u7ec4\u4ef6\u5448\u73b0\u5438\u9644\u6548\u679c\u7684\u52a8\u753b\uff0c\u5e38\u7528\u4e8e\u5f00\u5173\u7b49\u52a8\u753b\uff0c\u4e5f\u53ef\u7528\u4e8e\u4e0b\u62c9\u5237\u65b0\u7b49\u7279\u6b8a\u6548\u679c\u7684\u5b9e\u73b0\u3002 \u4f46\u662f\u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0c swipeable \u4fee\u9970\u7b26\u4e0d\u4f1a\u4e3a\u88ab\u4fee\u9970\u7684\u7ec4\u4ef6\u63d0\u4f9b\u4efb\u4f55\u9ed8\u8ba4\u52a8\u753b\uff0c\u53ea\u80fd\u4e3a\u7ec4\u4ef6\u63d0\u4f9b\u624b\u52bf\u504f\u79fb\u91cf\u7b49\u4fe1\u606f\u3002\u5f00\u53d1\u8005\u53ef\u6839\u636e\u81ea\u8eab\u9700\u6c42\u6839\u636e\u504f\u79fb\u91cf\u7ed3\u5408\u5176\u4ed6\u4fee\u9970\u7b26\u5b9a\u5236\u52a8\u753b\u5c55\u793a\u3002 2. Swipeable\u53c2\u6570\u5217\u8868 \u4f7f\u7528 swipeable \u4fee\u9970\u7b26\u81f3\u5c11\u9700\u8981\u4f20\u5165\u4e09\u4e2a\u53c2\u6570 swipeableState \u3001 anchors \u3001 orientation swipeableState\uff1a\u901a\u8fc7 swipeableState \u7684\u8bbe\u7f6e\u53ef\u4ee5\u83b7\u53d6\u5230\u5f53\u524d\u624b\u52bf\u7684\u504f\u79fb\u91cf\u4fe1\u606f anchors\uff1a\u951a\u70b9\uff0c\u53ef\u4ee5\u901a\u8fc7\u951a\u70b9\u8bbe\u7f6e\u5728\u4e0d\u540c\u72b6\u6001\u65f6\u6240\u5e94\u8be5\u5bf9\u5e94\u7684\u504f\u79fb\u91cf\u4fe1\u606f orientation\uff1a\u624b\u52bf\u65b9\u5411\uff0c\u88ab\u4fee\u9970\u7ec4\u4ef6\u7684\u624b\u52bf\u65b9\u5411\u53ea\u80fd\u662f\u6c34\u5e73\u6216\u5782\u76f4 thresholds (\u5e38\u7528\u975e\u5fc5\u9700)\uff1a\u5e38\u7528\u4f5c\u5b9a\u5236\u4e0d\u540c\u951a\u70b9\u95f4\u5438\u9644\u6548\u679c\u7684\u4e34\u754c\u9608\u503c\uff0c\u5e38\u7528\u6709 FixedThreshold(Dp) \u548c FractionalThreshold(Float) \u7b49 fun < T > Modifier . swipeable ( state : SwipeableState < T > , anchors : Map < Float , T > , orientation : Orientation , enabled : Boolean = true , reverseDirection : Boolean = false , interactionSource : MutableInteractionSource? = null , thresholds : ( from : T , to : T ) -> ThresholdConfig = { _ , _ -> FixedThreshold ( 56. dp ) }, resistance : ResistanceConfig? = resistanceConfig ( anchors . keys ), velocityThreshold : Dp = VelocityThreshold ) 3. Swipeable\u4f7f\u7528\u793a\u4f8b \u5728\u672c\u8282\u4e2d\uff0c\u6211\u4eec\u5c06\u4f7f\u7528 swipeable \u4fee\u9970\u7b26\u5b8c\u6210\u4e00\u4e2a\u7b80\u5355\u7684\u5f00\u5173\u52a8\u753b\u3002 \u9996\u5148\u6211\u4eec\u5b9a\u4e49\u4e86\u4e24\u4e2a\u679a\u4e3e\u9879\u7528\u4e8e\u63cf\u8ff0\u5f00\u5173\u7684\u72b6\u6001\uff0c\u5e76\u8bbe\u7f6e\u4e86\u5f00\u5173\u7684\u5c3a\u5bf8\u3002 \u6211\u4eec\u901a\u8fc7 rememberSwipeableState \u65b9\u6cd5\u83b7\u53d6 SwipeableState \u5b9e\u4f8b\uff0c\u5e76\u5c06\u521d\u59cb\u72b6\u6001\u8bbe\u7f6e\u4e3a Status.CLOSE\u3002 enum class Status { CLOSE , OPEN } var blockSize = 48. dp var blockSizePx = with ( LocalDensity . current ) { blockSize . toPx () } var swipeableState = rememberSwipeableState ( initialValue = Status . CLOSE ) \u5728\u6211\u4eec\u7684\u793a\u4f8b\u4e2d\u6bcf\u4e2a\u72b6\u6001\u90fd\u76f8\u5bf9\u5e94\u4e00\u4e2a\u951a\u70b9\uff0c\u63a5\u4e0b\u6765\u6211\u4eec\u9700\u8981\u58f0\u660e\u6bcf\u4e2a\u951a\u70b9\u6240\u5bf9\u5e94\u6570\u503c\uff0c\u951a\u70b9\u4ee5\u952e\u503c\u5bf9\u8fdb\u884c\u8868\u793a\u3002 \u4e8e\u6b64\u540c\u65f6\uff0cCompose \u4e5f\u5f97\u77e5\u4e86\u5f00\u53d1\u8005\u6240\u5e0c\u671b\u7684\u521d\u59cb\u72b6\u6001\u6570\u503c\u3002 var anchors = mapOf ( 0f to Status . CLOSE , blockSizePx to Status . OPEN ) \u6211\u4eec\u63a5\u4e0b\u6765\u8bf4\u660e\u951a\u70b9\u95f4\u5438\u9644\u52a8\u753b\u7684\u9608\u503c\u3002\u6211\u4eec\u5e0c\u671b\u4ece\u5173\u95ed\u72b6\u6001\u5230\u5f00\u542f\u72b6\u6001\uff0c\u6ed1\u5757\u4ec5\u9700\u79fb\u52a8\u8d85\u8fc7 30% \u5219\u4f1a\u81ea\u52a8\u5438\u9644\u5230\u5f00\u542f\u72b6\u6001\uff0c\u4ece\u5f00\u542f\u72b6\u6001\u5230\u5173\u95ed\u72b6\u6001\uff0c\u6ed1\u5757\u9700\u79fb\u52a8\u8d85\u8fc7 50% \u624d\u4f1a\u81ea\u52a8\u5438\u9644\u5230\u5173\u95ed\u72b6\u6001\u3002 Modifier . swipeable ( state = swipeableState , anchors = mapOf ( 0f to Status . CLOSE , blockSizePx to Status . OPEN ), thresholds = { from , to -> if ( from == Status . CLOSE ) { FractionalThreshold ( 0.3f ) } else { FractionalThreshold ( 0.5f ) } }, orientation = Orientation . Horizontal ) \u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u901a\u8fc7 SwipeableState \u83b7\u53d6\u5230\u504f\u79fb\u91cf\u4fe1\u606f\u4e86\uff0c\u6211\u4eec\u5e0c\u671b\u6ed1\u5757\u6839\u636e\u504f\u79fb\u91cf\u8fdb\u884c\u79fb\u52a8\uff0c\u5728\u6211\u4eec\u7684\u793a\u4f8b\u4e2d\u4f7f\u7528 offset \u63cf\u8ff0\u7b26\u5373\u8fbe\u6210\u9700\u6c42\u3002 @ExperimentalMaterialApi @Preview @Composable fun SwipeableDemo () { var blockSize = 48. dp var blockSizePx = with ( LocalDensity . current ) { blockSize . toPx () } var swipeableState = rememberSwipeableState ( initialValue = Status . CLOSE ) var anchors = mapOf ( 0f to Status . CLOSE , blockSizePx to Status . OPEN ) Box ( modifier = Modifier . size ( height = blockSize , width = blockSize * 2 ) . background ( Color . LightGray ) ) { Box ( modifier = Modifier . swipeable ( state = swipeableState , anchors = mapOf ( 0f to Status . CLOSE , blockSizePx to Status . OPEN ), thresholds = { from , to -> if ( from == Status . CLOSE ) { FractionalThreshold ( 0.3f ) } else { FractionalThreshold ( 0.5f ) } }, orientation = Orientation . Horizontal ) . offset { IntOffset ( swipeableState . offset . value . toInt (), 0 ) } . size ( blockSize ) . background ( Color . DarkGray ) ) } } \u6548\u679c\u5c55\u793a","title":"Swipeable\u6ed1\u52a8"},{"location":"design/gesture/swipeable/#1-swipeable","text":"\u4e0e draggable \u4fee\u9970\u7b26\u4e0d\u540c\u7684\u662f\uff0c swipeable \u4fee\u9970\u7b26\u5141\u8bb8\u5f00\u53d1\u8005\u901a\u8fc7\u951a\u70b9\u8bbe\u7f6e\u4ece\u800c\u5b9e\u73b0\u7ec4\u4ef6\u5448\u73b0\u5438\u9644\u6548\u679c\u7684\u52a8\u753b\uff0c\u5e38\u7528\u4e8e\u5f00\u5173\u7b49\u52a8\u753b\uff0c\u4e5f\u53ef\u7528\u4e8e\u4e0b\u62c9\u5237\u65b0\u7b49\u7279\u6b8a\u6548\u679c\u7684\u5b9e\u73b0\u3002 \u4f46\u662f\u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0c swipeable \u4fee\u9970\u7b26\u4e0d\u4f1a\u4e3a\u88ab\u4fee\u9970\u7684\u7ec4\u4ef6\u63d0\u4f9b\u4efb\u4f55\u9ed8\u8ba4\u52a8\u753b\uff0c\u53ea\u80fd\u4e3a\u7ec4\u4ef6\u63d0\u4f9b\u624b\u52bf\u504f\u79fb\u91cf\u7b49\u4fe1\u606f\u3002\u5f00\u53d1\u8005\u53ef\u6839\u636e\u81ea\u8eab\u9700\u6c42\u6839\u636e\u504f\u79fb\u91cf\u7ed3\u5408\u5176\u4ed6\u4fee\u9970\u7b26\u5b9a\u5236\u52a8\u753b\u5c55\u793a\u3002","title":"1. Swipeable\u80fd\u505a\u4ec0\u4e48"},{"location":"design/gesture/swipeable/#2-swipeable","text":"\u4f7f\u7528 swipeable \u4fee\u9970\u7b26\u81f3\u5c11\u9700\u8981\u4f20\u5165\u4e09\u4e2a\u53c2\u6570 swipeableState \u3001 anchors \u3001 orientation swipeableState\uff1a\u901a\u8fc7 swipeableState \u7684\u8bbe\u7f6e\u53ef\u4ee5\u83b7\u53d6\u5230\u5f53\u524d\u624b\u52bf\u7684\u504f\u79fb\u91cf\u4fe1\u606f anchors\uff1a\u951a\u70b9\uff0c\u53ef\u4ee5\u901a\u8fc7\u951a\u70b9\u8bbe\u7f6e\u5728\u4e0d\u540c\u72b6\u6001\u65f6\u6240\u5e94\u8be5\u5bf9\u5e94\u7684\u504f\u79fb\u91cf\u4fe1\u606f orientation\uff1a\u624b\u52bf\u65b9\u5411\uff0c\u88ab\u4fee\u9970\u7ec4\u4ef6\u7684\u624b\u52bf\u65b9\u5411\u53ea\u80fd\u662f\u6c34\u5e73\u6216\u5782\u76f4 thresholds (\u5e38\u7528\u975e\u5fc5\u9700)\uff1a\u5e38\u7528\u4f5c\u5b9a\u5236\u4e0d\u540c\u951a\u70b9\u95f4\u5438\u9644\u6548\u679c\u7684\u4e34\u754c\u9608\u503c\uff0c\u5e38\u7528\u6709 FixedThreshold(Dp) \u548c FractionalThreshold(Float) \u7b49 fun < T > Modifier . swipeable ( state : SwipeableState < T > , anchors : Map < Float , T > , orientation : Orientation , enabled : Boolean = true , reverseDirection : Boolean = false , interactionSource : MutableInteractionSource? = null , thresholds : ( from : T , to : T ) -> ThresholdConfig = { _ , _ -> FixedThreshold ( 56. dp ) }, resistance : ResistanceConfig? = resistanceConfig ( anchors . keys ), velocityThreshold : Dp = VelocityThreshold )","title":"2. Swipeable\u53c2\u6570\u5217\u8868"},{"location":"design/gesture/swipeable/#3-swipeable","text":"\u5728\u672c\u8282\u4e2d\uff0c\u6211\u4eec\u5c06\u4f7f\u7528 swipeable \u4fee\u9970\u7b26\u5b8c\u6210\u4e00\u4e2a\u7b80\u5355\u7684\u5f00\u5173\u52a8\u753b\u3002 \u9996\u5148\u6211\u4eec\u5b9a\u4e49\u4e86\u4e24\u4e2a\u679a\u4e3e\u9879\u7528\u4e8e\u63cf\u8ff0\u5f00\u5173\u7684\u72b6\u6001\uff0c\u5e76\u8bbe\u7f6e\u4e86\u5f00\u5173\u7684\u5c3a\u5bf8\u3002 \u6211\u4eec\u901a\u8fc7 rememberSwipeableState \u65b9\u6cd5\u83b7\u53d6 SwipeableState \u5b9e\u4f8b\uff0c\u5e76\u5c06\u521d\u59cb\u72b6\u6001\u8bbe\u7f6e\u4e3a Status.CLOSE\u3002 enum class Status { CLOSE , OPEN } var blockSize = 48. dp var blockSizePx = with ( LocalDensity . current ) { blockSize . toPx () } var swipeableState = rememberSwipeableState ( initialValue = Status . CLOSE ) \u5728\u6211\u4eec\u7684\u793a\u4f8b\u4e2d\u6bcf\u4e2a\u72b6\u6001\u90fd\u76f8\u5bf9\u5e94\u4e00\u4e2a\u951a\u70b9\uff0c\u63a5\u4e0b\u6765\u6211\u4eec\u9700\u8981\u58f0\u660e\u6bcf\u4e2a\u951a\u70b9\u6240\u5bf9\u5e94\u6570\u503c\uff0c\u951a\u70b9\u4ee5\u952e\u503c\u5bf9\u8fdb\u884c\u8868\u793a\u3002 \u4e8e\u6b64\u540c\u65f6\uff0cCompose \u4e5f\u5f97\u77e5\u4e86\u5f00\u53d1\u8005\u6240\u5e0c\u671b\u7684\u521d\u59cb\u72b6\u6001\u6570\u503c\u3002 var anchors = mapOf ( 0f to Status . CLOSE , blockSizePx to Status . OPEN ) \u6211\u4eec\u63a5\u4e0b\u6765\u8bf4\u660e\u951a\u70b9\u95f4\u5438\u9644\u52a8\u753b\u7684\u9608\u503c\u3002\u6211\u4eec\u5e0c\u671b\u4ece\u5173\u95ed\u72b6\u6001\u5230\u5f00\u542f\u72b6\u6001\uff0c\u6ed1\u5757\u4ec5\u9700\u79fb\u52a8\u8d85\u8fc7 30% \u5219\u4f1a\u81ea\u52a8\u5438\u9644\u5230\u5f00\u542f\u72b6\u6001\uff0c\u4ece\u5f00\u542f\u72b6\u6001\u5230\u5173\u95ed\u72b6\u6001\uff0c\u6ed1\u5757\u9700\u79fb\u52a8\u8d85\u8fc7 50% \u624d\u4f1a\u81ea\u52a8\u5438\u9644\u5230\u5173\u95ed\u72b6\u6001\u3002 Modifier . swipeable ( state = swipeableState , anchors = mapOf ( 0f to Status . CLOSE , blockSizePx to Status . OPEN ), thresholds = { from , to -> if ( from == Status . CLOSE ) { FractionalThreshold ( 0.3f ) } else { FractionalThreshold ( 0.5f ) } }, orientation = Orientation . Horizontal ) \u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u901a\u8fc7 SwipeableState \u83b7\u53d6\u5230\u504f\u79fb\u91cf\u4fe1\u606f\u4e86\uff0c\u6211\u4eec\u5e0c\u671b\u6ed1\u5757\u6839\u636e\u504f\u79fb\u91cf\u8fdb\u884c\u79fb\u52a8\uff0c\u5728\u6211\u4eec\u7684\u793a\u4f8b\u4e2d\u4f7f\u7528 offset \u63cf\u8ff0\u7b26\u5373\u8fbe\u6210\u9700\u6c42\u3002 @ExperimentalMaterialApi @Preview @Composable fun SwipeableDemo () { var blockSize = 48. dp var blockSizePx = with ( LocalDensity . current ) { blockSize . toPx () } var swipeableState = rememberSwipeableState ( initialValue = Status . CLOSE ) var anchors = mapOf ( 0f to Status . CLOSE , blockSizePx to Status . OPEN ) Box ( modifier = Modifier . size ( height = blockSize , width = blockSize * 2 ) . background ( Color . LightGray ) ) { Box ( modifier = Modifier . swipeable ( state = swipeableState , anchors = mapOf ( 0f to Status . CLOSE , blockSizePx to Status . OPEN ), thresholds = { from , to -> if ( from == Status . CLOSE ) { FractionalThreshold ( 0.3f ) } else { FractionalThreshold ( 0.5f ) } }, orientation = Orientation . Horizontal ) . offset { IntOffset ( swipeableState . offset . value . toInt (), 0 ) } . size ( blockSize ) . background ( Color . DarkGray ) ) } } \u6548\u679c\u5c55\u793a","title":"3. Swipeable\u4f7f\u7528\u793a\u4f8b"},{"location":"design/lists/overview/","text":"\u8bb8\u591a\u5e94\u7528\u7a0b\u5e8f\u9700\u8981\u663e\u793a\u9879\u76ee\u7684\u96c6\u5408\u3002\u672c\u6587\u89e3\u91ca\u4e86\u4f60\u5982\u4f55\u5728 Jetpack Compose \u4e2d\u6709\u6548\u5730\u505a\u5230\u8fd9\u4e00\u70b9\u3002 \u5982\u679c\u4f60\u77e5\u9053\u4f60\u7684\u7528\u4f8b\u4e0d\u9700\u8981\u4efb\u4f55\u6eda\u52a8\uff0c\u4f60\u53ef\u80fd\u5e0c\u671b\u4f7f\u7528\u4e00\u4e2a\u7b80\u5355\u7684 Column \u6216 Row \uff08\u53d6\u51b3\u4e8e\u65b9\u5411\uff09\uff0c\u5e76\u50cf\u8fd9\u6837\u901a\u8fc7\u8fed\u4ee3\u5217\u8868\u6765\u663e\u793a\u6bcf\u4e2a\u9879\u76ee\u7684\u5185\u5bb9\u3002 @Composable fun MessageList ( messages : List < Message > ) { Column { messages . forEach { message -> MessageRow ( message ) } } } \u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u4f7f\u7528 verticalScroll() \u8fd9\u4e2a modifier \u6765\u8ba9 Column \u53d8\u5f97\u53ef\u6eda\u52a8\u3002\u66f4\u591a\u4fe1\u606f\u89c1 \u624b\u52bf \u6587\u6863\u3002 1. Lazy composables \u5982\u679c\u4f60\u9700\u8981\u663e\u793a\u5927\u91cf\u7684\u9879\u76ee\uff08\u6216\u4e00\u4e2a\u672a\u77e5\u957f\u5ea6\u7684\u5217\u8868\uff09\uff0c\u4f7f\u7528\u50cf Column \u8fd9\u6837\u7684\u5e03\u5c40\u4f1a\u5bfc\u81f4\u6027\u80fd\u95ee\u9898\uff0c\u56e0\u4e3a\u6240\u6709\u7684\u9879\u76ee\u90fd\u4f1a\u88ab\u7ec4\u5408\u548c\u5e03\u5c40\uff0c\u65e0\u8bba\u5b83\u4eec\u662f\u5426\u53ef\u89c1\u3002 Compose \u63d0\u4f9b\u4e86\u4e00\u7ec4\u7ec4\u4ef6\uff0c\u5b83\u4eec\u53ea\u5bf9\u7ec4\u4ef6\u89c6\u53e3\u4e2d\u53ef\u89c1\u7684\u9879\u76ee\u8fdb\u884c\u7ec4\u5408\u548c\u5e03\u5c40\u3002\u8fd9\u4e9b\u7ec4\u4ef6\u5305\u62ec LazyColumn \u548c LazyRow \u3002 Info \u5982\u679c\u4f60\u4f7f\u7528\u8fc7 RecyclerView \u7ec4\u4ef6\uff0c\u8fd9\u4e9b\u7ec4\u4ef6\u9075\u5faa\u76f8\u540c\u7684\u539f\u5219 \u987e\u540d\u601d\u4e49\uff0c LazyColumn \u548c LazyRow \u7684\u533a\u522b\u5728\u4e8e\u5b83\u4eec\u7684\u9879\u76ee\u5e03\u5c40\u548c\u6eda\u52a8\u65b9\u5411\u3002 LazyColumn \u4ea7\u751f\u4e00\u4e2a\u5782\u76f4\u6eda\u52a8\u7684\u5217\u8868\uff0c\u800c LazyRow \u4ea7\u751f\u4e00\u4e2a\u6c34\u5e73\u6eda\u52a8\u7684\u5217\u8868\u3002 Lazy \u7ec4\u4ef6\u4e0e Compose \u4e2d\u7684\u5927\u591a\u6570\u5e03\u5c40\u4e0d\u540c\u3002 Lazy \u7ec4\u4ef6\u4e0d\u63a5\u53d7 @Composable \u5185\u5bb9\u5757\u53c2\u6570\uff0c\u5141\u8bb8\u5e94\u7528\u7a0b\u5e8f\u76f4\u63a5\u64b0\u5199 Composable \uff0c\u800c\u662f\u63d0\u4f9b\u4e00\u4e2a LazyListScope.() \u5757\u3002\u8fd9\u4e2a LazyListScope \u5757\u63d0\u4f9b\u4e86\u4e00\u4e2a DS L\uff0c\u5141\u8bb8\u5e94\u7528\u7a0b\u5e8f\u63cf\u8ff0\u9879\u76ee\u5185\u5bb9\u3002\u7136\u540e\uff0c Lazy \u7ec4\u4ef6\u8d1f\u8d23\u6839\u636e\u5e03\u5c40\u548c\u6eda\u52a8\u4f4d\u7f6e\u7684\u8981\u6c42\uff0c\u6dfb\u52a0\u6bcf\u4e2a\u9879\u76ee\u7684\u5185\u5bb9\u3002 \u5173\u952e\u672f\u8bed DSL \u662f\u6307\u7279\u5b9a\u9886\u57df\u7684\u8bed\u8a00\u3002\u6709\u5173 Compose \u5982\u4f55\u4e3a\u67d0\u4e9b API \u5b9a\u4e49 DSL \u7684\u66f4\u591a\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605 Kotlin for Compose \u6587\u6863\u3002 2. LazyListScope DSL LazyListScope \u7684 DSL \u63d0\u4f9b\u4e86\u8bb8\u591a\u51fd\u6570\u6765\u63cf\u8ff0\u5e03\u5c40\u4e2d\u7684\u9879\u76ee\u3002\u6700\u57fa\u672c\u7684 item() \u53ef\u4ee5\u6dfb\u52a0\u4e00\u4e2a\u5355\u9879\uff0c\u800c item(Int) \u6dfb\u52a0\u4e86\u591a\u4e2a\u9879\u76ee\u3002 LazyColumn { // \u6dfb\u52a0\u5355\u4e2a\u9879\u76ee item { Text ( text = \"First item\" ) } // \u6dfb\u52a0\u4e94\u4e2a\u9879\u76ee items ( 5 ) { index -> Text ( text = \"Item: $ index \" ) } // \u6dfb\u52a0\u5176\u4ed6\u5355\u4e2a\u9879\u76ee item { Text ( text = \"Last item\" ) } } \u8fd8\u6709\u4e00\u4e9b\u6269\u5c55\u529f\u80fd\uff0c\u5141\u8bb8\u4f60\u6dfb\u52a0\u9879\u76ee\u7684\u96c6\u5408\uff0c\u5982 List \u3002\u8fd9\u4e9b\u6269\u5c55\u51fd\u6570\u4f7f\u6211\u4eec\u80fd\u591f\u8f7b\u677e\u5730\u79fb\u690d\u4e0a\u9762 Column \u7684\u4f8b\u5b50\u3002 import androidx.compose.foundation.lazy.items @Composable fun MessageList ( messages : List < Message > ) { LazyColumn { items ( messages ) { message -> MessageRow ( message ) } } } items() \u7684\u6269\u5c55\u51fd\u6570\u8fd8\u6709\u4e00\u4e2a\u53d8\u4f53\uff0c\u53eb\u505a itemsIndexed() \uff0c\u5b83\u63d0\u4f9b\u4e86\u7d22\u5f15\u3002\u66f4\u591a\u7ec6\u8282\u8bf7\u53c2\u89c1 LazyListScope \u53c2\u8003\u3002 3. \u5185\u5bb9\u586b\u5145 \u5728 Lazy \u7ec4\u4ef6\u4e2d\uff0c\u6211\u4eec\u5982\u679c\u8981\u8bbe\u7f6e Lazy \u7ec4\u4ef6\u91cc\u9762\u5185\u5bb9\u7684\u5185\u8fb9\u8ddd\u65f6\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 contentPadding \u53c2\u6570\u6765\u8fdb\u884c\u586b\u5145 @Composable fun MessageList () { Box ( Modifier . background ( Color . Gray )){ LazyColumn ( modifier = Modifier . border ( 5. dp , color = Color . Blue ), contentPadding = PaddingValues ( horizontal = 16. dp , vertical = 8. dp ) ) { items ( 20 ){ Text ( \"LazyColumn\" ) } } } } \u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u6211\u4eec\u5728\u6c34\u5e73\u8fb9\u7f18\uff08\u5de6\u548c\u53f3\uff09\u6dfb\u52a0 16.dp \u7684 padding \uff0c\u7136\u540e\u5728\u5185\u5bb9\u7684\u9876\u90e8\u548c\u5e95\u90e8\u6dfb\u52a0 8.dp \u3002 \u8bf7\u6ce8\u610f\uff0c\u8fd9\u4e2a padding \u662f\u5e94\u7528\u5728 LazyColumn \u91cc\u9762\u7684\u5185\u5bb9\u4e0a\u7684\uff0c\u800c\u4e0d\u662f\u5e94\u7528\u5728 LazyColumn \u672c\u8eab\u3002\u5728\u4e0a\u9762\u7684\u4f8b\u5b50\u4e2d\uff0c\u7b2c\u4e00\u4e2a\u9879\u76ee\u5c06\u5728\u5b83\u7684\u9876\u90e8\u6dfb\u52a0 8.dp \u7684 padding \uff0c\u6700\u540e\u4e00\u4e2a\u9879\u76ee\u5c06\u5728\u5b83\u7684\u5e95\u90e8\u6dfb\u52a0 8.dp \uff0c\u6240\u6709\u9879\u76ee\u5c06\u5728\u5de6\u8fb9\u548c\u53f3\u8fb9\u6709 16.dp \u7684 padding \u3002 4. \u5185\u5bb9\u95f4\u8ddd \u8981\u5728\u9879\u76ee\u4e4b\u95f4\u6dfb\u52a0\u95f4\u8ddd\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528 Arrangement.spacedBy() \u3002\u4e0b\u9762\u7684\u4f8b\u5b50\u5728\u6bcf\u4e2a\u9879\u76ee\u4e4b\u95f4\u589e\u52a0\u4e86 4.dp \u7684\u7a7a\u95f4\u3002 @Composable fun MessageList () { Box ( Modifier . background ( Color . Gray )){ LazyColumn ( modifier = Modifier . border ( 5. dp , color = Color . Blue ), contentPadding = PaddingValues ( horizontal = 16. dp , vertical = 8. dp ), verticalArrangement = Arrangement . spacedBy ( 10. dp ) ) { items ( 20 ){ Text ( \"LazyColumn\" ) } } } } \u540c\u6837\u5730\uff0c\u5bf9\u4e8e LazyRow \u4e5f\u662f\u5982\u6b64\u3002 5. Item \u52a8\u753b \u5982\u679c\u4f60\u4f7f\u7528\u8fc7 RecyclerView \u7ec4\u4ef6\uff0c\u4f60\u4f1a\u77e5\u9053\u5b83\u80fd\u81ea\u52a8\u5bf9 item \u53d8\u5316\u8fdb\u884c\u52a8\u753b\u5904\u7406\u3002 Lazy \u5e03\u5c40\u8fd8\u6ca1\u6709\u63d0\u4f9b\u8fd9\u4e2a\u529f\u80fd\uff0c\u8fd9\u610f\u5473\u7740 item \u7684\u53d8\u5316\u4f1a\u5bfc\u81f4\u4e00\u4e2a\u5373\u65f6\u7684 snap \u3002\u4f60\u53ef\u4ee5\u5173\u6ce8\u8fd9\u4e2a bug \u6765\u8ddf\u8e2a\u8fd9\u4e2a\u529f\u80fd\u7684\u4efb\u4f55\u53d8\u5316\u3002 6. Sticky headers (\u5b9e\u9a8c\u6027) \u8bf7\u6ce8\u610f \u5b9e\u9a8c\u6027 API \u5728\u672a\u6765\u53ef\u80fd\u4f1a\u53d1\u751f\u53d8\u5316\uff0c\u4e5f\u53ef\u80fd\u88ab\u5b8c\u5168\u5220\u9664\u3002 \u5f53\u663e\u793a\u5206\u7ec4\u6570\u636e\u7684\u5217\u8868\u65f6\uff0c sticky header \u6a21\u5f0f\u5f88\u6709\u5e2e\u52a9\u3002\u4e0b\u9762\u4f60\u53ef\u4ee5\u770b\u5230\u4e00\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\uff0c\u6309\u6307\u5b9a\u7684\u6807\u9898\u5206\u7ec4\u3002 \u4e3a\u4e86\u7528 LazyColumn \u5b9e\u73b0 Sticky header \uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528\u5b9e\u9a8c\u6027\u7684 stickyHeader() \u51fd\u6570\uff0c\u63d0\u4f9b\u6807\u9898\u5185\u5bb9\u3002 @ExperimentalFoundationApi @Composable fun ListWithHeader () { val sections = listOf ( \"\u8d21\u732e\u8005\" , \"\u7720\u7720\u7684\u7c89\u4e1d\" ) LazyColumn { sections . forEachIndexed { index , section -> stickyHeader { Text ( text = section , modifier = Modifier . fillMaxWidth () . background ( Color ( 0 xFFF2F4FB )) . padding ( horizontal = 10. dp , vertical = 5. dp ), fontWeight = FontWeight . W700 , color = Color ( 0 xFF0079D3 ) ) } when ( index ){ 0 -> item { Contributors ()} 1 -> item { TouchFish ()} } } } } \u4e3a\u4e86\u8282\u7701\u7bc7\u5e45\uff0c\u5b8c\u6574\u5b9e\u73b0\u4ee3\u7801\u53ef\u4ee5\u4ee5\u4e0b\u65b9\u5f0f\u67e5\u9605 Mkdocs github 7. Grids (\u5b9e\u9a8c\u6027\uff09 \u8bf7\u6ce8\u610f \u5b9e\u9a8c\u6027 API \u5728\u672a\u6765\u53ef\u80fd\u4f1a\u53d1\u751f\u53d8\u5316\uff0c\u4e5f\u53ef\u80fd\u88ab\u5b8c\u5168\u5220\u9664\u3002 LazyVerticalGrid \u53ef\u4ee5\u5b9e\u73b0\u7c7b\u4f3c\u4e8e\u7f51\u683c\u7684\u6548\u679c cells \u53c2\u6570\u8d1f\u8d23\u63a7\u5236\u5355\u5143\u683c\u5982\u4f55\u5f62\u6210\u5217\u3002\u4e0b\u9762\u7684\u4f8b\u5b50\u663e\u793a\u4e86\u7f51\u683c\u4e2d\u7684\u9879\u76ee\uff0c\u4f7f\u7528 GridCells.Adaptive \u5c06\u6bcf\u4e00\u5217\u8bbe\u7f6e\u4e3a\u81f3\u5c11 128.dp \u5bbd\u3002 @ExperimentalFoundationApi @Composable fun PhotoGrid ( photos : List < Photo > ) { LazyVerticalGrid ( cells = GridCells . Adaptive ( minSize = 128. dp ) ) { items ( photos ) { photo -> PhotoItem ( photo ) } } } \u5982\u679c\u4f60\u77e5\u9053\u8981\u4f7f\u7528\u7684\u5217\u7684\u786e\u5207\u6570\u91cf\uff0c\u4f60\u53ef\u4ee5\u8f6c\u800c\u63d0\u4f9b\u4e00\u4e2a\u5305\u542b\u6240\u9700\u5217\u6570\u91cf\u7684 GridCells.Fixed \u5b9e\u4f8b\u3002 8. \u5bf9\u6eda\u52a8\u4f4d\u7f6e\u505a\u51fa\u53cd\u5e94 \u8bb8\u591a\u5e94\u7528\u7a0b\u5e8f\u9700\u8981\u5bf9\u6eda\u52a8\u4f4d\u7f6e\u548c item \u5e03\u5c40\u7684\u53d8\u5316\u505a\u51fa\u53cd\u5e94\u548c\u76d1\u542c\uff0c Lazy \u7ec4\u4ef6\u53ef\u4ee5\u4f7f\u7528 LazyListState \u6765\u652f\u6301\u8fd9\u79cd\u4f7f\u7528\u60c5\u51b5\u3002 @Composable fun MessageList ( messages : List < Message > ) { // \u8bb0\u4f4f\u6211\u4eec\u81ea\u5df1\u7684 LazyListState val listState = rememberLazyListState () // \u628a\u5b83\u63d0\u4f9b\u7ed9 LazyColumn LazyColumn ( state = listState ) { // ... } } \u5bf9\u4e8e\u7b80\u5355\u7684\u4f7f\u7528\u60c5\u51b5\uff0c\u5e94\u7528\u7a0b\u5e8f\u901a\u5e38\u53ea\u9700\u8981\u77e5\u9053\u7b2c\u4e00\u4e2a\u53ef\u89c1\u7684 item \u7684\u4fe1\u606f\u3002\u4e3a\u6b64\uff0c LazyListState \u63d0\u4f9b\u4e86 firstVisibleItemIndex \u548c firstVisibleItemScrollOffset \u5c5e\u6027\u3002 \u6211\u4eec\u4f7f\u7528\u4e00\u4e2a\u4f8b\u5b50\uff0c\u5373\u6839\u636e\u7528\u6237\u662f\u5426\u6eda\u52a8\u8fc7\u7b2c\u4e00\u4e2a\u9879\u76ee\u6765\u663e\u793a\u548c\u9690\u85cf\u4e00\u4e2a\u6309\u94ae\u3002 @OptIn ( ExperimentalAnimationApi :: class ) // AnimatedVisibility @Composable fun MessageList ( messages : List < Message > ) { Box { val listState = rememberLazyListState () val scope = rememberCoroutineScope () LazyColumn ( state = listState ) { // ... } // \u6dfb\u52a0\u4e00\u4e2a\u7528\u4e8e\u662f\u5426\u663e\u793a\u6309\u94ae\u7684\u4ee3\u7801 // \u5982\u679c\u7b2c\u4e00\u4e2a\u53ef\u89c1\u7684\u9879\u76ee\u5df2\u7ecf\u88ab\u79fb\u52a8\u8fc7\u53bb\uff0c\u5c31\u663e\u793a\u8fd9\u4e2a\u6309\u94ae\u3002 val showButton by remember { derivedStateOf { // \u5c3d\u91cf\u51cf\u5c11\u4e0d\u5fc5\u8981\u7684\u5408\u6210 listState . firstVisibleItemIndex > 0 } } AnimatedVisibility ( visible = showButton ) { ScrollToTopButton () } // \u4f2a\u4ee3\u7801\uff0c\u53ef\u7528 FAB \u6765\u5b9e\u73b0 ScrollToTopButton ( onClick = { scope . launch { listState . animateScrollToItem ( 0 ) // \u70b9\u51fb\u8fd4\u56de\u7b2c\u4e00\u9879 } } ) } }","title":"\u6982\u8ff0"},{"location":"design/lists/overview/#1-lazy-composables","text":"\u5982\u679c\u4f60\u9700\u8981\u663e\u793a\u5927\u91cf\u7684\u9879\u76ee\uff08\u6216\u4e00\u4e2a\u672a\u77e5\u957f\u5ea6\u7684\u5217\u8868\uff09\uff0c\u4f7f\u7528\u50cf Column \u8fd9\u6837\u7684\u5e03\u5c40\u4f1a\u5bfc\u81f4\u6027\u80fd\u95ee\u9898\uff0c\u56e0\u4e3a\u6240\u6709\u7684\u9879\u76ee\u90fd\u4f1a\u88ab\u7ec4\u5408\u548c\u5e03\u5c40\uff0c\u65e0\u8bba\u5b83\u4eec\u662f\u5426\u53ef\u89c1\u3002 Compose \u63d0\u4f9b\u4e86\u4e00\u7ec4\u7ec4\u4ef6\uff0c\u5b83\u4eec\u53ea\u5bf9\u7ec4\u4ef6\u89c6\u53e3\u4e2d\u53ef\u89c1\u7684\u9879\u76ee\u8fdb\u884c\u7ec4\u5408\u548c\u5e03\u5c40\u3002\u8fd9\u4e9b\u7ec4\u4ef6\u5305\u62ec LazyColumn \u548c LazyRow \u3002 Info \u5982\u679c\u4f60\u4f7f\u7528\u8fc7 RecyclerView \u7ec4\u4ef6\uff0c\u8fd9\u4e9b\u7ec4\u4ef6\u9075\u5faa\u76f8\u540c\u7684\u539f\u5219 \u987e\u540d\u601d\u4e49\uff0c LazyColumn \u548c LazyRow \u7684\u533a\u522b\u5728\u4e8e\u5b83\u4eec\u7684\u9879\u76ee\u5e03\u5c40\u548c\u6eda\u52a8\u65b9\u5411\u3002 LazyColumn \u4ea7\u751f\u4e00\u4e2a\u5782\u76f4\u6eda\u52a8\u7684\u5217\u8868\uff0c\u800c LazyRow \u4ea7\u751f\u4e00\u4e2a\u6c34\u5e73\u6eda\u52a8\u7684\u5217\u8868\u3002 Lazy \u7ec4\u4ef6\u4e0e Compose \u4e2d\u7684\u5927\u591a\u6570\u5e03\u5c40\u4e0d\u540c\u3002 Lazy \u7ec4\u4ef6\u4e0d\u63a5\u53d7 @Composable \u5185\u5bb9\u5757\u53c2\u6570\uff0c\u5141\u8bb8\u5e94\u7528\u7a0b\u5e8f\u76f4\u63a5\u64b0\u5199 Composable \uff0c\u800c\u662f\u63d0\u4f9b\u4e00\u4e2a LazyListScope.() \u5757\u3002\u8fd9\u4e2a LazyListScope \u5757\u63d0\u4f9b\u4e86\u4e00\u4e2a DS L\uff0c\u5141\u8bb8\u5e94\u7528\u7a0b\u5e8f\u63cf\u8ff0\u9879\u76ee\u5185\u5bb9\u3002\u7136\u540e\uff0c Lazy \u7ec4\u4ef6\u8d1f\u8d23\u6839\u636e\u5e03\u5c40\u548c\u6eda\u52a8\u4f4d\u7f6e\u7684\u8981\u6c42\uff0c\u6dfb\u52a0\u6bcf\u4e2a\u9879\u76ee\u7684\u5185\u5bb9\u3002 \u5173\u952e\u672f\u8bed DSL \u662f\u6307\u7279\u5b9a\u9886\u57df\u7684\u8bed\u8a00\u3002\u6709\u5173 Compose \u5982\u4f55\u4e3a\u67d0\u4e9b API \u5b9a\u4e49 DSL \u7684\u66f4\u591a\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605 Kotlin for Compose \u6587\u6863\u3002","title":"1. Lazy composables"},{"location":"design/lists/overview/#2-lazylistscope-dsl","text":"LazyListScope \u7684 DSL \u63d0\u4f9b\u4e86\u8bb8\u591a\u51fd\u6570\u6765\u63cf\u8ff0\u5e03\u5c40\u4e2d\u7684\u9879\u76ee\u3002\u6700\u57fa\u672c\u7684 item() \u53ef\u4ee5\u6dfb\u52a0\u4e00\u4e2a\u5355\u9879\uff0c\u800c item(Int) \u6dfb\u52a0\u4e86\u591a\u4e2a\u9879\u76ee\u3002 LazyColumn { // \u6dfb\u52a0\u5355\u4e2a\u9879\u76ee item { Text ( text = \"First item\" ) } // \u6dfb\u52a0\u4e94\u4e2a\u9879\u76ee items ( 5 ) { index -> Text ( text = \"Item: $ index \" ) } // \u6dfb\u52a0\u5176\u4ed6\u5355\u4e2a\u9879\u76ee item { Text ( text = \"Last item\" ) } } \u8fd8\u6709\u4e00\u4e9b\u6269\u5c55\u529f\u80fd\uff0c\u5141\u8bb8\u4f60\u6dfb\u52a0\u9879\u76ee\u7684\u96c6\u5408\uff0c\u5982 List \u3002\u8fd9\u4e9b\u6269\u5c55\u51fd\u6570\u4f7f\u6211\u4eec\u80fd\u591f\u8f7b\u677e\u5730\u79fb\u690d\u4e0a\u9762 Column \u7684\u4f8b\u5b50\u3002 import androidx.compose.foundation.lazy.items @Composable fun MessageList ( messages : List < Message > ) { LazyColumn { items ( messages ) { message -> MessageRow ( message ) } } } items() \u7684\u6269\u5c55\u51fd\u6570\u8fd8\u6709\u4e00\u4e2a\u53d8\u4f53\uff0c\u53eb\u505a itemsIndexed() \uff0c\u5b83\u63d0\u4f9b\u4e86\u7d22\u5f15\u3002\u66f4\u591a\u7ec6\u8282\u8bf7\u53c2\u89c1 LazyListScope \u53c2\u8003\u3002","title":"2. LazyListScope DSL"},{"location":"design/lists/overview/#3","text":"\u5728 Lazy \u7ec4\u4ef6\u4e2d\uff0c\u6211\u4eec\u5982\u679c\u8981\u8bbe\u7f6e Lazy \u7ec4\u4ef6\u91cc\u9762\u5185\u5bb9\u7684\u5185\u8fb9\u8ddd\u65f6\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 contentPadding \u53c2\u6570\u6765\u8fdb\u884c\u586b\u5145 @Composable fun MessageList () { Box ( Modifier . background ( Color . Gray )){ LazyColumn ( modifier = Modifier . border ( 5. dp , color = Color . Blue ), contentPadding = PaddingValues ( horizontal = 16. dp , vertical = 8. dp ) ) { items ( 20 ){ Text ( \"LazyColumn\" ) } } } } \u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u6211\u4eec\u5728\u6c34\u5e73\u8fb9\u7f18\uff08\u5de6\u548c\u53f3\uff09\u6dfb\u52a0 16.dp \u7684 padding \uff0c\u7136\u540e\u5728\u5185\u5bb9\u7684\u9876\u90e8\u548c\u5e95\u90e8\u6dfb\u52a0 8.dp \u3002 \u8bf7\u6ce8\u610f\uff0c\u8fd9\u4e2a padding \u662f\u5e94\u7528\u5728 LazyColumn \u91cc\u9762\u7684\u5185\u5bb9\u4e0a\u7684\uff0c\u800c\u4e0d\u662f\u5e94\u7528\u5728 LazyColumn \u672c\u8eab\u3002\u5728\u4e0a\u9762\u7684\u4f8b\u5b50\u4e2d\uff0c\u7b2c\u4e00\u4e2a\u9879\u76ee\u5c06\u5728\u5b83\u7684\u9876\u90e8\u6dfb\u52a0 8.dp \u7684 padding \uff0c\u6700\u540e\u4e00\u4e2a\u9879\u76ee\u5c06\u5728\u5b83\u7684\u5e95\u90e8\u6dfb\u52a0 8.dp \uff0c\u6240\u6709\u9879\u76ee\u5c06\u5728\u5de6\u8fb9\u548c\u53f3\u8fb9\u6709 16.dp \u7684 padding \u3002","title":"3. \u5185\u5bb9\u586b\u5145"},{"location":"design/lists/overview/#4","text":"\u8981\u5728\u9879\u76ee\u4e4b\u95f4\u6dfb\u52a0\u95f4\u8ddd\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528 Arrangement.spacedBy() \u3002\u4e0b\u9762\u7684\u4f8b\u5b50\u5728\u6bcf\u4e2a\u9879\u76ee\u4e4b\u95f4\u589e\u52a0\u4e86 4.dp \u7684\u7a7a\u95f4\u3002 @Composable fun MessageList () { Box ( Modifier . background ( Color . Gray )){ LazyColumn ( modifier = Modifier . border ( 5. dp , color = Color . Blue ), contentPadding = PaddingValues ( horizontal = 16. dp , vertical = 8. dp ), verticalArrangement = Arrangement . spacedBy ( 10. dp ) ) { items ( 20 ){ Text ( \"LazyColumn\" ) } } } } \u540c\u6837\u5730\uff0c\u5bf9\u4e8e LazyRow \u4e5f\u662f\u5982\u6b64\u3002","title":"4. \u5185\u5bb9\u95f4\u8ddd"},{"location":"design/lists/overview/#5-item","text":"\u5982\u679c\u4f60\u4f7f\u7528\u8fc7 RecyclerView \u7ec4\u4ef6\uff0c\u4f60\u4f1a\u77e5\u9053\u5b83\u80fd\u81ea\u52a8\u5bf9 item \u53d8\u5316\u8fdb\u884c\u52a8\u753b\u5904\u7406\u3002 Lazy \u5e03\u5c40\u8fd8\u6ca1\u6709\u63d0\u4f9b\u8fd9\u4e2a\u529f\u80fd\uff0c\u8fd9\u610f\u5473\u7740 item \u7684\u53d8\u5316\u4f1a\u5bfc\u81f4\u4e00\u4e2a\u5373\u65f6\u7684 snap \u3002\u4f60\u53ef\u4ee5\u5173\u6ce8\u8fd9\u4e2a bug \u6765\u8ddf\u8e2a\u8fd9\u4e2a\u529f\u80fd\u7684\u4efb\u4f55\u53d8\u5316\u3002","title":"5. Item \u52a8\u753b"},{"location":"design/lists/overview/#6-sticky-headers","text":"\u8bf7\u6ce8\u610f \u5b9e\u9a8c\u6027 API \u5728\u672a\u6765\u53ef\u80fd\u4f1a\u53d1\u751f\u53d8\u5316\uff0c\u4e5f\u53ef\u80fd\u88ab\u5b8c\u5168\u5220\u9664\u3002 \u5f53\u663e\u793a\u5206\u7ec4\u6570\u636e\u7684\u5217\u8868\u65f6\uff0c sticky header \u6a21\u5f0f\u5f88\u6709\u5e2e\u52a9\u3002\u4e0b\u9762\u4f60\u53ef\u4ee5\u770b\u5230\u4e00\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\uff0c\u6309\u6307\u5b9a\u7684\u6807\u9898\u5206\u7ec4\u3002 \u4e3a\u4e86\u7528 LazyColumn \u5b9e\u73b0 Sticky header \uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528\u5b9e\u9a8c\u6027\u7684 stickyHeader() \u51fd\u6570\uff0c\u63d0\u4f9b\u6807\u9898\u5185\u5bb9\u3002 @ExperimentalFoundationApi @Composable fun ListWithHeader () { val sections = listOf ( \"\u8d21\u732e\u8005\" , \"\u7720\u7720\u7684\u7c89\u4e1d\" ) LazyColumn { sections . forEachIndexed { index , section -> stickyHeader { Text ( text = section , modifier = Modifier . fillMaxWidth () . background ( Color ( 0 xFFF2F4FB )) . padding ( horizontal = 10. dp , vertical = 5. dp ), fontWeight = FontWeight . W700 , color = Color ( 0 xFF0079D3 ) ) } when ( index ){ 0 -> item { Contributors ()} 1 -> item { TouchFish ()} } } } } \u4e3a\u4e86\u8282\u7701\u7bc7\u5e45\uff0c\u5b8c\u6574\u5b9e\u73b0\u4ee3\u7801\u53ef\u4ee5\u4ee5\u4e0b\u65b9\u5f0f\u67e5\u9605 Mkdocs github","title":"6. Sticky headers (\u5b9e\u9a8c\u6027)"},{"location":"design/lists/overview/#7-grids","text":"\u8bf7\u6ce8\u610f \u5b9e\u9a8c\u6027 API \u5728\u672a\u6765\u53ef\u80fd\u4f1a\u53d1\u751f\u53d8\u5316\uff0c\u4e5f\u53ef\u80fd\u88ab\u5b8c\u5168\u5220\u9664\u3002 LazyVerticalGrid \u53ef\u4ee5\u5b9e\u73b0\u7c7b\u4f3c\u4e8e\u7f51\u683c\u7684\u6548\u679c cells \u53c2\u6570\u8d1f\u8d23\u63a7\u5236\u5355\u5143\u683c\u5982\u4f55\u5f62\u6210\u5217\u3002\u4e0b\u9762\u7684\u4f8b\u5b50\u663e\u793a\u4e86\u7f51\u683c\u4e2d\u7684\u9879\u76ee\uff0c\u4f7f\u7528 GridCells.Adaptive \u5c06\u6bcf\u4e00\u5217\u8bbe\u7f6e\u4e3a\u81f3\u5c11 128.dp \u5bbd\u3002 @ExperimentalFoundationApi @Composable fun PhotoGrid ( photos : List < Photo > ) { LazyVerticalGrid ( cells = GridCells . Adaptive ( minSize = 128. dp ) ) { items ( photos ) { photo -> PhotoItem ( photo ) } } } \u5982\u679c\u4f60\u77e5\u9053\u8981\u4f7f\u7528\u7684\u5217\u7684\u786e\u5207\u6570\u91cf\uff0c\u4f60\u53ef\u4ee5\u8f6c\u800c\u63d0\u4f9b\u4e00\u4e2a\u5305\u542b\u6240\u9700\u5217\u6570\u91cf\u7684 GridCells.Fixed \u5b9e\u4f8b\u3002","title":"7. Grids (\u5b9e\u9a8c\u6027\uff09"},{"location":"design/lists/overview/#8","text":"\u8bb8\u591a\u5e94\u7528\u7a0b\u5e8f\u9700\u8981\u5bf9\u6eda\u52a8\u4f4d\u7f6e\u548c item \u5e03\u5c40\u7684\u53d8\u5316\u505a\u51fa\u53cd\u5e94\u548c\u76d1\u542c\uff0c Lazy \u7ec4\u4ef6\u53ef\u4ee5\u4f7f\u7528 LazyListState \u6765\u652f\u6301\u8fd9\u79cd\u4f7f\u7528\u60c5\u51b5\u3002 @Composable fun MessageList ( messages : List < Message > ) { // \u8bb0\u4f4f\u6211\u4eec\u81ea\u5df1\u7684 LazyListState val listState = rememberLazyListState () // \u628a\u5b83\u63d0\u4f9b\u7ed9 LazyColumn LazyColumn ( state = listState ) { // ... } } \u5bf9\u4e8e\u7b80\u5355\u7684\u4f7f\u7528\u60c5\u51b5\uff0c\u5e94\u7528\u7a0b\u5e8f\u901a\u5e38\u53ea\u9700\u8981\u77e5\u9053\u7b2c\u4e00\u4e2a\u53ef\u89c1\u7684 item \u7684\u4fe1\u606f\u3002\u4e3a\u6b64\uff0c LazyListState \u63d0\u4f9b\u4e86 firstVisibleItemIndex \u548c firstVisibleItemScrollOffset \u5c5e\u6027\u3002 \u6211\u4eec\u4f7f\u7528\u4e00\u4e2a\u4f8b\u5b50\uff0c\u5373\u6839\u636e\u7528\u6237\u662f\u5426\u6eda\u52a8\u8fc7\u7b2c\u4e00\u4e2a\u9879\u76ee\u6765\u663e\u793a\u548c\u9690\u85cf\u4e00\u4e2a\u6309\u94ae\u3002 @OptIn ( ExperimentalAnimationApi :: class ) // AnimatedVisibility @Composable fun MessageList ( messages : List < Message > ) { Box { val listState = rememberLazyListState () val scope = rememberCoroutineScope () LazyColumn ( state = listState ) { // ... } // \u6dfb\u52a0\u4e00\u4e2a\u7528\u4e8e\u662f\u5426\u663e\u793a\u6309\u94ae\u7684\u4ee3\u7801 // \u5982\u679c\u7b2c\u4e00\u4e2a\u53ef\u89c1\u7684\u9879\u76ee\u5df2\u7ecf\u88ab\u79fb\u52a8\u8fc7\u53bb\uff0c\u5c31\u663e\u793a\u8fd9\u4e2a\u6309\u94ae\u3002 val showButton by remember { derivedStateOf { // \u5c3d\u91cf\u51cf\u5c11\u4e0d\u5fc5\u8981\u7684\u5408\u6210 listState . firstVisibleItemIndex > 0 } } AnimatedVisibility ( visible = showButton ) { ScrollToTopButton () } // \u4f2a\u4ee3\u7801\uff0c\u53ef\u7528 FAB \u6765\u5b9e\u73b0 ScrollToTopButton ( onClick = { scope . launch { listState . animateScrollToItem ( 0 ) // \u70b9\u51fb\u8fd4\u56de\u7b2c\u4e00\u9879 } } ) } }","title":"8. \u5bf9\u6eda\u52a8\u4f4d\u7f6e\u505a\u51fa\u53cd\u5e94"},{"location":"design/theme/custom_your_theme/","text":"1. \u793a\u4f8b\u4ecb\u7ecd \u672c\u6587\u793a\u4f8b\u6765\u81ea\uff1ahttps://github.com/RugerMcCarthy/BloomCompose \u901a\u8fc7\u9605\u8bfb\u524d\u4e24\u7bc7\u6587\u7ae0\u76f8\u4fe1\u4f60\u5df2\u7ecf\u5177\u5907\u81ea\u5b9a\u4e49\u4e3b\u9898\u65b9\u6848\u7684\u80fd\u529b\u4e86\u3002\u6211\u4eec\u901a\u8fc7#AndroidDevChallange\u6311\u6218\u8d5b\u7b2c\u4e09\u5468\u9898\u76ee\u4f5c\u4e3a\u793a\u4f8b\u6765\u770b\u770b\u5728\u5b9e\u9645\u9879\u76ee\u4e2d\u5982\u4f55\u8fdb\u884c\u5e94\u7528\u3002\u5728\u4e0d\u540c\u4e3b\u9898\u65b9\u6848\u4e0b\u80cc\u666f\u989c\u8272\u3001\u6587\u5b57\u989c\u8272\u4e0e\u56fe\u7247\u8d44\u6e90\u90fd\u662f\u4e0d\u540c\u7684\u3002\u503c\u5f97\u6ce8\u610f\u7684\u662f\u5bf9\u4e8e\u6240\u6709\u6587\u672c\u4e5f\u53ef\u4ee5\u901a\u8fc7\u4e3b\u9898\u5b8c\u6210\u5b57\u4f53\u6837\u5f0f\u7684\u914d\u7f6e\uff0c\u6240\u8981\u5b9e\u73b0\u7684\u76ee\u6807\u6548\u679c\u5982\u4e0b\u56fe\u6240\u793a\u3002 2. \u914d\u7f6e\u989c\u8272\u6837\u5f0f \u9996\u5148\uff0c\u6211\u4eec\u6765\u5b66\u4e60\u5982\u4f55\u914d\u7f6e\u989c\u8272\u6837\u5f0f\u3002\u5176\u5b9e\u8fd9\u91cc\u7684\u5185\u5bb9\u5728\u521d\u8bc6MaterialTheme\u7ae0\u8282\u4e2d\u7684\u64cd\u4f5c\u662f\u4e00\u6837\u7684\u3002\u6211\u4eec\u4ec5\u9700\u8981\u6839\u636e\u4e3b\u9898\u7684\u4e0d\u540c\u751f\u6210\u5176\u5bf9\u5e94\u7684colors\u5373\u53ef\u3002\u6839\u636e\u9879\u76ee\u9700\u6c42\uff0c\u6211\u4eec\u8fdb\u884c\u4ee5\u4e0b\u7684\u914d\u7f6e\u3002 private val BloomLightColorPaltte = lightColors ( primary = pink100 , secondary = pink900 , background = white , surface = white850 , onPrimary = gray , onSecondary = white , onBackground = gray , onSurface = gray , ) private val BloomDarkColorPaltte = darkColors ( primary = green900 , secondary = green300 , background = gray , surface = white150 , onPrimary = white , onSecondary = gray , onBackground = white , onSurface = white850 ) @Composable fun BloomTheme ( theme : BloomTheme = BloomTheme . LIGHT , content : @Composable () () -> Unit ) { CompositionLocalProvider ( LocalWelcomeAssets provides if ( theme == BloomTheme . DARK ) WelcomeAssets . DarkWelcomeAssets else WelcomeAssets . LightWelcomeAssets , ) { MaterialTheme ( colors = if ( theme == BloomTheme . DARK ) BloomDarkColorPaltte else BloomLightColorPaltte , typography = Typography , shapes = shapes , content = content ) } } \u5728\u6211\u4eec\u7684\u89c6\u56fe\u6240\u9700\u8981Color\u7684\u5730\u65b9\u914d\u7f6e\u5373\u53ef\u3002 Text ( text = \"Beautiful home garden solutions\" , textAlign = TextAlign . Center , color = MaterialTheme . colors . onPrimary // I'm here ) 3. \u914d\u7f6e\u5b57\u4f53\u6837\u5f0f \u6211\u4eec\u63a5\u7740\u6765\u5b66\u4e60\u5982\u4f55\u914d\u7f6e\u5b57\u4f53\u6837\u5f0f\u3002\u8fd8\u8bb0\u5f97MaterialTheme\u65b9\u6cd5\u561b\uff0c\u5176\u5b9e\u7b2c\u4e8c\u4e2a\u53c2\u6570typography\u8868\u793a\u7684\u5c31\u662f\u4f60\u6240\u914d\u7f6e\u7684\u5b57\u4f53\uff0c\u53ea\u662f\u8fd9\u4e2aTypography\u662fAndroid Studio\u9ed8\u8ba4\u5e2e\u4f60\u914d\u5236\u7684\u3002 MaterialTheme ( colors = colors , typography = Typography , shapes = Shapes , content = content ) \u5982\u679c\u662f\u65b0\u5efa\u7684\u9879\u76ee\uff0cAndroid Studio\u4f1a\u5728ui.theme\u5305\u4e0b\u751f\u6210Type.kt\uff0c\u5176\u4e2d\u5305\u542b\u4e86Typography\u7684\u5b9e\u73b0\uff0c\u540d\u4e3aTypography\u7684\u53d8\u91cf\u95f4\u63a5\u8c03\u7528Typography\u7c7b\u6784\u9020\u51fd\u6570\u3002 val Typography = Typography ( body1 = TextStyle ( fontFamily = FontFamily . Default , fontWeight = FontWeight . Normal , fontSize = 16. sp ) ) \u518d\u56de\u5230MaterialTheme\u5b9e\u73b0\uff0c\u53ef\u4ee5\u53d1\u73b0typography\u63d0\u4f9b\u7ed9LocalTypography\u8fd9\u4e2aCompositionLocal\u5b9e\u4f8b\u4e86\uff0c\u90a3\u4e48\u6211\u4eec\u5728\u9879\u76ee\u4e2d\u5982\u4f55\u4f7f\u7528\u8fd9\u4e2a\u7279\u6b8a\u5b57\u4f53\u4e5f\u4e0d\u9700\u8981\u989d\u5916\u7684\u4ecb\u7ecd\u4e86\uff0c\u8fd9\u4e0ecolors\u662f\u5b8c\u5168\u4e00\u6837\u7684\u3002 @Composable fun MaterialTheme ( colors : Colors = MaterialTheme . colors , typography : Typography = MaterialTheme . typography , shapes : Shapes = MaterialTheme . shapes , content : @Composable () -> Unit ) { val rememberedColors = remember { colors . copy () }. apply { updateColorsFrom ( colors ) } val rippleIndication = rememberRipple () val selectionColors = rememberTextSelectionColors ( rememberedColors ) CompositionLocalProvider ( LocalColors provides rememberedColors , LocalContentAlpha provides ContentAlpha . high , LocalIndication provides rippleIndication , LocalRippleTheme provides MaterialRippleTheme , LocalShapes provides shapes , LocalTextSelectionColors provides selectionColors , LocalTypography provides typography // I'm here~ ) { ProvideTextStyle ( value = typography . body1 , content = content ) } } \u65e2\u7136\u61c2\u5f97\u4e86\u539f\u7406\uff0c\u6211\u4eec\u4ec5\u9700\u8981\u6839\u636e\u9879\u76ee\u5b9e\u9645\u9700\u6c42\u914d\u7f6e\u5b57\u4f53\u6837\u5f0f\u5373\u53ef\uff0c\u65e2\u7136Android Studio\u5e2e\u52a9\u751f\u6210Type.kt\uff0c\u8bf4\u660e\u662f\u5b98\u65b9\u5e0c\u671b\u6211\u4eec\u5c06\u5b57\u4f53\u6837\u5f0f\u914d\u7f6e\u5728\u8fd9\u4e2a\u6587\u4ef6\u4e2d\u7684\u3002\u8fd9\u662f\u4e00\u79cd\u89c4\u8303\uff0c\u4f46\u4e5f\u53ef\u4e0d\u9075\u5b88\u3002 \u503c\u5f97\u6ce8\u610f\u7684\u662f\u7531\u4e8e\u6bcf\u79cd\u5b57\u4f53\u90fd\u4f1a\u6709\u4e0d\u540c\u7684\u7c97\u7ec6\u98ce\u683c\uff0c\u6211\u4eec\u5728\u5b57\u4f53\u6837\u5f0f\u914d\u7f6e\u65f6\u9700\u8981\u6307\u660e\u5b57\u4f53\u79cd\u7c7b\u4e0e\u7c97\u7ec6\u98ce\u683c\u3002 val nunitoSansFamily = FontFamily ( Font ( R . font . nunitosans_light , FontWeight . Light ), Font ( R . font . nunitosans_semibold , FontWeight . SemiBold ), Font ( R . font . nunitosans_bold , FontWeight . Bold ) ) val bloomTypography = Typography ( h1 = TextStyle ( fontSize = 18. sp , fontFamily = nunitoSansFamily , fontWeight = FontWeight . Bold ), h2 = TextStyle ( fontSize = 14. sp , letterSpacing = 0.15 . sp , fontFamily = nunitoSansFamily , fontWeight = FontWeight . Bold ), .... ) \u4f7f\u7528\u7684\u8bdd\u5c31\u5f88\u7b80\u5355\u4e86\uff0c\u6211\u4eec\u4ec5\u9700\u5c06\u5b57\u4f53\u6837\u5f0f\u4f20\u5165MaterialTheme\u5373\u53ef\u3002 @Composable fun BloomTheme ( theme : BloomTheme = BloomTheme . LIGHT , content : @Composable () () -> Unit ) { MaterialTheme ( colors = if ( theme == BloomTheme . DARK ) BloomDarkColorPaltte else BloomLightColorPaltte , typography = bloomTypoGraphy , shapes = shapes , content = content ) } \u5728\u6211\u4eec\u7684\u89c6\u56fe\u7ec4\u4ef6\u4e2d\u4f7f\u7528style\u53c2\u6570\u8fdb\u884c\u914d\u7f6e\u5373\u53ef\u3002 Text ( text = \"Beautiful home garden solutions\" , textAlign = TextAlign . Center , style = MaterialTheme . typography . subtitle1 , // I'm here color = MaterialTheme . colors . onPrimary ) 4. \u914d\u7f6e\u81ea\u5b9a\u4e49\u8d44\u6e90 \u6709\u65f6\u6211\u4eec\u53ef\u80fd\u9700\u8981\u6839\u636e\u4e3b\u9898\u7684\u4e0d\u540c\u4f7f\u7528\u4e0d\u540c\u7684\u591a\u5a92\u4f53\u8d44\u6e90\uff0c\u4f8b\u5982\u56fe\u7247\u3001\u89c6\u9891\u3001\u97f3\u9891\u7b49\u7b49\u3002\u901a\u8fc7\u67e5\u9605MaterialTheme\u53c2\u6570\u5217\u8868\u6211\u4eec\u6ca1\u6709\u53d1\u73b0\u53ef\u4ee5\u8fdb\u884c\u914d\u7f6e\u7684\u53c2\u6570\u3002\u96be\u9053 Jetpack Compose \u4e0d\u5177\u5907\u8fd9\u6837\u7684\u80fd\u529b\uff1f\u7b54\u6848\u5f53\u7136\u662f\u5426\u5b9a\u7684\uff0cAndroid\u56e2\u961f\u5df2\u7ecf\u5145\u5206\u8003\u8651\u4e86\u5404\u79cd\u573a\u666f\uff0c\u53ea\u662f\u9488\u5bf9\u4e8e\u8fd9\u79cd\u9700\u6c42\u800c\u8a00\uff0c\u6211\u4eec\u9700\u8981\u8fdb\u884c\u989d\u5916\u7684\u5b9a\u5236\u6269\u5c55\u3002 \u5728\u524d\u4e00\u7bc7\u6587\u7ae0\u4e2d\uff0c\u6211\u4eec\u5df2\u7ecf\u8be6\u7ec6\u4ecb\u7ecd\u4e86MaterialTheme\u5de5\u4f5c\u539f\u7406\uff0c\u60f3\u5fc5\u4f60\u4e5f\u731c\u5230\u4e86\uff0c\u5c31\u662f\u901a\u8fc7\u5b9a\u5236CompositionLocal\u65b9\u5f0f\u6765\u5b9e\u73b0\u56fe\u7247\u8d44\u6e90\u7684\u6269\u5c55\uff0c\u6839\u636e\u4e3b\u9898\u7684\u4e0d\u540c\u9009\u7528\u5176\u5bf9\u5e94\u7684\u591a\u5a92\u4f53\u8d44\u6e90\u3002 open class WelcomeAssets private constructor ( var background : Int , var illos : Int , var logo : Int ) { object LightWelcomeAssets : WelcomeAssets ( background = R . drawable . ic_light_welcome_bg , illos = R . drawable . ic_light_welcome_illos , logo = R . drawable . ic_light_logo ) object DarkWelcomeAssets : WelcomeAssets ( background = R . drawable . ic_dark_welcome_bg , illos = R . drawable . ic_dark_welcome_illos , logo = R . drawable . ic_dark_logo ) } internal var LocalWelcomeAssets = staticCompositionLocalOf { WelcomeAssets . LightWelcomeAssets as WelcomeAssets } \u4e8e\u6b64\u540c\u65f6\uff0c\u6211\u4eec\u8fd8\u5e0c\u671b\u80fd\u591f\u5728\u89c6\u56fe\u4e2d\u4ecd\u901a\u8fc7MaterialTheme\u6765\u8bbf\u95ee\u6211\u4eec\u7684\u56fe\u7247\u8d44\u6e90\uff0c\u90a3\u4e48\u5219\u53ef\u4ee5\u901a\u8fc7Kotlin\u6269\u5c55\u5c5e\u6027\u7684\u7279\u6027\u8fdb\u884c\u5b9e\u73b0(\u6269\u5c55\u5c5e\u6027\u662f\u6ca1\u6709\u5e55\u540e\u5b57\u6bb5\u7684\uff0c\u53ea\u80fd\u59d4\u6258\u5176\u4ed6\u5b9e\u4f8b)\u3002\u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0cCompositionLocal\u53ea\u80fd\u5728composable(\u5e26\u6709Composable\u6ce8\u89e3\u7684lambda)\u4e2d\u4f7f\u7528\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u4e3a\u8fd9\u4e2a\u5c5e\u6027\u83b7\u53d6\u6dfb\u52a0@Composable\u4e0e@ReadOnlyComposable\u6ce8\u89e3\u3002 val MaterialTheme . welcomeAssets @Composable @ReadOnlyComposable get () = LocalWelcomeAssets . current \u8fd9\u6837\u6211\u4eec\u5728\u89c6\u56fe\u4e2d\u5c31\u53ef\u4ee5\u4ecd\u7136\u901a\u8fc7MaterialTheme\u6765\u83b7\u53d6\u6269\u5c55\u7684\u56fe\u7247\u8d44\u6e90\u4e86\u3002 Image ( painter = rememberVectorPainter ( image = ImageVector . vectorResource ( id = MaterialTheme . welcomeAssets . background )), contentDescription = \"weclome_bg\" , modifier = Modifier . fillMaxSize () ) \u65e2\u7136\u4e86\u89e3\u4e86\u56fe\u7247\u7684\u4e3b\u9898\u914d\u7f6e\uff0c\u5176\u4ed6\u591a\u5a92\u4f53\u8d44\u6e90\u7684\u4e3b\u9898\u914d\u7f6e\u662f\u5b8c\u5168\u76f8\u540c\u7684\uff0c\u8bf7\u5145\u5206\u53d1\u6325\u4f60\u7684\u60f3\u8c61\u529b\u3002","title":"\u81ea\u5b9a\u4e49\u4f60\u7684\u4e3b\u9898\u65b9\u6848"},{"location":"design/theme/custom_your_theme/#1","text":"\u672c\u6587\u793a\u4f8b\u6765\u81ea\uff1ahttps://github.com/RugerMcCarthy/BloomCompose \u901a\u8fc7\u9605\u8bfb\u524d\u4e24\u7bc7\u6587\u7ae0\u76f8\u4fe1\u4f60\u5df2\u7ecf\u5177\u5907\u81ea\u5b9a\u4e49\u4e3b\u9898\u65b9\u6848\u7684\u80fd\u529b\u4e86\u3002\u6211\u4eec\u901a\u8fc7#AndroidDevChallange\u6311\u6218\u8d5b\u7b2c\u4e09\u5468\u9898\u76ee\u4f5c\u4e3a\u793a\u4f8b\u6765\u770b\u770b\u5728\u5b9e\u9645\u9879\u76ee\u4e2d\u5982\u4f55\u8fdb\u884c\u5e94\u7528\u3002\u5728\u4e0d\u540c\u4e3b\u9898\u65b9\u6848\u4e0b\u80cc\u666f\u989c\u8272\u3001\u6587\u5b57\u989c\u8272\u4e0e\u56fe\u7247\u8d44\u6e90\u90fd\u662f\u4e0d\u540c\u7684\u3002\u503c\u5f97\u6ce8\u610f\u7684\u662f\u5bf9\u4e8e\u6240\u6709\u6587\u672c\u4e5f\u53ef\u4ee5\u901a\u8fc7\u4e3b\u9898\u5b8c\u6210\u5b57\u4f53\u6837\u5f0f\u7684\u914d\u7f6e\uff0c\u6240\u8981\u5b9e\u73b0\u7684\u76ee\u6807\u6548\u679c\u5982\u4e0b\u56fe\u6240\u793a\u3002","title":"1. \u793a\u4f8b\u4ecb\u7ecd"},{"location":"design/theme/custom_your_theme/#2","text":"\u9996\u5148\uff0c\u6211\u4eec\u6765\u5b66\u4e60\u5982\u4f55\u914d\u7f6e\u989c\u8272\u6837\u5f0f\u3002\u5176\u5b9e\u8fd9\u91cc\u7684\u5185\u5bb9\u5728\u521d\u8bc6MaterialTheme\u7ae0\u8282\u4e2d\u7684\u64cd\u4f5c\u662f\u4e00\u6837\u7684\u3002\u6211\u4eec\u4ec5\u9700\u8981\u6839\u636e\u4e3b\u9898\u7684\u4e0d\u540c\u751f\u6210\u5176\u5bf9\u5e94\u7684colors\u5373\u53ef\u3002\u6839\u636e\u9879\u76ee\u9700\u6c42\uff0c\u6211\u4eec\u8fdb\u884c\u4ee5\u4e0b\u7684\u914d\u7f6e\u3002 private val BloomLightColorPaltte = lightColors ( primary = pink100 , secondary = pink900 , background = white , surface = white850 , onPrimary = gray , onSecondary = white , onBackground = gray , onSurface = gray , ) private val BloomDarkColorPaltte = darkColors ( primary = green900 , secondary = green300 , background = gray , surface = white150 , onPrimary = white , onSecondary = gray , onBackground = white , onSurface = white850 ) @Composable fun BloomTheme ( theme : BloomTheme = BloomTheme . LIGHT , content : @Composable () () -> Unit ) { CompositionLocalProvider ( LocalWelcomeAssets provides if ( theme == BloomTheme . DARK ) WelcomeAssets . DarkWelcomeAssets else WelcomeAssets . LightWelcomeAssets , ) { MaterialTheme ( colors = if ( theme == BloomTheme . DARK ) BloomDarkColorPaltte else BloomLightColorPaltte , typography = Typography , shapes = shapes , content = content ) } } \u5728\u6211\u4eec\u7684\u89c6\u56fe\u6240\u9700\u8981Color\u7684\u5730\u65b9\u914d\u7f6e\u5373\u53ef\u3002 Text ( text = \"Beautiful home garden solutions\" , textAlign = TextAlign . Center , color = MaterialTheme . colors . onPrimary // I'm here )","title":"2. \u914d\u7f6e\u989c\u8272\u6837\u5f0f"},{"location":"design/theme/custom_your_theme/#3","text":"\u6211\u4eec\u63a5\u7740\u6765\u5b66\u4e60\u5982\u4f55\u914d\u7f6e\u5b57\u4f53\u6837\u5f0f\u3002\u8fd8\u8bb0\u5f97MaterialTheme\u65b9\u6cd5\u561b\uff0c\u5176\u5b9e\u7b2c\u4e8c\u4e2a\u53c2\u6570typography\u8868\u793a\u7684\u5c31\u662f\u4f60\u6240\u914d\u7f6e\u7684\u5b57\u4f53\uff0c\u53ea\u662f\u8fd9\u4e2aTypography\u662fAndroid Studio\u9ed8\u8ba4\u5e2e\u4f60\u914d\u5236\u7684\u3002 MaterialTheme ( colors = colors , typography = Typography , shapes = Shapes , content = content ) \u5982\u679c\u662f\u65b0\u5efa\u7684\u9879\u76ee\uff0cAndroid Studio\u4f1a\u5728ui.theme\u5305\u4e0b\u751f\u6210Type.kt\uff0c\u5176\u4e2d\u5305\u542b\u4e86Typography\u7684\u5b9e\u73b0\uff0c\u540d\u4e3aTypography\u7684\u53d8\u91cf\u95f4\u63a5\u8c03\u7528Typography\u7c7b\u6784\u9020\u51fd\u6570\u3002 val Typography = Typography ( body1 = TextStyle ( fontFamily = FontFamily . Default , fontWeight = FontWeight . Normal , fontSize = 16. sp ) ) \u518d\u56de\u5230MaterialTheme\u5b9e\u73b0\uff0c\u53ef\u4ee5\u53d1\u73b0typography\u63d0\u4f9b\u7ed9LocalTypography\u8fd9\u4e2aCompositionLocal\u5b9e\u4f8b\u4e86\uff0c\u90a3\u4e48\u6211\u4eec\u5728\u9879\u76ee\u4e2d\u5982\u4f55\u4f7f\u7528\u8fd9\u4e2a\u7279\u6b8a\u5b57\u4f53\u4e5f\u4e0d\u9700\u8981\u989d\u5916\u7684\u4ecb\u7ecd\u4e86\uff0c\u8fd9\u4e0ecolors\u662f\u5b8c\u5168\u4e00\u6837\u7684\u3002 @Composable fun MaterialTheme ( colors : Colors = MaterialTheme . colors , typography : Typography = MaterialTheme . typography , shapes : Shapes = MaterialTheme . shapes , content : @Composable () -> Unit ) { val rememberedColors = remember { colors . copy () }. apply { updateColorsFrom ( colors ) } val rippleIndication = rememberRipple () val selectionColors = rememberTextSelectionColors ( rememberedColors ) CompositionLocalProvider ( LocalColors provides rememberedColors , LocalContentAlpha provides ContentAlpha . high , LocalIndication provides rippleIndication , LocalRippleTheme provides MaterialRippleTheme , LocalShapes provides shapes , LocalTextSelectionColors provides selectionColors , LocalTypography provides typography // I'm here~ ) { ProvideTextStyle ( value = typography . body1 , content = content ) } } \u65e2\u7136\u61c2\u5f97\u4e86\u539f\u7406\uff0c\u6211\u4eec\u4ec5\u9700\u8981\u6839\u636e\u9879\u76ee\u5b9e\u9645\u9700\u6c42\u914d\u7f6e\u5b57\u4f53\u6837\u5f0f\u5373\u53ef\uff0c\u65e2\u7136Android Studio\u5e2e\u52a9\u751f\u6210Type.kt\uff0c\u8bf4\u660e\u662f\u5b98\u65b9\u5e0c\u671b\u6211\u4eec\u5c06\u5b57\u4f53\u6837\u5f0f\u914d\u7f6e\u5728\u8fd9\u4e2a\u6587\u4ef6\u4e2d\u7684\u3002\u8fd9\u662f\u4e00\u79cd\u89c4\u8303\uff0c\u4f46\u4e5f\u53ef\u4e0d\u9075\u5b88\u3002 \u503c\u5f97\u6ce8\u610f\u7684\u662f\u7531\u4e8e\u6bcf\u79cd\u5b57\u4f53\u90fd\u4f1a\u6709\u4e0d\u540c\u7684\u7c97\u7ec6\u98ce\u683c\uff0c\u6211\u4eec\u5728\u5b57\u4f53\u6837\u5f0f\u914d\u7f6e\u65f6\u9700\u8981\u6307\u660e\u5b57\u4f53\u79cd\u7c7b\u4e0e\u7c97\u7ec6\u98ce\u683c\u3002 val nunitoSansFamily = FontFamily ( Font ( R . font . nunitosans_light , FontWeight . Light ), Font ( R . font . nunitosans_semibold , FontWeight . SemiBold ), Font ( R . font . nunitosans_bold , FontWeight . Bold ) ) val bloomTypography = Typography ( h1 = TextStyle ( fontSize = 18. sp , fontFamily = nunitoSansFamily , fontWeight = FontWeight . Bold ), h2 = TextStyle ( fontSize = 14. sp , letterSpacing = 0.15 . sp , fontFamily = nunitoSansFamily , fontWeight = FontWeight . Bold ), .... ) \u4f7f\u7528\u7684\u8bdd\u5c31\u5f88\u7b80\u5355\u4e86\uff0c\u6211\u4eec\u4ec5\u9700\u5c06\u5b57\u4f53\u6837\u5f0f\u4f20\u5165MaterialTheme\u5373\u53ef\u3002 @Composable fun BloomTheme ( theme : BloomTheme = BloomTheme . LIGHT , content : @Composable () () -> Unit ) { MaterialTheme ( colors = if ( theme == BloomTheme . DARK ) BloomDarkColorPaltte else BloomLightColorPaltte , typography = bloomTypoGraphy , shapes = shapes , content = content ) } \u5728\u6211\u4eec\u7684\u89c6\u56fe\u7ec4\u4ef6\u4e2d\u4f7f\u7528style\u53c2\u6570\u8fdb\u884c\u914d\u7f6e\u5373\u53ef\u3002 Text ( text = \"Beautiful home garden solutions\" , textAlign = TextAlign . Center , style = MaterialTheme . typography . subtitle1 , // I'm here color = MaterialTheme . colors . onPrimary )","title":"3. \u914d\u7f6e\u5b57\u4f53\u6837\u5f0f"},{"location":"design/theme/custom_your_theme/#4","text":"\u6709\u65f6\u6211\u4eec\u53ef\u80fd\u9700\u8981\u6839\u636e\u4e3b\u9898\u7684\u4e0d\u540c\u4f7f\u7528\u4e0d\u540c\u7684\u591a\u5a92\u4f53\u8d44\u6e90\uff0c\u4f8b\u5982\u56fe\u7247\u3001\u89c6\u9891\u3001\u97f3\u9891\u7b49\u7b49\u3002\u901a\u8fc7\u67e5\u9605MaterialTheme\u53c2\u6570\u5217\u8868\u6211\u4eec\u6ca1\u6709\u53d1\u73b0\u53ef\u4ee5\u8fdb\u884c\u914d\u7f6e\u7684\u53c2\u6570\u3002\u96be\u9053 Jetpack Compose \u4e0d\u5177\u5907\u8fd9\u6837\u7684\u80fd\u529b\uff1f\u7b54\u6848\u5f53\u7136\u662f\u5426\u5b9a\u7684\uff0cAndroid\u56e2\u961f\u5df2\u7ecf\u5145\u5206\u8003\u8651\u4e86\u5404\u79cd\u573a\u666f\uff0c\u53ea\u662f\u9488\u5bf9\u4e8e\u8fd9\u79cd\u9700\u6c42\u800c\u8a00\uff0c\u6211\u4eec\u9700\u8981\u8fdb\u884c\u989d\u5916\u7684\u5b9a\u5236\u6269\u5c55\u3002 \u5728\u524d\u4e00\u7bc7\u6587\u7ae0\u4e2d\uff0c\u6211\u4eec\u5df2\u7ecf\u8be6\u7ec6\u4ecb\u7ecd\u4e86MaterialTheme\u5de5\u4f5c\u539f\u7406\uff0c\u60f3\u5fc5\u4f60\u4e5f\u731c\u5230\u4e86\uff0c\u5c31\u662f\u901a\u8fc7\u5b9a\u5236CompositionLocal\u65b9\u5f0f\u6765\u5b9e\u73b0\u56fe\u7247\u8d44\u6e90\u7684\u6269\u5c55\uff0c\u6839\u636e\u4e3b\u9898\u7684\u4e0d\u540c\u9009\u7528\u5176\u5bf9\u5e94\u7684\u591a\u5a92\u4f53\u8d44\u6e90\u3002 open class WelcomeAssets private constructor ( var background : Int , var illos : Int , var logo : Int ) { object LightWelcomeAssets : WelcomeAssets ( background = R . drawable . ic_light_welcome_bg , illos = R . drawable . ic_light_welcome_illos , logo = R . drawable . ic_light_logo ) object DarkWelcomeAssets : WelcomeAssets ( background = R . drawable . ic_dark_welcome_bg , illos = R . drawable . ic_dark_welcome_illos , logo = R . drawable . ic_dark_logo ) } internal var LocalWelcomeAssets = staticCompositionLocalOf { WelcomeAssets . LightWelcomeAssets as WelcomeAssets } \u4e8e\u6b64\u540c\u65f6\uff0c\u6211\u4eec\u8fd8\u5e0c\u671b\u80fd\u591f\u5728\u89c6\u56fe\u4e2d\u4ecd\u901a\u8fc7MaterialTheme\u6765\u8bbf\u95ee\u6211\u4eec\u7684\u56fe\u7247\u8d44\u6e90\uff0c\u90a3\u4e48\u5219\u53ef\u4ee5\u901a\u8fc7Kotlin\u6269\u5c55\u5c5e\u6027\u7684\u7279\u6027\u8fdb\u884c\u5b9e\u73b0(\u6269\u5c55\u5c5e\u6027\u662f\u6ca1\u6709\u5e55\u540e\u5b57\u6bb5\u7684\uff0c\u53ea\u80fd\u59d4\u6258\u5176\u4ed6\u5b9e\u4f8b)\u3002\u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0cCompositionLocal\u53ea\u80fd\u5728composable(\u5e26\u6709Composable\u6ce8\u89e3\u7684lambda)\u4e2d\u4f7f\u7528\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u4e3a\u8fd9\u4e2a\u5c5e\u6027\u83b7\u53d6\u6dfb\u52a0@Composable\u4e0e@ReadOnlyComposable\u6ce8\u89e3\u3002 val MaterialTheme . welcomeAssets @Composable @ReadOnlyComposable get () = LocalWelcomeAssets . current \u8fd9\u6837\u6211\u4eec\u5728\u89c6\u56fe\u4e2d\u5c31\u53ef\u4ee5\u4ecd\u7136\u901a\u8fc7MaterialTheme\u6765\u83b7\u53d6\u6269\u5c55\u7684\u56fe\u7247\u8d44\u6e90\u4e86\u3002 Image ( painter = rememberVectorPainter ( image = ImageVector . vectorResource ( id = MaterialTheme . welcomeAssets . background )), contentDescription = \"weclome_bg\" , modifier = Modifier . fillMaxSize () ) \u65e2\u7136\u4e86\u89e3\u4e86\u56fe\u7247\u7684\u4e3b\u9898\u914d\u7f6e\uff0c\u5176\u4ed6\u591a\u5a92\u4f53\u8d44\u6e90\u7684\u4e3b\u9898\u914d\u7f6e\u662f\u5b8c\u5168\u76f8\u540c\u7684\uff0c\u8bf7\u5145\u5206\u53d1\u6325\u4f60\u7684\u60f3\u8c61\u529b\u3002","title":"4. \u914d\u7f6e\u81ea\u5b9a\u4e49\u8d44\u6e90"},{"location":"design/theme/meet_material_theme/","text":"1. \u4ecb\u7ecd MaterialTheme \u662f Jetpack Compose \u6240\u63d0\u4f9b\u7684\u57fa\u4e8e Material Design \u98ce\u683c\u4e3b\u9898\u6837\u5f0f\u6a21\u7248\uff0c\u901a\u8fc7\u4e3b\u9898\u6837\u5f0f\u6a21\u7248\u7684\u914d\u7f6e\uff0c\u5141\u8bb8\u81ea\u5b9a\u4e49\u89c6\u56fe\u7cfb\u7edf\u4e2d\u6240\u6709\u7ec4\u4ef6\u6839\u636e\u4e3b\u9898\u5207\u6362\u800c\u76f8\u5e94\u5f97\u5230\u6837\u5f0f\u6539\u53d8\u3002 \u5f53\u521b\u5efa\u4e00\u4e2a\u65b0\u7684 Compose \u9879\u76ee\u65f6\uff0cAndroid Studio \u4f1a\u9ed8\u8ba4\u5e2e\u6211\u751f\u6210\u4e00\u4e2a Theme \u65b9\u6cd5(\u751f\u6210\u7684\u547d\u540d\u89c4\u5219\uff1a\u9879\u76ee\u540d\u79f0+Theme) class MainActivity : ComponentActivity () { override fun onCreate ( savedInstanceState : Bundle?) { super . onCreate ( savedInstanceState ) setContent { // \u770b\u8fd9\u91cc\uff0c\u6211\u521b\u5efa\u7684\u9879\u76ee\u540d\u79f0\u662f ComposeStudy \uff5e // \u503c\u5f97\u6ce8\u610f\u7684\u662f\u6211\u4eec\u58f0\u660e\u7684\u81ea\u5b9a\u4e49\u89c6\u56fe\u4f1a\u4ee5 lambda \u53c2\u6570\u5f62\u5f0f\u4f20\u5165\u5176\u4e2d\u3002 ComposeStudyTheme { Surface ( color = MaterialTheme . colors . background ) { Greeting ( \"Android\" ) } } } } } \u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u770b\u770b\u8fd9\u4e2a\u751f\u6210\u7684 Theme \u65b9\u6cd5\u4e3a\u6211\u4eec\u505a\u4e86\u54ea\u4e9b\u4e8b\u3002 @Composable fun ComposeStudyTheme ( darkTheme : Boolean = isSystemInDarkTheme (), content : @Composable () () -> Unit ) { val colors = if ( darkTheme ) { DarkColorPalette } else { LightColorPalette } MaterialTheme ( colors = colors , // \u989c\u8272 typography = Typography , // \u5b57\u4f53 shapes = Shapes , // \u5f62\u72b6 content = content // \u58f0\u660e\u7684\u89c6\u56fe ) } private val DarkColorPalette = darkColors ( primary = Purple200 , primaryVariant = Purple700 , secondary = Teal200 ) private val LightColorPalette = lightColors ( primary = Purple500 , primaryVariant = Purple700 , secondary = Teal200 ) \u5728\u8fd9\u91cc\u6211\u4eec\u770b\u5230\u4e86 MaterialTheme \u3002\u4f46\u662f\u5148\u522b\u6025\u6211\u4eec\u5f80\u4e0a\u770b\u770b\uff0c\u53ef\u4ee5\u770b\u5230 Android Studio \u9ed8\u8ba4\u5e2e\u52a9\u6211\u4eec\u751f\u6210\u4e86\u4e24\u79cd\u914d\u8272\u7684\u8c03\u8272\u677f( Light \u4e0e Dark )\uff0c\u6839\u636e\u4f20\u5165\u5e03\u5c14\u503c\u7684\u4e0d\u540c\u800c\u9009\u62e9\u5176\u4e00\uff0c\u5e76\u5c06\u5176\u4f20\u5165\u5230MaterialTheme\u3002\u53ef\u4ee5\u770b\u5230\u8fd9\u4e24\u79cd\u914d\u8272\u7684\u8c03\u8272\u677f\u5206\u522b\u4f7f\u7528\u7684\u662f darkColors \u4e0e lightColors \u4e24\u4e2a\u65b9\u6cd5\u7684\u8fd4\u56de\u503c\uff0c\u6211\u4eec\u770b\u770b\u8fd9\u4e24\u8005\u7684\u5b9e\u73b0\u3002 fun lightColors ( primary : Color = Color ( 0 xFF6200EE ), primaryVariant : Color = Color ( 0 xFF3700B3 ), secondary : Color = Color ( 0 xFF03DAC6 ), secondaryVariant : Color = Color ( 0 xFF018786 ), background : Color = Color . White , surface : Color = Color . White , error : Color = Color ( 0 xFFB00020 ), onPrimary : Color = Color . White , onSecondary : Color = Color . Black , onBackground : Color = Color . Black , onSurface : Color = Color . Black , onError : Color = Color . White ): Colors = Colors ( primary , primaryVariant , secondary , secondaryVariant , background , surface , error , onPrimary , onSecondary , onBackground , onSurface , onError , true ) \u53ef\u4ee5\u770b\u5230 lightColors \u5c06\u4f20\u5165\u53c2\u6570\u900f\u4f20\u5230\u4e86Colors\u6784\u9020\u5668\u4e2d\u4e86\uff0c\u800c Colors \u6784\u9020\u5668\u5c5e\u6027\u662f\u6ca1\u6709\u9ed8\u8ba4\u503c\u7684\uff0c lightColors \u5e2e\u52a9\u6211\u4eec\u751f\u6210\u4e86\u8bb8\u591a\u5c5e\u6027\u9ed8\u8ba4\u503c\u3002\u53ef\u4ee5\u53d1\u73b0\u4e24\u79cd\u8c03\u8272\u677f\u672c\u8d28\u4e0a\u53ea\u662fColors\u6210\u5458\u5c5e\u6027\u914d\u7f6e\u7684\u4e0d\u540c\uff0c\u61c2\u5f97\u4e86\u672c\u8d28\u5c31\u53ef\u4ee5\u8fdb\u884c\u5b9a\u5236\u4e3b\u9898\u6837\u5f0f\u7684\u914d\u7f6e\u4e86\u3002 2. \u7b80\u5355\u4f7f\u7528 MaterialTheme \u5b8c\u6210\u4e3b\u9898\u914d\u8272 \u63a5\u4e0b\u6765\u662f\u4f7f\u7528\u793a\u4f8b\uff0c\u5047\u8bbe\u5f53\u524d\u9700\u6c42\u4e3a\u6839\u636e\u4e3b\u9898\u7684\u4e0d\u540c\u4f7f\u5f97\u6211\u4eec\u5b9a\u5236\u7684\u6587\u672c\u989c\u8272\u4e5f\u4f1a\u968f\u4e4b\u53d8\u5316\u3002\u5f53\u4eae\u8272\u4e3b\u9898\u65f6\u663e\u793a\u4e3a\u7ea2\u8272\uff0c\u6697\u8272\u4e3b\u9898\u663e\u793a\u4e3a\u84dd\u8272\u3002\u8fd9\u91cc\u6211\u4eec\u4f7f\u7528 Color \u7684 primary \u5c5e\u6027\u6765\u5b58\u50a8\uff0c\u5f53\u7136\u4e5f\u53ef\u4ee5\u4f7f\u7528\u5176\u4ed6\u6210\u5458\u5c5e\u6027\u3002 @Composable fun CustomColorTheme ( isDark : Boolean , content : @Composable () () -> Unit ) { var BLUE = Color ( 0 xFF0000FF ) var RED = Color ( 0 xFFDC143C ) val colors = if ( isDark ) { darkColors ( primary = BLUE ) // \u5c06 primary \u8bbe\u7f6e\u4e3a\u84dd\u8272 } else { lightColors ( primary = RED ) // \u5c06 primary \u8bbe\u7f6e\u4e3a\u7ea2\u8272 } MaterialTheme ( colors = colors , typography = Typography , shapes = Shapes , content = content ) } \u914d\u7f6e\u5b8c\u5c31\u53ef\u4ee5\u5728\u6211\u4eec\u7684\u81ea\u5b9a\u4e49\u89c6\u56fe\u7cfb\u7edf\u4e2d\u4f7f\u7528\u4e86\uff0c\u5c06\u6211\u4eec\u89c6\u56fe\u4e2d\u7684 Text \u989c\u8272\u914d\u7f6e\u4e3a MaterialTheme.colors.primary \u3002 @Composable fun SampleText () { Text ( text = \"Hello World\" , color = MaterialTheme . colors . primary ) } @Preview ( showBackground = true ) @Composable fun DarkPreview () { CustomColorTheme ( isDark = true ) { SampleText (); } } @Preview ( showBackground = true ) @Composable fun LightPreview () { CustomColorTheme ( isDark = false ) { SampleText () } } \u6211\u4eec\u540c\u65f6\u521b\u5efa\u4e86\u4e24\u79cd\u4e3b\u9898\u7684\u9884\u89c8\uff0c\u901a\u8fc7 Android Studio \u7684 Preview \u7a97\u53e3\u5c31\u53ef\u4ee5\u9884\u89c8\u5230\u6240\u6709\u4e3b\u9898\u4e0b\u7684\u6548\u679c\u4e86\u3002","title":"\u521d\u8bc6 MaterialTheme"},{"location":"design/theme/meet_material_theme/#1","text":"MaterialTheme \u662f Jetpack Compose \u6240\u63d0\u4f9b\u7684\u57fa\u4e8e Material Design \u98ce\u683c\u4e3b\u9898\u6837\u5f0f\u6a21\u7248\uff0c\u901a\u8fc7\u4e3b\u9898\u6837\u5f0f\u6a21\u7248\u7684\u914d\u7f6e\uff0c\u5141\u8bb8\u81ea\u5b9a\u4e49\u89c6\u56fe\u7cfb\u7edf\u4e2d\u6240\u6709\u7ec4\u4ef6\u6839\u636e\u4e3b\u9898\u5207\u6362\u800c\u76f8\u5e94\u5f97\u5230\u6837\u5f0f\u6539\u53d8\u3002 \u5f53\u521b\u5efa\u4e00\u4e2a\u65b0\u7684 Compose \u9879\u76ee\u65f6\uff0cAndroid Studio \u4f1a\u9ed8\u8ba4\u5e2e\u6211\u751f\u6210\u4e00\u4e2a Theme \u65b9\u6cd5(\u751f\u6210\u7684\u547d\u540d\u89c4\u5219\uff1a\u9879\u76ee\u540d\u79f0+Theme) class MainActivity : ComponentActivity () { override fun onCreate ( savedInstanceState : Bundle?) { super . onCreate ( savedInstanceState ) setContent { // \u770b\u8fd9\u91cc\uff0c\u6211\u521b\u5efa\u7684\u9879\u76ee\u540d\u79f0\u662f ComposeStudy \uff5e // \u503c\u5f97\u6ce8\u610f\u7684\u662f\u6211\u4eec\u58f0\u660e\u7684\u81ea\u5b9a\u4e49\u89c6\u56fe\u4f1a\u4ee5 lambda \u53c2\u6570\u5f62\u5f0f\u4f20\u5165\u5176\u4e2d\u3002 ComposeStudyTheme { Surface ( color = MaterialTheme . colors . background ) { Greeting ( \"Android\" ) } } } } } \u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u770b\u770b\u8fd9\u4e2a\u751f\u6210\u7684 Theme \u65b9\u6cd5\u4e3a\u6211\u4eec\u505a\u4e86\u54ea\u4e9b\u4e8b\u3002 @Composable fun ComposeStudyTheme ( darkTheme : Boolean = isSystemInDarkTheme (), content : @Composable () () -> Unit ) { val colors = if ( darkTheme ) { DarkColorPalette } else { LightColorPalette } MaterialTheme ( colors = colors , // \u989c\u8272 typography = Typography , // \u5b57\u4f53 shapes = Shapes , // \u5f62\u72b6 content = content // \u58f0\u660e\u7684\u89c6\u56fe ) } private val DarkColorPalette = darkColors ( primary = Purple200 , primaryVariant = Purple700 , secondary = Teal200 ) private val LightColorPalette = lightColors ( primary = Purple500 , primaryVariant = Purple700 , secondary = Teal200 ) \u5728\u8fd9\u91cc\u6211\u4eec\u770b\u5230\u4e86 MaterialTheme \u3002\u4f46\u662f\u5148\u522b\u6025\u6211\u4eec\u5f80\u4e0a\u770b\u770b\uff0c\u53ef\u4ee5\u770b\u5230 Android Studio \u9ed8\u8ba4\u5e2e\u52a9\u6211\u4eec\u751f\u6210\u4e86\u4e24\u79cd\u914d\u8272\u7684\u8c03\u8272\u677f( Light \u4e0e Dark )\uff0c\u6839\u636e\u4f20\u5165\u5e03\u5c14\u503c\u7684\u4e0d\u540c\u800c\u9009\u62e9\u5176\u4e00\uff0c\u5e76\u5c06\u5176\u4f20\u5165\u5230MaterialTheme\u3002\u53ef\u4ee5\u770b\u5230\u8fd9\u4e24\u79cd\u914d\u8272\u7684\u8c03\u8272\u677f\u5206\u522b\u4f7f\u7528\u7684\u662f darkColors \u4e0e lightColors \u4e24\u4e2a\u65b9\u6cd5\u7684\u8fd4\u56de\u503c\uff0c\u6211\u4eec\u770b\u770b\u8fd9\u4e24\u8005\u7684\u5b9e\u73b0\u3002 fun lightColors ( primary : Color = Color ( 0 xFF6200EE ), primaryVariant : Color = Color ( 0 xFF3700B3 ), secondary : Color = Color ( 0 xFF03DAC6 ), secondaryVariant : Color = Color ( 0 xFF018786 ), background : Color = Color . White , surface : Color = Color . White , error : Color = Color ( 0 xFFB00020 ), onPrimary : Color = Color . White , onSecondary : Color = Color . Black , onBackground : Color = Color . Black , onSurface : Color = Color . Black , onError : Color = Color . White ): Colors = Colors ( primary , primaryVariant , secondary , secondaryVariant , background , surface , error , onPrimary , onSecondary , onBackground , onSurface , onError , true ) \u53ef\u4ee5\u770b\u5230 lightColors \u5c06\u4f20\u5165\u53c2\u6570\u900f\u4f20\u5230\u4e86Colors\u6784\u9020\u5668\u4e2d\u4e86\uff0c\u800c Colors \u6784\u9020\u5668\u5c5e\u6027\u662f\u6ca1\u6709\u9ed8\u8ba4\u503c\u7684\uff0c lightColors \u5e2e\u52a9\u6211\u4eec\u751f\u6210\u4e86\u8bb8\u591a\u5c5e\u6027\u9ed8\u8ba4\u503c\u3002\u53ef\u4ee5\u53d1\u73b0\u4e24\u79cd\u8c03\u8272\u677f\u672c\u8d28\u4e0a\u53ea\u662fColors\u6210\u5458\u5c5e\u6027\u914d\u7f6e\u7684\u4e0d\u540c\uff0c\u61c2\u5f97\u4e86\u672c\u8d28\u5c31\u53ef\u4ee5\u8fdb\u884c\u5b9a\u5236\u4e3b\u9898\u6837\u5f0f\u7684\u914d\u7f6e\u4e86\u3002","title":"1. \u4ecb\u7ecd"},{"location":"design/theme/meet_material_theme/#2-materialtheme","text":"\u63a5\u4e0b\u6765\u662f\u4f7f\u7528\u793a\u4f8b\uff0c\u5047\u8bbe\u5f53\u524d\u9700\u6c42\u4e3a\u6839\u636e\u4e3b\u9898\u7684\u4e0d\u540c\u4f7f\u5f97\u6211\u4eec\u5b9a\u5236\u7684\u6587\u672c\u989c\u8272\u4e5f\u4f1a\u968f\u4e4b\u53d8\u5316\u3002\u5f53\u4eae\u8272\u4e3b\u9898\u65f6\u663e\u793a\u4e3a\u7ea2\u8272\uff0c\u6697\u8272\u4e3b\u9898\u663e\u793a\u4e3a\u84dd\u8272\u3002\u8fd9\u91cc\u6211\u4eec\u4f7f\u7528 Color \u7684 primary \u5c5e\u6027\u6765\u5b58\u50a8\uff0c\u5f53\u7136\u4e5f\u53ef\u4ee5\u4f7f\u7528\u5176\u4ed6\u6210\u5458\u5c5e\u6027\u3002 @Composable fun CustomColorTheme ( isDark : Boolean , content : @Composable () () -> Unit ) { var BLUE = Color ( 0 xFF0000FF ) var RED = Color ( 0 xFFDC143C ) val colors = if ( isDark ) { darkColors ( primary = BLUE ) // \u5c06 primary \u8bbe\u7f6e\u4e3a\u84dd\u8272 } else { lightColors ( primary = RED ) // \u5c06 primary \u8bbe\u7f6e\u4e3a\u7ea2\u8272 } MaterialTheme ( colors = colors , typography = Typography , shapes = Shapes , content = content ) } \u914d\u7f6e\u5b8c\u5c31\u53ef\u4ee5\u5728\u6211\u4eec\u7684\u81ea\u5b9a\u4e49\u89c6\u56fe\u7cfb\u7edf\u4e2d\u4f7f\u7528\u4e86\uff0c\u5c06\u6211\u4eec\u89c6\u56fe\u4e2d\u7684 Text \u989c\u8272\u914d\u7f6e\u4e3a MaterialTheme.colors.primary \u3002 @Composable fun SampleText () { Text ( text = \"Hello World\" , color = MaterialTheme . colors . primary ) } @Preview ( showBackground = true ) @Composable fun DarkPreview () { CustomColorTheme ( isDark = true ) { SampleText (); } } @Preview ( showBackground = true ) @Composable fun LightPreview () { CustomColorTheme ( isDark = false ) { SampleText () } } \u6211\u4eec\u540c\u65f6\u521b\u5efa\u4e86\u4e24\u79cd\u4e3b\u9898\u7684\u9884\u89c8\uff0c\u901a\u8fc7 Android Studio \u7684 Preview \u7a97\u53e3\u5c31\u53ef\u4ee5\u9884\u89c8\u5230\u6240\u6709\u4e3b\u9898\u4e0b\u7684\u6548\u679c\u4e86\u3002","title":"2. \u7b80\u5355\u4f7f\u7528 MaterialTheme \u5b8c\u6210\u4e3b\u9898\u914d\u8272"},{"location":"design/theme/understanding_material_theme/","text":"1. MaterialTheme \u662f\u600e\u4e48\u505a\u5230\u7684 \u4e3a\u6df1\u5165\u7406\u89e3 MaterialTheme \u5de5\u4f5c\u539f\u7406\uff0c\u6211\u4eec\u9700\u8981\u8fdb\u5165\u6e90\u7801\u4e00\u63a2\u7a76\u7adf\u3002 \u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u6b64\u65f6\u4f20\u5165\u7684 content \u53c2\u6570\u5176\u5b9e\u662f\u58f0\u660e\u5728 Theme \u4e2d\u7684\u81ea\u5b9a\u4e49\u5e03\u5c40\u7cfb\u7edf\uff0c\u5176\u7c7b\u578b\u662f\u4e00\u4e2a\u5e26\u6709 Composable \u6ce8\u89e3\u7684 lambda (\u5bf9\u4e8e\u8fd9\u7c7b\u5e26\u6709 Composable \u7684 lambda \u7b80\u79f0\u4e3a composable )\u3002 \u6211\u4eec\u6240\u5173\u6ce8\u7684 colors \u88ab remember \u4fee\u9970\u540e\u8d4b\u503c\u4e3a rememberedColors\u3002\u5982\u679c MaterialTheme \u8fd9\u4e2a composable \u53d1\u751f recompose \u65f6\u4fbf\u4f1a\u68c0\u67e5 colors \u662f\u5426\u53d1\u751f\u4e86\u6539\u53d8\u4ece\u800c\u51b3\u5b9a\u66f4\u65b0\u3002 \u63a5\u4e0b\u6765\u4f7f\u7528 CompositionLocalProvider \u65b9\u6cd5\uff0c\u901a\u8fc7\u4e2d\u7f00 providers \u5c06 rememberedColors \u63d0\u4f9b\u7ed9\u4e86 LocalColors\u3002\u8ba9\u6211\u4eec\u56de\u5230\u81ea\u5b9a\u4e49\u89c6\u56fe\u4e2d\uff0c\u770b\u770b\u6211\u4eec\u662f\u5982\u4f55\u901a\u8fc7 MaterialTheme \u83b7\u53d6\u5230\u5f53\u524d\u4e3b\u9898\u914d\u8272\u7684\u3002 object MaterialTheme { val colors : Colors @Composable @ReadOnlyComposable get () = LocalColors . current val typography : Typography @Composable @ReadOnlyComposable get () = LocalTypography . current val shapes : Shapes @Composable @ReadOnlyComposable get () = LocalShapes . current } \u53ef\u4ee5\u53d1\u73b0\u5728\u83b7\u53d6\u5230\u5f53\u524d\u4e3b\u9898\u914d\u8272\u65f6\u4f7f\u7528\u7684\u662f MaterialTheme \u7c7b\u5355\u4f8b\u7684 colors \u5c5e\u6027\uff0c\u95f4\u63a5\u4f7f\u7528\u4e86 LocalColors\u3002 \u603b\u7ed3\u6765\u8bf4\uff0c\u6211\u4eec\u5728\u81ea\u5b9a\u4e49 Theme \u4f7f\u7528\u7684\u662f MaterialTheme \u51fd\u6570\u4e3a LocalColors \u8d4b\u503c\uff0c\u800c\u5728\u83b7\u53d6\u65f6\u4f7f\u7528\u7684\u662f MaterialTheme \u7c7b\u5355\u4f8b\uff0c\u95f4\u63a5\u4ece LocalColors \u4e2d\u83b7\u53d6\u5230\u503c\u3002\u6240\u4ee5 LocalColors \u5230\u5e95\u662f\u4f55\u65b9\u795e\u5723\u5462\uff1f internal val LocalColors = staticCompositionLocalOf { lightColors () } \u901a\u8fc7\u58f0\u660e\u53ef\u4ee5\u53d1\u73b0\u4ed6\u5b9e\u9645\u4e0a\u662f\u4e00\u4e2a CompositionLocal\uff0c\u5176\u521d\u59cb\u503c\u662f lightColors() \u8fd4\u56de\u7684 colors \u914d\u7f6e\u3002 MaterialTheme \u65b9\u6cd5\u4e2d\u901a\u8fc7 CompositionLocalProvider \u65b9\u6cd5\u4e3a\u6211\u4eec\u7684\u81ea\u5b9a\u4e49\u89c6\u56fe composable \u63d0\u4f9b\u4e86\u4e00\u4e9b CompositionLocal\uff0c\u5305\u542b\u4e86\u6240\u6709\u7684\u4e3b\u9898\u914d\u7f6e\u4fe1\u606f\u3002 2. CompositionLocal\u4ecb\u7ecd \u5f88\u591a\u65f6\u5019\u6211\u4eec\u9700\u8981\u5728 composable \u6811\u4e2d\u5171\u4eab\u4e00\u4e9b\u6570\u636e\uff08\u4f8b\u5982\u4e3b\u9898\u914d\u7f6e\uff09\uff0c\u4e00\u79cd\u6709\u6548\u65b9\u5f0f\u5c31\u662f\u901a\u8fc7\u663e\u5f0f\u53c2\u6570\u4f20\u9012\u7684\u65b9\u5f0f\u8fdb\u884c\u5b9e\u73b0\uff0c\u5f53\u53c2\u6570\u8d8a\u6765\u8d8a\u591a\u65f6\uff0ccomposable \u53c2\u6570\u5217\u8868\u4f1a\u53d8\u5f97\u8d8a\u6765\u8d8a\u81c3\u80bf\uff0c\u96be\u4ee5\u8fdb\u884c\u7ef4\u62a4\u3002\u5f53 composable \u9700\u8981\u5f7c\u6b64\u95f4\u4f20\u9012\u6570\u636e\uff0c\u5e76\u4e14\u5b9e\u73b0\u5404\u81ea\u7684\u79c1\u6709\u6027\u65f6\uff0c\u5982\u679c\u4ecd\u91c7\u7528\u663e\u5f0f\u53c2\u6570\u4f20\u9012\u7684\u65b9\u5f0f\u5219\u53ef\u80fd\u4f1a\u4ea7\u751f\u610f\u6599\u4e4b\u5916\u7684\u9ebb\u70e6\u4e0e\u5d29\u6e83\u3002 \u4e3a\u89e3\u51b3\u4e0a\u8ff0\u75db\u70b9\u95ee\u9898\uff0c Jetpack Compose \u63d0\u4f9b\u4e86 CompostionLocal \u7528\u6765\u5b8c\u6210 composable \u6811\u4e2d\u5171\u4eab\u6570\u636e\u65b9\u5f0f\u3002CompositionLocals \u662f\u5177\u6709\u5c42\u7ea7\u7684\uff0c\u53ef\u4ee5\u88ab\u9650\u5b9a\u5728\u4ee5\u67d0\u4e2a composable \u4f5c\u4e3a\u6839\u7ed3\u70b9\u7684\u5b50\u6811\u4e2d\uff0c\u5176\u9ed8\u8ba4\u4f1a\u5411\u4e0b\u4f20\u9012\u7684\uff0c\u5f53\u7136\u5f53\u524d\u5b50\u6811\u4e2d\u7684\u67d0\u4e2a composable \u53ef\u4ee5\u5bf9\u8be5 CompositionLocals \u8fdb\u884c\u8986\u76d6\uff0c\u4ece\u800c\u4f7f\u5f97\u65b0\u503c\u4f1a\u5728\u8fd9\u4e2a composable \u4e2d\u7ee7\u7eed\u5411\u4e0b\u4f20\u9012\u3002 Jetpack Compose \u4e3a\u6211\u4eec\u63d0\u4f9b\u4e86compositionLocalOf \u65b9\u6cd5\u7528\u4e8e\u521b\u5efa\u4e00\u4e2a CompostionLocal \u5b9e\u4f8b\u3002 import androidx.compose.runtime.compositionLocalOf var LocalString = compositionLocalOf { \"Jetpack Compose\" } \u5728 composable \u6811\u7684\u67d0\u4e2a\u5730\u65b9\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 CompositionLocalProvider \u65b9\u6cd5\u4e3a CompositionLocal \u63d0\u4f9b\u4e00\u4e2a\u503c\u3002\u901a\u5e38\u60c5\u51b5\u4e0b\u4f4d\u4e8e composable \u6811\u7684\u6839\u90e8\uff0c\u4f46\u4e5f\u53ef\u4ee5\u4f4d\u4e8e\u4efb\u4f55\u4f4d\u7f6e\uff0c\u8fd8\u53ef\u4ee5\u5728\u591a\u4e2a\u4f4d\u7f6e\u4f7f\u7528\uff0c\u4ee5\u8986\u76d6\u5b50\u6811\u80fd\u591f\u83b7\u53d6\u5230\u7684\u503c\u3002\u6211\u4eec\u7684\u793a\u4f8b\u9009\u62e9\u5728 Column \u6240\u5305\u542b\u7684 composable \u4e2d\u4f7f\u7528 CompositionLocalProvider\u3002 import androidx.compose.runtime.CompositionLocalProvider setContent { CustomColorTheme ( true ) { Column { CompositionLocalProvider ( LocalString provides \"Hello World\" ) { Text ( text = LocalString . current , color = Color . Green ) CompositionLocalProvider ( LocalString provides \"Ruger McCarthy\" ) { Text ( text = LocalString . current , color = Color . Blue ) } } Text ( text = LocalString . current , color = Color . Red ) } } } \u5b9e\u9645\u6548\u679c\u53ef\u4ee5\u770b\u5230\uff0c\u867d\u7136\u6240\u6709 composable \u5747\u4f9d\u8d56\u7684\u662f\u540c\u4e00\u4e2a CompositionLocal\uff0c\u800c\u5176\u83b7\u5f97\u5230\u7684\u5b9e\u9645\u7684\u503c\u5374\u662f\u4e0d\u4e00\u6837\u7684\u3002","title":"\u6df1\u5165\u7406\u89e3 MaterialTheme \u4e0e CompositionLocal"},{"location":"design/theme/understanding_material_theme/#1-materialtheme","text":"\u4e3a\u6df1\u5165\u7406\u89e3 MaterialTheme \u5de5\u4f5c\u539f\u7406\uff0c\u6211\u4eec\u9700\u8981\u8fdb\u5165\u6e90\u7801\u4e00\u63a2\u7a76\u7adf\u3002 \u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u6b64\u65f6\u4f20\u5165\u7684 content \u53c2\u6570\u5176\u5b9e\u662f\u58f0\u660e\u5728 Theme \u4e2d\u7684\u81ea\u5b9a\u4e49\u5e03\u5c40\u7cfb\u7edf\uff0c\u5176\u7c7b\u578b\u662f\u4e00\u4e2a\u5e26\u6709 Composable \u6ce8\u89e3\u7684 lambda (\u5bf9\u4e8e\u8fd9\u7c7b\u5e26\u6709 Composable \u7684 lambda \u7b80\u79f0\u4e3a composable )\u3002 \u6211\u4eec\u6240\u5173\u6ce8\u7684 colors \u88ab remember \u4fee\u9970\u540e\u8d4b\u503c\u4e3a rememberedColors\u3002\u5982\u679c MaterialTheme \u8fd9\u4e2a composable \u53d1\u751f recompose \u65f6\u4fbf\u4f1a\u68c0\u67e5 colors \u662f\u5426\u53d1\u751f\u4e86\u6539\u53d8\u4ece\u800c\u51b3\u5b9a\u66f4\u65b0\u3002 \u63a5\u4e0b\u6765\u4f7f\u7528 CompositionLocalProvider \u65b9\u6cd5\uff0c\u901a\u8fc7\u4e2d\u7f00 providers \u5c06 rememberedColors \u63d0\u4f9b\u7ed9\u4e86 LocalColors\u3002\u8ba9\u6211\u4eec\u56de\u5230\u81ea\u5b9a\u4e49\u89c6\u56fe\u4e2d\uff0c\u770b\u770b\u6211\u4eec\u662f\u5982\u4f55\u901a\u8fc7 MaterialTheme \u83b7\u53d6\u5230\u5f53\u524d\u4e3b\u9898\u914d\u8272\u7684\u3002 object MaterialTheme { val colors : Colors @Composable @ReadOnlyComposable get () = LocalColors . current val typography : Typography @Composable @ReadOnlyComposable get () = LocalTypography . current val shapes : Shapes @Composable @ReadOnlyComposable get () = LocalShapes . current } \u53ef\u4ee5\u53d1\u73b0\u5728\u83b7\u53d6\u5230\u5f53\u524d\u4e3b\u9898\u914d\u8272\u65f6\u4f7f\u7528\u7684\u662f MaterialTheme \u7c7b\u5355\u4f8b\u7684 colors \u5c5e\u6027\uff0c\u95f4\u63a5\u4f7f\u7528\u4e86 LocalColors\u3002 \u603b\u7ed3\u6765\u8bf4\uff0c\u6211\u4eec\u5728\u81ea\u5b9a\u4e49 Theme \u4f7f\u7528\u7684\u662f MaterialTheme \u51fd\u6570\u4e3a LocalColors \u8d4b\u503c\uff0c\u800c\u5728\u83b7\u53d6\u65f6\u4f7f\u7528\u7684\u662f MaterialTheme \u7c7b\u5355\u4f8b\uff0c\u95f4\u63a5\u4ece LocalColors \u4e2d\u83b7\u53d6\u5230\u503c\u3002\u6240\u4ee5 LocalColors \u5230\u5e95\u662f\u4f55\u65b9\u795e\u5723\u5462\uff1f internal val LocalColors = staticCompositionLocalOf { lightColors () } \u901a\u8fc7\u58f0\u660e\u53ef\u4ee5\u53d1\u73b0\u4ed6\u5b9e\u9645\u4e0a\u662f\u4e00\u4e2a CompositionLocal\uff0c\u5176\u521d\u59cb\u503c\u662f lightColors() \u8fd4\u56de\u7684 colors \u914d\u7f6e\u3002 MaterialTheme \u65b9\u6cd5\u4e2d\u901a\u8fc7 CompositionLocalProvider \u65b9\u6cd5\u4e3a\u6211\u4eec\u7684\u81ea\u5b9a\u4e49\u89c6\u56fe composable \u63d0\u4f9b\u4e86\u4e00\u4e9b CompositionLocal\uff0c\u5305\u542b\u4e86\u6240\u6709\u7684\u4e3b\u9898\u914d\u7f6e\u4fe1\u606f\u3002","title":"1. MaterialTheme \u662f\u600e\u4e48\u505a\u5230\u7684"},{"location":"design/theme/understanding_material_theme/#2-compositionlocal","text":"\u5f88\u591a\u65f6\u5019\u6211\u4eec\u9700\u8981\u5728 composable \u6811\u4e2d\u5171\u4eab\u4e00\u4e9b\u6570\u636e\uff08\u4f8b\u5982\u4e3b\u9898\u914d\u7f6e\uff09\uff0c\u4e00\u79cd\u6709\u6548\u65b9\u5f0f\u5c31\u662f\u901a\u8fc7\u663e\u5f0f\u53c2\u6570\u4f20\u9012\u7684\u65b9\u5f0f\u8fdb\u884c\u5b9e\u73b0\uff0c\u5f53\u53c2\u6570\u8d8a\u6765\u8d8a\u591a\u65f6\uff0ccomposable \u53c2\u6570\u5217\u8868\u4f1a\u53d8\u5f97\u8d8a\u6765\u8d8a\u81c3\u80bf\uff0c\u96be\u4ee5\u8fdb\u884c\u7ef4\u62a4\u3002\u5f53 composable \u9700\u8981\u5f7c\u6b64\u95f4\u4f20\u9012\u6570\u636e\uff0c\u5e76\u4e14\u5b9e\u73b0\u5404\u81ea\u7684\u79c1\u6709\u6027\u65f6\uff0c\u5982\u679c\u4ecd\u91c7\u7528\u663e\u5f0f\u53c2\u6570\u4f20\u9012\u7684\u65b9\u5f0f\u5219\u53ef\u80fd\u4f1a\u4ea7\u751f\u610f\u6599\u4e4b\u5916\u7684\u9ebb\u70e6\u4e0e\u5d29\u6e83\u3002 \u4e3a\u89e3\u51b3\u4e0a\u8ff0\u75db\u70b9\u95ee\u9898\uff0c Jetpack Compose \u63d0\u4f9b\u4e86 CompostionLocal \u7528\u6765\u5b8c\u6210 composable \u6811\u4e2d\u5171\u4eab\u6570\u636e\u65b9\u5f0f\u3002CompositionLocals \u662f\u5177\u6709\u5c42\u7ea7\u7684\uff0c\u53ef\u4ee5\u88ab\u9650\u5b9a\u5728\u4ee5\u67d0\u4e2a composable \u4f5c\u4e3a\u6839\u7ed3\u70b9\u7684\u5b50\u6811\u4e2d\uff0c\u5176\u9ed8\u8ba4\u4f1a\u5411\u4e0b\u4f20\u9012\u7684\uff0c\u5f53\u7136\u5f53\u524d\u5b50\u6811\u4e2d\u7684\u67d0\u4e2a composable \u53ef\u4ee5\u5bf9\u8be5 CompositionLocals \u8fdb\u884c\u8986\u76d6\uff0c\u4ece\u800c\u4f7f\u5f97\u65b0\u503c\u4f1a\u5728\u8fd9\u4e2a composable \u4e2d\u7ee7\u7eed\u5411\u4e0b\u4f20\u9012\u3002 Jetpack Compose \u4e3a\u6211\u4eec\u63d0\u4f9b\u4e86compositionLocalOf \u65b9\u6cd5\u7528\u4e8e\u521b\u5efa\u4e00\u4e2a CompostionLocal \u5b9e\u4f8b\u3002 import androidx.compose.runtime.compositionLocalOf var LocalString = compositionLocalOf { \"Jetpack Compose\" } \u5728 composable \u6811\u7684\u67d0\u4e2a\u5730\u65b9\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 CompositionLocalProvider \u65b9\u6cd5\u4e3a CompositionLocal \u63d0\u4f9b\u4e00\u4e2a\u503c\u3002\u901a\u5e38\u60c5\u51b5\u4e0b\u4f4d\u4e8e composable \u6811\u7684\u6839\u90e8\uff0c\u4f46\u4e5f\u53ef\u4ee5\u4f4d\u4e8e\u4efb\u4f55\u4f4d\u7f6e\uff0c\u8fd8\u53ef\u4ee5\u5728\u591a\u4e2a\u4f4d\u7f6e\u4f7f\u7528\uff0c\u4ee5\u8986\u76d6\u5b50\u6811\u80fd\u591f\u83b7\u53d6\u5230\u7684\u503c\u3002\u6211\u4eec\u7684\u793a\u4f8b\u9009\u62e9\u5728 Column \u6240\u5305\u542b\u7684 composable \u4e2d\u4f7f\u7528 CompositionLocalProvider\u3002 import androidx.compose.runtime.CompositionLocalProvider setContent { CustomColorTheme ( true ) { Column { CompositionLocalProvider ( LocalString provides \"Hello World\" ) { Text ( text = LocalString . current , color = Color . Green ) CompositionLocalProvider ( LocalString provides \"Ruger McCarthy\" ) { Text ( text = LocalString . current , color = Color . Blue ) } } Text ( text = LocalString . current , color = Color . Red ) } } } \u5b9e\u9645\u6548\u679c\u53ef\u4ee5\u770b\u5230\uff0c\u867d\u7136\u6240\u6709 composable \u5747\u4f9d\u8d56\u7684\u662f\u540c\u4e00\u4e2a CompositionLocal\uff0c\u800c\u5176\u83b7\u5f97\u5230\u7684\u5b9e\u9645\u7684\u503c\u5374\u662f\u4e0d\u4e00\u6837\u7684\u3002","title":"2. CompositionLocal\u4ecb\u7ecd"},{"location":"elements/alertdialog/","text":"Material Design AlertDialog 1. \u7b80\u5355\u4f7f\u7528 val openDialog = remember { mutableStateOf ( true ) } if ( openDialog . value ) { AlertDialog ( onDismissRequest = { // \u5f53\u7528\u6237\u70b9\u51fb\u5bf9\u8bdd\u6846\u4ee5\u5916\u7684\u5730\u65b9\u6216\u8005\u6309\u4e0b\u7cfb\u7edf\u8fd4\u56de\u952e\u5c06\u4f1a\u6267\u884c\u7684\u4ee3\u7801 openDialog . value = false }, title = { Text ( text = \"\u5f00\u542f\u4f4d\u7f6e\u670d\u52a1\" , fontWeight = FontWeight . W700 , style = MaterialTheme . typography . h6 ) }, text = { Text ( text = \"\u8fd9\u5c06\u610f\u5473\u7740\uff0c\u6211\u4eec\u4f1a\u7ed9\u60a8\u63d0\u4f9b\u7cbe\u51c6\u7684\u4f4d\u7f6e\u670d\u52a1\uff0c\u5e76\u4e14\u60a8\u5c06\u63a5\u53d7\u5173\u4e8e\u60a8\u8ba2\u9605\u7684\u4f4d\u7f6e\u4fe1\u606f\" , fontSize = 16. sp ) }, confirmButton = { TextButton ( onClick = { openDialog . value = false }, ) { Text ( \"\u786e\u8ba4\" , fontWeight = FontWeight . W700 , style = MaterialTheme . typography . button ) } }, dismissButton = { TextButton ( onClick = { openDialog . value = false } ) { Text ( \"\u53d6\u6d88\" , fontWeight = FontWeight . W700 , style = MaterialTheme . typography . button ) } } ) } \u5982\u679c\u4e00\u5207\u987a\u5229\uff0c\u8fd0\u884c\u7a0b\u5e8f\uff0c\u60a8\u5c06\u4f1a\u770b\u5230\uff1a AlertDialog \u5c06\u6839\u636e\u53ef\u7528\u7a7a\u95f4\u6765\u5b9a\u4f4d\u5176\u6309\u94ae\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u5b83\u5c06\u5c1d\u8bd5\u5c06\u5b83\u4eec\u6c34\u5e73\u5730\u653e\u5728\u5f7c\u6b64\u7684\u65c1\u8fb9\uff0c\u5982\u679c\u6ca1\u6709\u8db3\u591f\u7684\u7a7a\u95f4\uff0c\u5219\u9000\u56de\u5230\u6c34\u5e73\u653e\u7f6e\u3002\u8fd8\u6709\u53e6\u4e00\u4e2a\u7248\u672c\u7684 Composable\uff0c\u5b83\u6709\u4e00\u4e2a\u6309\u94ae\u69fd\uff0c\u53ef\u4ee5\u63d0\u4f9b\u81ea\u5b9a\u4e49\u7684\u6309\u94ae\u5e03\u5c40 @Composable fun AlertDialog ( onDismissRequest : () -> Unit , buttons : () -> Unit , modifier : Modifier = Modifier , title : () -> Unit = null , text : () -> Unit = null , shape : Shape = MaterialTheme . shapes . medium , backgroundColor : Color = MaterialTheme . colors . surface , contentColor : Color = contentColorFor ( backgroundColor ), properties : DialogProperties = DialogProperties () ): @Composable Unit \u7b80\u5355\u7684\u4e00\u4e2a\u5b9e\u73b0\u4ee3\u7801\uff1a val openDialog = remember { mutableStateOf ( true ) } if ( openDialog . value ) { AlertDialog ( onDismissRequest = { openDialog . value = false }, title = { Text ( text = \"\u5f00\u542f\u4f4d\u7f6e\u670d\u52a1\" , fontWeight = FontWeight . W700 , style = MaterialTheme . typography . h6 ) }, text = { Text ( text = \"\u8fd9\u5c06\u610f\u5473\u7740\uff0c\u6211\u4eec\u4f1a\u7ed9\u60a8\u63d0\u4f9b\u7cbe\u51c6\u7684\u4f4d\u7f6e\u670d\u52a1\uff0c\u5e76\u4e14\u60a8\u5c06\u63a5\u53d7\u5173\u4e8e\u60a8\u8ba2\u9605\u7684\u4f4d\u7f6e\u4fe1\u606f\" , fontSize = 16. sp ) }, buttons = { Row ( modifier = Modifier . padding ( all = 8. dp ), horizontalArrangement = Arrangement . Center ) { Button ( modifier = Modifier . fillMaxWidth (), onClick = { openDialog . value = false } ) { Text ( \"\u5fc5\u987b\u63a5\u53d7\uff01\" ) } } } ) } 2. \u66f4\u591a AlertDialog \u53c2\u6570\u8be6\u60c5","title":"AlertDialog"},{"location":"elements/alertdialog/#1","text":"val openDialog = remember { mutableStateOf ( true ) } if ( openDialog . value ) { AlertDialog ( onDismissRequest = { // \u5f53\u7528\u6237\u70b9\u51fb\u5bf9\u8bdd\u6846\u4ee5\u5916\u7684\u5730\u65b9\u6216\u8005\u6309\u4e0b\u7cfb\u7edf\u8fd4\u56de\u952e\u5c06\u4f1a\u6267\u884c\u7684\u4ee3\u7801 openDialog . value = false }, title = { Text ( text = \"\u5f00\u542f\u4f4d\u7f6e\u670d\u52a1\" , fontWeight = FontWeight . W700 , style = MaterialTheme . typography . h6 ) }, text = { Text ( text = \"\u8fd9\u5c06\u610f\u5473\u7740\uff0c\u6211\u4eec\u4f1a\u7ed9\u60a8\u63d0\u4f9b\u7cbe\u51c6\u7684\u4f4d\u7f6e\u670d\u52a1\uff0c\u5e76\u4e14\u60a8\u5c06\u63a5\u53d7\u5173\u4e8e\u60a8\u8ba2\u9605\u7684\u4f4d\u7f6e\u4fe1\u606f\" , fontSize = 16. sp ) }, confirmButton = { TextButton ( onClick = { openDialog . value = false }, ) { Text ( \"\u786e\u8ba4\" , fontWeight = FontWeight . W700 , style = MaterialTheme . typography . button ) } }, dismissButton = { TextButton ( onClick = { openDialog . value = false } ) { Text ( \"\u53d6\u6d88\" , fontWeight = FontWeight . W700 , style = MaterialTheme . typography . button ) } } ) } \u5982\u679c\u4e00\u5207\u987a\u5229\uff0c\u8fd0\u884c\u7a0b\u5e8f\uff0c\u60a8\u5c06\u4f1a\u770b\u5230\uff1a AlertDialog \u5c06\u6839\u636e\u53ef\u7528\u7a7a\u95f4\u6765\u5b9a\u4f4d\u5176\u6309\u94ae\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u5b83\u5c06\u5c1d\u8bd5\u5c06\u5b83\u4eec\u6c34\u5e73\u5730\u653e\u5728\u5f7c\u6b64\u7684\u65c1\u8fb9\uff0c\u5982\u679c\u6ca1\u6709\u8db3\u591f\u7684\u7a7a\u95f4\uff0c\u5219\u9000\u56de\u5230\u6c34\u5e73\u653e\u7f6e\u3002\u8fd8\u6709\u53e6\u4e00\u4e2a\u7248\u672c\u7684 Composable\uff0c\u5b83\u6709\u4e00\u4e2a\u6309\u94ae\u69fd\uff0c\u53ef\u4ee5\u63d0\u4f9b\u81ea\u5b9a\u4e49\u7684\u6309\u94ae\u5e03\u5c40 @Composable fun AlertDialog ( onDismissRequest : () -> Unit , buttons : () -> Unit , modifier : Modifier = Modifier , title : () -> Unit = null , text : () -> Unit = null , shape : Shape = MaterialTheme . shapes . medium , backgroundColor : Color = MaterialTheme . colors . surface , contentColor : Color = contentColorFor ( backgroundColor ), properties : DialogProperties = DialogProperties () ): @Composable Unit \u7b80\u5355\u7684\u4e00\u4e2a\u5b9e\u73b0\u4ee3\u7801\uff1a val openDialog = remember { mutableStateOf ( true ) } if ( openDialog . value ) { AlertDialog ( onDismissRequest = { openDialog . value = false }, title = { Text ( text = \"\u5f00\u542f\u4f4d\u7f6e\u670d\u52a1\" , fontWeight = FontWeight . W700 , style = MaterialTheme . typography . h6 ) }, text = { Text ( text = \"\u8fd9\u5c06\u610f\u5473\u7740\uff0c\u6211\u4eec\u4f1a\u7ed9\u60a8\u63d0\u4f9b\u7cbe\u51c6\u7684\u4f4d\u7f6e\u670d\u52a1\uff0c\u5e76\u4e14\u60a8\u5c06\u63a5\u53d7\u5173\u4e8e\u60a8\u8ba2\u9605\u7684\u4f4d\u7f6e\u4fe1\u606f\" , fontSize = 16. sp ) }, buttons = { Row ( modifier = Modifier . padding ( all = 8. dp ), horizontalArrangement = Arrangement . Center ) { Button ( modifier = Modifier . fillMaxWidth (), onClick = { openDialog . value = false } ) { Text ( \"\u5fc5\u987b\u63a5\u53d7\uff01\" ) } } } ) }","title":"1. \u7b80\u5355\u4f7f\u7528"},{"location":"elements/alertdialog/#2","text":"AlertDialog \u53c2\u6570\u8be6\u60c5","title":"2. \u66f4\u591a"},{"location":"elements/button/","text":"Compose \u7684 Button \u662f\u57fa\u4e8e Material Design \u5b9e\u73b0\u7684\uff0c\u548c\u4f20\u7edf\u7684 XML Button \u622a\u7136\u4e0d\u540c \u4ee5\u4e0b\u662f\u7b80\u5355\u521b\u5efa\u4e00\u4e2a\u9ed8\u8ba4\u7684 Button \u4ee3\u7801\uff1a import androidx.compose.material.Button import androidx.compose.material.Text @Composable fun ButtonDemo () { Button ( onClick = { /*TODO*/ }) { Text ( \"\u786e\u8ba4\" ) } } \u6548\u679c\u5982\u56fe\u6240\u793a\uff1a \u4e5f\u8bb8\u60a8\u60f3\u6dfb\u52a0\u56fe\u6807\u5728\u6587\u5b57\u7684\u65c1\u8fb9\uff0c\u4e5f\u53ea\u9700\uff1a @Composable fun ButtonDemo () { Button ( onClick = { /*TODO*/ }) { Icon ( // Material \u5e93\u4e2d\u7684\u56fe\u6807\uff0c\u6709 Filled, Outlined, Rounded, Sharp, Two Tone \u7b49 Icons . Filled . Favorite , contentDescription = null , modifier = Modifier . size ( ButtonDefaults . IconSize ) ) // \u6dfb\u52a0\u95f4\u9694 Spacer ( Modifier . size ( ButtonDefaults . IconSpacing )) Text ( \"\u559c\u6b22\" ) } } \u66f4\u591a Button \u53c2\u6570\u8be6\u60c5","title":"Button"},{"location":"elements/button/#_1","text":"Button \u53c2\u6570\u8be6\u60c5","title":"\u66f4\u591a"},{"location":"elements/card/","text":"Card \u662f Compose \u4e2d\u4e00\u4e2a\u5e03\u5c40\u7ec4\u4ef6\uff0c\u6211\u4eec\u7528\u5b83\u53ef\u4ee5\u6765\u521b\u9020\u51fa\u4e00\u4e9b\u597d\u770b\u7684\u754c\u9762 class MainActivity : ComponentActivity () { override fun onCreate ( savedInstanceState : Bundle?) { super . onCreate ( savedInstanceState ) setContent { ExamplesTheme () { // \u548c\u6bcf\u4e2a\u4eba\u7684\u9879\u76ee\u540d\u4e0d\u540c CardDemo () } } } } @Composable fun CardDemo () { Card ( modifier = Modifier . fillMaxWidth () . padding ( 15. dp ) // \u5916\u8fb9\u8ddd . clickable { }, // \u8bbe\u7f6e\u70b9\u51fb\u6ce2\u7eb9\u6548\u679c\uff0c\u6ce8\u610f\u5982\u679c CardDemo() \u51fd\u6570\u4e0d\u5728 ExamplesTheme() {} \u4e0b\u8c03\u7528 // \u5c06\u65e0\u6cd5\u663e\u793a\u6ce2\u7eb9\u6548\u679c elevation = 10. dp // \u8bbe\u7f6e\u9634\u5f71 ) { Column ( modifier = Modifier . padding ( 15. dp ) // \u5185\u8fb9\u8ddd ) { Text ( buildAnnotatedString { append ( \"\u6b22\u8fce\u6765\u5230 \" ) withStyle ( style = SpanStyle ( fontWeight = FontWeight . W900 , color = Color ( 0 xFF4552B8 )) ) { append ( \"Jetpack Compose \u535a\u7269\u9986\" ) } } ) Text ( buildAnnotatedString { append ( \"\u4f60\u73b0\u5728\u89c2\u770b\u7684\u7ae0\u8282\u662f \" ) withStyle ( style = SpanStyle ( fontWeight = FontWeight . W900 )) { append ( \"Card\" ) } } ) } } } \u66f4\u591a Card \u53c2\u6570\u8be6\u60c5","title":"Card"},{"location":"elements/card/#_1","text":"Card \u53c2\u6570\u8be6\u60c5","title":"\u66f4\u591a"},{"location":"elements/floatingactionbutton/","text":"@OptIn ( markerClass = [ ExperimentalMaterialApi ] ) @Composable fun FloatingActionButton ( onClick : () -> Unit , modifier : Modifier = Modifier , interactionSource : MutableInteractionSource = remember { MutableInteractionSource () }, shape : Shape = MaterialTheme . shapes . small . copy ( CornerSize ( percent = 50 )), backgroundColor : Color = MaterialTheme . colors . secondary , contentColor : Color = contentColorFor ( backgroundColor ), elevation : FloatingActionButtonElevation = FloatingActionButtonDefaults . elevation (), content : () -> Unit ): @OptIn ( markerClass = [ ExperimentalMaterialApi ] ) @Composable Unit 1. \u6982\u8ff0 Material Design floating action button \u4e00\u4e2a FloatActionButton \uff08FAB\uff09\u4ee3\u8868\u4e00\u4e2a\u5c4f\u5e55\u7684\u4e3b\u8981\u884c\u4e3a\u3002 FAB \u901a\u5e38\u548c\u4e00\u4e2a Icon \u4e00\u8d77\u4f7f\u7528 import androidx.compose.material.FloatingActionButton import androidx.compose.material.Icon FloatingActionButton ( onClick = { /*do something*/ }) { Icon ( Icons . Filled . Favorite , contentDescription = \"Localized description\" ) } \u53ef\u4ee5\u67e5\u9605 ExtendedFloatingActionButton \uff0c\u5b83\u662f\u4e00\u4e2a\u5305\u542b\u6587\u672c\u548c\u53ef\u9009\u56fe\u6807\u7684\u6269\u5c55 FAB \u3002","title":"FloatingActionButton"},{"location":"elements/floatingactionbutton/#1","text":"Material Design floating action button \u4e00\u4e2a FloatActionButton \uff08FAB\uff09\u4ee3\u8868\u4e00\u4e2a\u5c4f\u5e55\u7684\u4e3b\u8981\u884c\u4e3a\u3002 FAB \u901a\u5e38\u548c\u4e00\u4e2a Icon \u4e00\u8d77\u4f7f\u7528 import androidx.compose.material.FloatingActionButton import androidx.compose.material.Icon FloatingActionButton ( onClick = { /*do something*/ }) { Icon ( Icons . Filled . Favorite , contentDescription = \"Localized description\" ) } \u53ef\u4ee5\u67e5\u9605 ExtendedFloatingActionButton \uff0c\u5b83\u662f\u4e00\u4e2a\u5305\u542b\u6587\u672c\u548c\u53ef\u9009\u56fe\u6807\u7684\u6269\u5c55 FAB \u3002","title":"1. \u6982\u8ff0"},{"location":"elements/icon/","text":"\u4e00\u4e2a\u56fe\u6807\u7ec4\u4ef6\uff0c\u4f7f\u7528 tint \u53ef\u4ee5\u4fee\u6539 Icon \u7684\u989c\u8272\uff0c\u9ed8\u8ba4\u4e3a LocalContentColor \u3002\u5bf9\u4e8e\u4e00\u4e2a\u53ef\u70b9\u51fb\u7684\u56fe\u6807\uff0c\u8bf7\u67e5\u9605 IconButton \u3002 Row { Icon ( Icons . Filled . ArrowBack , contentDescription = null ) Icon ( Icons . Filled . ArrowBack , contentDescription = null , tint = Color . Gray ) Icon ( Icons . Filled . ArrowBack , contentDescription = null , tint = Color . Red ) Icon ( Icons . Filled . ArrowBack , contentDescription = null , tint = Color . DarkGray ) Icon ( Icons . Filled . ArrowBack , contentDescription = null , tint = Color . Magenta ) Icon ( Icons . Filled . ArrowBack , contentDescription = null , tint = Color . Yellow ) Icon ( Icons . Filled . ArrowBack , contentDescription = null , tint = Color . Cyan ) }","title":"Icon"},{"location":"elements/iconbutton/","text":"IconButton \u53ef\u4ee5\u5e2e\u52a9\u6211\u4eec\u751f\u6210\u4e00\u4e2a\u53ef\u70b9\u51fb\u7684\u56fe\u6807\u6309\u94ae IconButton \u662f\u4e00\u4e2a\u53ef\u70b9\u51fb\u7684\u56fe\u6807\uff0c\u7528\u4e8e\u8868\u793a\u52a8\u4f5c\uff08\u590d\u5236\uff0c\u7c98\u8d34\uff0c\u4fdd\u5b58\uff0c\u7b49\u7b49\uff09\u3002 IconButton \u7684\u6574\u4f53\u6700\u5c0f\u89e6\u6478\u76ee\u6807\u5c3a\u5bf8\u4e3a 48 x 48dp \uff0c\u4ee5\u6ee1\u8db3\u65e0\u969c\u788d\u51c6\u5219\u3002 content \u4f1a\u5728 IconButton \u5185\u5c45\u4e2d\u3002 \u8fd9\u4e2a\u7ec4\u4ef6\u901a\u5e38\u7528\u4e8e\u5e94\u7528\u680f\u5185\u7684\u5bfc\u822a\u56fe\u6807/\u52a8\u4f5c\u3002 content \u901a\u5e38\u5e94\u8be5\u662f\u4e00\u4e2a\u56fe\u6807\uff0c\u4f7f\u7528 androidx.compose.material.icons.Icons \u4e2d\u7684\u4e00\u4e2a\u56fe\u6807\u3002\u5982\u679c\u4f7f\u7528\u81ea\u5b9a\u4e49\u56fe\u6807\uff0c\u8bf7\u6ce8\u610f\u5185\u90e8\u56fe\u6807\u7684\u5178\u578b\u5c3a\u5bf8\u662f 24 x 24 dp \u3002 @Composable fun IconButtonDemo () { Row { IconButton ( onClick = { /*TODO*/ }) { Icon ( Icons . Filled . Search , null ) } IconButton ( onClick = { /*TODO*/ }) { Icon ( Icons . Filled . ArrowBack , null ) } IconButton ( onClick = { /*TODO*/ }) { Icon ( Icons . Filled . Done , null ) } } } 1. \u53d6\u6d88\u6ce2\u7eb9 \u6709\u4e9b\u65f6\u5019\u6211\u4eec\u60f3\u8981\u53d6\u6d88\u6309\u94ae\u70b9\u51fb\u6240\u4ea7\u751f\u7684\u6ce2\u7eb9\u8981\u600e\u4e48\u529e\uff1f IconButton \u7684\u6e90\u7801\u4e2d\u5176\u5b9e\u5c06 Box \u91cc\u7684 modifier.clickable \u53c2\u6570 Indication \u8bbe\u7f6e\u6210\u6ce2\u7eb9\u4e86 @Composable fun IconButton ( onClick : () -> Unit , modifier : Modifier = Modifier , enabled : Boolean = true , interactionSource : MutableInteractionSource = remember { MutableInteractionSource () }, content : @Composable () -> Unit ) { Box ( modifier = modifier . clickable ( onClick = onClick , enabled = enabled , role = Role . Button , interactionSource = interactionSource , indication = rememberRipple ( bounded = false , radius = RippleRadius ) ) . then ( IconButtonSizeModifier ), contentAlignment = Alignment . Center ) { content () } } \u90a3\u6211\u4eec\u53ea\u9700\u8981\u590d\u5236\u6e90\u7801\u7684\u4ee3\u7801\u6dfb\u52a0\u5230\u81ea\u5df1\u7684\u9879\u76ee\u4e2d\uff0c\u5e76\u4e14\u5c06 indication \u8bbe\u7f6e\u4e3a null \u5c31\u597d\u4e86 @Composable fun MyIconButton ( onClick : () -> Unit , modifier : Modifier = Modifier , enabled : Boolean = true , interactionSource : MutableInteractionSource = remember { MutableInteractionSource () }, content : @Composable () -> Unit ) { // \u8fd9\u4e5f\u662f\u6e90\u7801\u7684\u4e00\u90e8\u5206 val IconButtonSizeModifier = Modifier . size ( 48. dp ) Box ( modifier = modifier . clickable ( onClick = onClick , enabled = enabled , role = Role . Button , interactionSource = interactionSource , indication = null ) . then ( IconButtonSizeModifier ), contentAlignment = Alignment . Center ) { content () } } \u5173\u4e8e\u5b9e\u73b0\u8fd9\u4e2a\u6309\u94ae\u7684\u52a8\u753b\u6548\u679c\u53ef\u4ee5\u5728 \u8fd9\u91cc \u627e\u5230","title":"IconButton"},{"location":"elements/iconbutton/#1","text":"\u6709\u4e9b\u65f6\u5019\u6211\u4eec\u60f3\u8981\u53d6\u6d88\u6309\u94ae\u70b9\u51fb\u6240\u4ea7\u751f\u7684\u6ce2\u7eb9\u8981\u600e\u4e48\u529e\uff1f IconButton \u7684\u6e90\u7801\u4e2d\u5176\u5b9e\u5c06 Box \u91cc\u7684 modifier.clickable \u53c2\u6570 Indication \u8bbe\u7f6e\u6210\u6ce2\u7eb9\u4e86 @Composable fun IconButton ( onClick : () -> Unit , modifier : Modifier = Modifier , enabled : Boolean = true , interactionSource : MutableInteractionSource = remember { MutableInteractionSource () }, content : @Composable () -> Unit ) { Box ( modifier = modifier . clickable ( onClick = onClick , enabled = enabled , role = Role . Button , interactionSource = interactionSource , indication = rememberRipple ( bounded = false , radius = RippleRadius ) ) . then ( IconButtonSizeModifier ), contentAlignment = Alignment . Center ) { content () } } \u90a3\u6211\u4eec\u53ea\u9700\u8981\u590d\u5236\u6e90\u7801\u7684\u4ee3\u7801\u6dfb\u52a0\u5230\u81ea\u5df1\u7684\u9879\u76ee\u4e2d\uff0c\u5e76\u4e14\u5c06 indication \u8bbe\u7f6e\u4e3a null \u5c31\u597d\u4e86 @Composable fun MyIconButton ( onClick : () -> Unit , modifier : Modifier = Modifier , enabled : Boolean = true , interactionSource : MutableInteractionSource = remember { MutableInteractionSource () }, content : @Composable () -> Unit ) { // \u8fd9\u4e5f\u662f\u6e90\u7801\u7684\u4e00\u90e8\u5206 val IconButtonSizeModifier = Modifier . size ( 48. dp ) Box ( modifier = modifier . clickable ( onClick = onClick , enabled = enabled , role = Role . Button , interactionSource = interactionSource , indication = null ) . then ( IconButtonSizeModifier ), contentAlignment = Alignment . Center ) { content () } } \u5173\u4e8e\u5b9e\u73b0\u8fd9\u4e2a\u6309\u94ae\u7684\u52a8\u753b\u6548\u679c\u53ef\u4ee5\u5728 \u8fd9\u91cc \u627e\u5230","title":"1. \u53d6\u6d88\u6ce2\u7eb9"},{"location":"elements/image/","text":"\u6ce8\u610f \u76ee\u524d\u5728 Compose \u4e2d Image \u6709\u4e09\u79cd\uff0c\u8be6\u60c5\u53ef\u5148\u5728 \u5e95\u90e8 \u627e\u5230 Image \u53ef\u4ee5\u5e2e\u6211\u4eec\u52a0\u8f7d\u4e00\u5f20\u56fe\u7247\u3002 @Composable fun ImageDemo () { Image ( painter = painterResource ( id = R . drawable . wallpaper ), contentDescription = null ) } 1. \u56fe\u7247\u5927\u5c0f \u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 Modifier.size() \u6765\u8bbe\u7f6e\u56fe\u7247\u5927\u5c0f\u3002 @Composable fun ImageDemo () { Image ( painter = painterResource ( id = R . drawable . wallpaper ), contentDescription = null , modifier = Modifier . size ( 350. dp ) ) } 2. \u56fe\u7247\u5f62\u72b6 \u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 Surface \u6765\u5e2e\u52a9\u6211\u4eec\u8bbe\u7f6e\u5f62\u72b6\u3002 @Composable fun ImageDemo () { Surface ( shape = CircleShape ) { Image ( painter = painterResource ( id = R . drawable . wallpaper ), contentDescription = null , modifier = Modifier . size ( 350. dp ) ) } } \u662f\u4e0d\u662f\u6709\u4e00\u70b9\u5c0f\u95ee\u9898\uff1f\u4f3c\u4e4e\u53ea\u6709\u5de6\u53f3\u4e24\u8fb9\u53d8\u6210\u4e86\u5706\u5f62\uff0c\u800c\u4e0a\u4e0b\u5e76\u6ca1\u6709\u3002 \u8fd9\u662f\u56e0\u4e3a Image \u4e2d\u6e90\u7801\u7684 contentScale \u53c2\u6570\u9ed8\u8ba4\u662f ContentScale.Fit \uff0c \u4e5f\u5c31\u662f\u4fdd\u6301\u56fe\u7247\u7684\u5bbd\u9ad8\u6bd4\uff0c\u7f29\u5c0f\u5230\u53ef\u4ee5\u5b8c\u6574\u663e\u793a\u6574\u5f20\u56fe\u7247\u3002 \u800c ContentScale.Crop \u4e5f\u662f\u4fdd\u6301\u5bbd\u9ad8\u6bd4\uff0c\u4f46\u662f\u5c3d\u91cf\u8ba9\u5bbd\u5ea6 \u6216\u8005 \u9ad8\u5ea6\u5b8c\u6574\u7684\u5360\u6ee1\u3002 \u6240\u4ee5\u6211\u4eec\u5c06 contentScale \u8bbe\u7f6e\u6210 ContentScale.Crop \u3002 @Composable fun ImageDemo () { Surface ( shape = CircleShape ) { Image ( painter = painterResource ( id = R . drawable . wallpaper ), contentDescription = null , modifier = Modifier . size ( 350. dp ), contentScale = ContentScale . Crop ) } } 3. \u56fe\u50cf\u8fb9\u6846 \u4f60\u53ef\u4ee5\u5229\u7528 Surface \u4e2d\u7684 border \u53c2\u6570\u6765\u8bbe\u7f6e\u8fb9\u6846\u3002 @Composable fun ImageDemo () { Surface ( shape = CircleShape , border = BorderStroke ( 5. dp , Color . Gray ) ) { Image ( painter = painterResource ( id = R . drawable . wallpaper ), contentDescription = null , modifier = Modifier . size ( 350. dp ), contentScale = ContentScale . Crop ) } } 4. \u66f4\u591a Image \u53c2\u6570\u8be6\u60c5 Ucrop \u4e00\u4e2a\u56fe\u7247\u88c1\u526a\u5e93 Surface \u8be6\u60c5","title":"Image"},{"location":"elements/image/#1","text":"\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 Modifier.size() \u6765\u8bbe\u7f6e\u56fe\u7247\u5927\u5c0f\u3002 @Composable fun ImageDemo () { Image ( painter = painterResource ( id = R . drawable . wallpaper ), contentDescription = null , modifier = Modifier . size ( 350. dp ) ) }","title":"1. \u56fe\u7247\u5927\u5c0f"},{"location":"elements/image/#2","text":"\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 Surface \u6765\u5e2e\u52a9\u6211\u4eec\u8bbe\u7f6e\u5f62\u72b6\u3002 @Composable fun ImageDemo () { Surface ( shape = CircleShape ) { Image ( painter = painterResource ( id = R . drawable . wallpaper ), contentDescription = null , modifier = Modifier . size ( 350. dp ) ) } } \u662f\u4e0d\u662f\u6709\u4e00\u70b9\u5c0f\u95ee\u9898\uff1f\u4f3c\u4e4e\u53ea\u6709\u5de6\u53f3\u4e24\u8fb9\u53d8\u6210\u4e86\u5706\u5f62\uff0c\u800c\u4e0a\u4e0b\u5e76\u6ca1\u6709\u3002 \u8fd9\u662f\u56e0\u4e3a Image \u4e2d\u6e90\u7801\u7684 contentScale \u53c2\u6570\u9ed8\u8ba4\u662f ContentScale.Fit \uff0c \u4e5f\u5c31\u662f\u4fdd\u6301\u56fe\u7247\u7684\u5bbd\u9ad8\u6bd4\uff0c\u7f29\u5c0f\u5230\u53ef\u4ee5\u5b8c\u6574\u663e\u793a\u6574\u5f20\u56fe\u7247\u3002 \u800c ContentScale.Crop \u4e5f\u662f\u4fdd\u6301\u5bbd\u9ad8\u6bd4\uff0c\u4f46\u662f\u5c3d\u91cf\u8ba9\u5bbd\u5ea6 \u6216\u8005 \u9ad8\u5ea6\u5b8c\u6574\u7684\u5360\u6ee1\u3002 \u6240\u4ee5\u6211\u4eec\u5c06 contentScale \u8bbe\u7f6e\u6210 ContentScale.Crop \u3002 @Composable fun ImageDemo () { Surface ( shape = CircleShape ) { Image ( painter = painterResource ( id = R . drawable . wallpaper ), contentDescription = null , modifier = Modifier . size ( 350. dp ), contentScale = ContentScale . Crop ) } }","title":"2. \u56fe\u7247\u5f62\u72b6"},{"location":"elements/image/#3","text":"\u4f60\u53ef\u4ee5\u5229\u7528 Surface \u4e2d\u7684 border \u53c2\u6570\u6765\u8bbe\u7f6e\u8fb9\u6846\u3002 @Composable fun ImageDemo () { Surface ( shape = CircleShape , border = BorderStroke ( 5. dp , Color . Gray ) ) { Image ( painter = painterResource ( id = R . drawable . wallpaper ), contentDescription = null , modifier = Modifier . size ( 350. dp ), contentScale = ContentScale . Crop ) } }","title":"3. \u56fe\u50cf\u8fb9\u6846"},{"location":"elements/image/#4","text":"Image \u53c2\u6570\u8be6\u60c5 Ucrop \u4e00\u4e2a\u56fe\u7247\u88c1\u526a\u5e93 Surface \u8be6\u60c5","title":"4. \u66f4\u591a"},{"location":"elements/slider/","text":"Slider \u5141\u8bb8\u7528\u6237\u4ece\u4e00\u5b9a\u8303\u56f4\u7684\u6570\u503c\u4e2d\u8fdb\u884c\u9009\u62e9\u3002 Slider \u53cd\u6620\u4e86\u4e00\u4e2a\u6cbf\u6761\u7684\u6570\u503c\u8303\u56f4\uff0c\u7528\u6237\u53ef\u4ee5\u4ece\u4e2d\u9009\u62e9\u4e00\u4e2a\u5355\u4e00\u7684\u6570\u503c\u3002\u5b83\u4eec\u662f\u8c03\u6574\u97f3\u91cf\u3001\u4eae\u5ea6\u6216\u5e94\u7528\u56fe\u50cf\u8fc7\u6ee4\u5668\u7b49\u8bbe\u7f6e\u7684\u7406\u60f3\u9009\u62e9\u3002 Material Design Slider \u6765\u770b\u770b\u4e00\u4e2a\u7b80\u5355\u7684\u7528\u6cd5\uff1a var progress by remember { mutableStateOf ( 0f )} Slider ( value = progress , colors = SliderDefaults . colors ( thumbColor = Color . White , // \u5706\u5708\u7684\u989c\u8272 activeTrackColor = Color ( 0 xFF0079D3 ) ), onValueChange = { progress = it }, ) @Composable fun colors ( thumbColor : Color = MaterialTheme . colors . primary , disabledThumbColor : Color = MaterialTheme . colors . onSurface . copy ( alpha = ContentAlpha . disabled ) . compositeOver ( MaterialTheme . colors . surface ), activeTrackColor : Color = MaterialTheme . colors . primary , inactiveTrackColor : Color = activeTrackColor . copy ( alpha = InactiveTrackAlpha ), disabledActiveTrackColor : Color = MaterialTheme . colors . onSurface . copy ( alpha = DisabledActiveTrackAlpha ), disabledInactiveTrackColor : Color = disabledActiveTrackColor . copy ( alpha = DisabledInactiveTrackAlpha ), activeTickColor : Color = contentColorFor ( activeTrackColor ). copy ( alpha = TickAlpha ), inactiveTickColor : Color = activeTrackColor . copy ( alpha = TickAlpha ), disabledActiveTickColor : Color = activeTickColor . copy ( alpha = DisabledTickAlpha ), disabledInactiveTickColor : Color = disabledInactiveTrackColor . copy ( alpha = DisabledTickAlpha ) ) // \u6ed1\u6761\u672a\u7ecf\u8fc7\u90e8\u5206\u7684\u9ed8\u8ba4 alpha \u503c const val InactiveTrackAlpha = 0.24f // \u5f53\u6ed1\u6761\u88ab\u7981\u7528\u7684\u72b6\u6001\u4e0b\u5df2\u7ecf\u8fc7\u90e8\u5206\u7684\u9ed8\u8ba4 alpha \u503c const val DisabledInactiveTrackAlpha = 0.12f // \u5f53\u6ed1\u6761\u88ab\u7981\u7528\u7684\u72b6\u6001\u4e0b\u672a\u7ecf\u8fc7\u90e8\u5206\u7684\u9ed8\u8ba4 alpha \u503c const val DisabledActiveTrackAlpha = 0.32f // \u5728\u6ed1\u6761\u4e0a\u65b9\u663e\u793a\u7684\u523b\u5ea6\u7684\u9ed8\u8ba4\u7684 alpha \u503c const val TickAlpha = 0.54f // \u5f53\u523b\u5ea6\u7ebf\u88ab\u7981\u7528\u65f6\uff0c\u9ed8\u8ba4\u7684 alpha \u503c const val DisabledTickAlpha = 0.12f \u4ece\u6e90\u7801\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u77e5\u9053\uff0c\u8bbe\u7f6e\u6ed1\u6761\u989c\u8272\u7684\u662f activeTrackColor , \u800c\u6ed1\u6761\u4e2d\u672a\u7ecf\u8fc7\u7684\u5730\u65b9\u662f inactiveTrackColor \uff0c\u5b83\u5c06 activeTrackColor \u590d\u5236\uff0c\u5e76\u4e14\u8bbe\u7f6e\u4e86 0.24f \u7684\u900f\u660e\u5ea6 \u6240\u4ee5\u4e00\u822c\u6765\u8bf4\uff0c\u6211\u4eec\u53ea\u9700\u8981\u8bbe\u7f6e activeTrackColor \u7684\u503c\u5c31\u53ef\u4ee5\u6539\u53d8\u6ed1\u6761\u7684\u603b\u4f53\u989c\u8272\uff08\u7ecf\u8fc7\u548c\u672a\u7ecf\u8fc7\u7684\u533a\u57df\uff09","title":"Slider"},{"location":"elements/surface/","text":"@Composable fun Surface ( modifier : Modifier = Modifier , shape : Shape = RectangleShape , color : Color = MaterialTheme . colors . surface , contentColor : Color = contentColorFor ( color ), border : BorderStroke? = null , elevation : Dp = 0. dp , content : () -> Unit ): @Composable Unit Material Surface \u662f Material Design \u7684\u6838\u5fc3\u9690\u55bb\uff0c\u6bcf\u4e2a\u5e73\u9762\u90fd\u5b58\u5728\u4e8e\u4e00\u4e2a\u7279\u5b9a\u7684\u9ad8\u5ea6\uff0c\u8fd9\u5f71\u54cd\u4e86\u8fd9\u5757\u5e73\u9762\u5728\u89c6\u89c9\u4e0a\u4e0e\u5176\u4ed6\u5e73\u9762\u7684\u5173\u7cfb\u4ee5\u53ca\u8be5\u5e73\u9762\u5982\u4f55\u6295\u5c04\u9634\u5f71\u3002 \u53ef\u4ee5\u5c06 Surface \u7406\u89e3\u6210\u662f\u4e00\u4e2a\u5bb9\u5668\uff0c\u6bcf\u4e2a\u754c\u9762\u5143\u7d20\u90fd\u57fa\u4e8e\u8fd9\u4e2a\u5bb9\u5668\uff0c\u5bb9\u5668\u53ef\u4ee5\u6709\u4e0d\u540c\u7684\u9ad8\u5ea6\uff0c\u53ef\u4ee5\u4f4d\u4e8e\u4e0d\u540c\u7684\u4f4d\u7f6e\u3002 Surface \u4e3b\u8981\u8d1f\u8d23\uff1a \u526a\u88c1\uff1a Surface \u4f1a\u6839\u636e shape \u5c5e\u6027\u6240\u63cf\u8ff0\u7684\u5f62\u72b6\u6765\u88c1\u526a\u5b83\u7684\u5b50\u5143\u7d20\u3002 \u9ad8\u5ea6\uff1a Surface \u4f1a\u7ed8\u5236\u9634\u5f71\u6765\u8868\u793a\u5e73\u9762\u7684\u6df1\u5ea6\uff0c\u800c\u8fd9\u4e2a\u6df1\u5ea6\u7531\u9ad8\u5ea6\u5c5e\u6027 (Elevation) \u8868\u793a\u3002\u5982\u679c\u4f20\u9012\u7684\u5f62\u72b6\u662f\u51f9\u8fdb\u53bb\u7684\uff0c\u90a3\u4e48\u5728 Android \u7248\u672c\u5c0f\u4e8e 10 \u7684\u60c5\u51b5\u4e0b\uff0c\u9634\u5f71\u4e0d\u4f1a\u88ab\u753b\u51fa\u6765\u3002 \u8fb9\u6846\uff1a\u5982\u679c\u5f62\u72b6\u6709\u8fb9\u6846\uff0c\u90a3\u4e48\u5b83\u4e5f\u4f1a\u88ab\u753b\u51fa\u6765\u3002 \u80cc\u666f\uff1a Surface \u5728 shape \u6307\u5b9a\u7684\u5f62\u72b6\u4e0a\u586b\u5145\u989c\u8272\u3002\u5982\u679c\u989c\u8272\u662f Colors.surface \uff0c\u5c06\u4f7f\u7528 LocalElevationOverlay \u4e2d\u7684 ElevationOverlay \u6765\u8fdb\u884c\u53e0\u52a0--\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u8fd9\u53ea\u4f1a\u53d1\u751f\u5728\u6df1\u8272\u4e3b\u9898\u4e2d\u3002\u8986\u76d6\u7684\u989c\u8272\u53d6\u51b3\u4e8e\u8fd9\u4e2a Surface \u7684\u9ad8\u5ea6\uff0c\u4ee5\u53ca\u4efb\u4f55\u7236\u7ea7 Surface \u8bbe\u7f6e\u7684 LocalAbsolutelevation \u3002\u8fd9\u53ef\u4ee5\u786e\u4fdd\u4e00\u4e2a Surface \u7684\u53e0\u52a0\u9ad8\u5ea6\u6c38\u8fdc\u4e0d\u4f1a\u6bd4\u5b83\u7684\u7956\u5148\u4f4e\uff0c\u56e0\u4e3a\u5b83\u662f\u6240\u6709\u5148\u524d Surface \u7684\u9ad8\u5ea6\u7684\u603b\u548c \u5185\u5bb9\u989c\u8272\uff1a Surface \u4f7f\u7528 contentColor \u4e3a\u8fd9\u4e2a\u5e73\u9762\u7684\u5185\u5bb9\u6307\u5b9a\u4e00\u4e2a\u9996\u9009\u7684\u989c\u8272--\u8fd9\u4e2a\u989c\u8272\u88ab\u6587\u672c\u548c\u56fe\u6807\u7ec4\u4ef6\u4f5c\u4e3a\u9ed8\u8ba4\u989c\u8272\u4f7f\u7528 \u5982\u679c\u6ca1\u6709\u8bbe\u7f6e contentColor \uff0c\u8fd9\u4e2a\u5e73\u9762\u5c06\u5c1d\u8bd5\u5c06\u5176\u80cc\u666f\u989c\u8272\u4e0e\u4e3b\u9898 Colors \u4e2d\u5b9a\u4e49\u7684\u989c\u8272\u76f8\u5339\u914d\uff0c\u5e76\u8fd4\u56de\u76f8\u5e94\u7684\u5185\u5bb9\u989c\u8272\u3002\u4f8b\u5982\uff0c\u5982\u679c\u8fd9\u4e2a\u5e73\u9762\u7684\u989c\u8272\u662f Colors.surface \uff0c contentColor \u5c06\u88ab\u8bbe\u7f6e\u4e3a Colors.onSurface \u3002\u5982\u679c\u989c\u8272\u4e0d\u662f\u4e3b\u9898\u8c03\u8272\u677f\u7684\u4e00\u90e8\u5206\uff0c contentColor \u5c06\u4fdd\u6301\u8fd9\u4e2a Surface \u4e0a\u9762\u8bbe\u7f6e\u7684\u76f8\u540c\u503c 1. \u6765\u8bd5\u8bd5\u7528 Surface \u5b9e\u73b0 Card \u7684\u6548\u679c Surface ( shape = RoundedCornerShape ( 10. dp ), elevation = 10. dp , modifier = Modifier . fillMaxWidth () . padding ( 15. dp ) // \u5916\u8fb9\u8ddd . clickable { }, ){ Column ( modifier = Modifier . padding ( 15. dp ) // \u5185\u8fb9\u8ddd ) { Text ( buildAnnotatedString { append ( \"\u6b22\u8fce\u6765\u5230 \" ) withStyle ( style = SpanStyle ( fontWeight = FontWeight . W900 , color = Color ( 0 xFF4552B8 )) ) { append ( \"Jetpack Compose \u535a\u7269\u9986\" ) } } ) Text ( buildAnnotatedString { append ( \"\u4f60\u73b0\u5728\u89c2\u770b\u7684\u7ae0\u8282\u662f \" ) withStyle ( style = SpanStyle ( fontWeight = FontWeight . W900 )) { append ( \"Card\" ) } } ) } } 2. \u66f4\u591a Surface \u53c2\u6570\u8be6\u60c5","title":"Surface"},{"location":"elements/surface/#1-surface-card","text":"Surface ( shape = RoundedCornerShape ( 10. dp ), elevation = 10. dp , modifier = Modifier . fillMaxWidth () . padding ( 15. dp ) // \u5916\u8fb9\u8ddd . clickable { }, ){ Column ( modifier = Modifier . padding ( 15. dp ) // \u5185\u8fb9\u8ddd ) { Text ( buildAnnotatedString { append ( \"\u6b22\u8fce\u6765\u5230 \" ) withStyle ( style = SpanStyle ( fontWeight = FontWeight . W900 , color = Color ( 0 xFF4552B8 )) ) { append ( \"Jetpack Compose \u535a\u7269\u9986\" ) } } ) Text ( buildAnnotatedString { append ( \"\u4f60\u73b0\u5728\u89c2\u770b\u7684\u7ae0\u8282\u662f \" ) withStyle ( style = SpanStyle ( fontWeight = FontWeight . W900 )) { append ( \"Card\" ) } } ) } }","title":"1. \u6765\u8bd5\u8bd5\u7528 Surface \u5b9e\u73b0 Card \u7684\u6548\u679c"},{"location":"elements/surface/#2","text":"Surface \u53c2\u6570\u8be6\u60c5","title":"2. \u66f4\u591a"},{"location":"elements/text/","text":"Text \u662f Compose \u4e2d\u6700\u57fa\u672c\u7684\u5e03\u5c40\u7ec4\u4ef6\uff0c\u5b83\u53ef\u4ee5\u663e\u793a\u6587\u5b57 @Composable fun TextDemo () { Text ( \"Hello World\" ) } \u4ece res \u4e2d\u52a0\u8f7d\u6587\u5b57 @Composable fun TextDemo () { Text ( stringResource ( id = R . string . content )) } < resources > < string name = \"app_name\" > examples </ string > < string name = \"content\" > \u6843\u4e4b\u592d\u592d\uff0c\u707c\u707c\u5176\u534e\u3002\u4e4b\u5b50\u4e8e\u5f52\uff0c\u5b9c\u5176\u5ba4\u5bb6\u3002 </ string > </ resources > 1. style \u53c2\u6570 \u5f53\u7136\uff0c\u6211\u4eec\u6709\u65f6\u5019\u4e5f\u9700\u8981\u66f4\u6362\u5b57\u4f53\u7684\u5927\u5c0f Compose \u5df2\u7ecf\u4e3a\u6211\u4eec\u51c6\u5907\u4e86\u5f88\u591a\u4e13\u95e8\u7684\u5b57\u4f53\u5927\u5c0f, \u4ece h1 \u5230 overline @Composable fun TextDemo () { Column { Text ( text = \"\u4f60\u597d\u5440\u964c\u751f\u4eba\uff0c\u8fd9\u662f\u4e00\u4e2a\u6807\u9898\" , style = MaterialTheme . typography . h6 ) Text ( text = \"\u4f60\u597d\u5440\u964c\u751f\u4eba\uff0c\u6211\u662f\u5185\u5bb9\" , style = MaterialTheme . typography . body2 ) } } \u6587\u5b57\u95f4\u8ddd \u5f53\u7136\u6709\u7684\u65f6\u5019\u6211\u4eec\u60f3\u81ea\u5df1\u81ea\u5b9a\u4e49\u5b57\u4f53\u7684\u95f4\u9694\u548c\u5927\u5c0f\uff0c\u90a3\u6211\u4eec\u53ef\u4ee5\u5c06\u4ee3\u7801\u6539\u4e3a\uff1a @Composable fun TextDemo () { Column ( modifier = Modifier . fillMaxWidth (), horizontalAlignment = Alignment . CenterHorizontally ) { Text ( text = \"\u4f60\u597d\u964c\u751f\u4eba\" , style = TextStyle ( fontWeight = FontWeight . W900 , //\u8bbe\u7f6e\u5b57\u4f53\u7c97\u7ec6 fontSize = 20. sp , letterSpacing = 7. sp ) ) } } \u5b83\u5c06\u4f1a\u663e\u793a\u6210 \u5b57\u4f53\u5927\u5c0f Tips \u5982\u679c\u53ea\u662f\u60f3\u7b80\u5355\u7684\u4fee\u6539\u5b57\u4f53\u5927\u5c0f\u800c\u4e0d\u8003\u8651\u95f4\u9694\u4e4b\u7c7b\u7684\uff0c\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528 fontSize = xx.sp \u6765\u8bbe\u7f6e\u5927\u5c0f 2. maxLines \u53c2\u6570 \u4f7f\u7528 maxLines \u53c2\u6570\u53ef\u4ee5\u5e2e\u52a9\u6211\u4eec\u5c06\u6587\u672c\u9650\u5236\u5728\u6307\u5b9a\u7684\u884c\u6570\u4e4b\u95f4\uff0c\u5982\u679c\u6587\u672c\u8db3\u591f\u77ed\u5219\u4e0d\u4f1a\u751f\u6548\uff0c\u5982\u679c\u6587\u672c\u8d85\u8fc7 maxLines \u6240\u89c4\u5b9a\u7684\u884c\u6570\uff0c\u5219\u4f1a\u8fdb\u884c\u622a\u65ad @Composable fun TextDemo () { Column { Text ( text = \"\u4f60\u597d\u5440\u964c\u751f\u4eba\uff0c\u8fd9\u662f\u4e00\u4e2a\u6807\u9898\uff0c\u4e0d\u662f\u5f88\u957f\uff0c\u56e0\u4e3a\u6211\u60f3\u4e0d\u51fa\u5176\u4ed6\u4ec0\u4e48\u6bd4\u8f83\u597d\u7684\u6807\u9898\u4e86\" , style = MaterialTheme . typography . h6 , maxLines = 1 , ) Text ( text = \"\u4f60\u597d\u5440\u964c\u751f\u4eba\uff0c\u6211\u662f\u5185\u5bb9\" , style = MaterialTheme . typography . body2 ) } } overflow \u5904\u7406\u6ea2\u51fa \u4f7f\u7528 overflow \u53c2\u6570\u53ef\u4ee5\u5e2e\u52a9\u6211\u4eec\u5904\u7406\u6ea2\u51fa\u7684\u89c6\u89c9\u6548\u679c @Composable fun TextDemo () { Column { Text ( text = \"\u4f60\u597d\u5440\u964c\u751f\u4eba\uff0c\u8fd9\u662f\u4e00\u4e2a\u6807\u9898\uff0c\u4e0d\u662f\u5f88\u957f\uff0c\u56e0\u4e3a\u6211\u60f3\u4e0d\u51fa\u5176\u4ed6\u4ec0\u4e48\u6bd4\u8f83\u597d\u7684\u6807\u9898\u4e86\" , style = MaterialTheme . typography . h6 , maxLines = 1 , overflow = TextOverflow . Ellipsis ) Text ( text = \"\u4f60\u597d\u5440\u964c\u751f\u4eba\uff0c\u6211\u662f\u5185\u5bb9\" , style = MaterialTheme . typography . body2 ) } } 3. textAlign \u53c2\u6570 \u5f53\u6211\u4eec\u5728 Text \u4e2d\u8bbe\u7f6e\u4e86 fillMaxWidth() \u4e4b\u540e\uff0c\u6211\u4eec\u53ef\u4ee5\u6307\u5b9a Text \u7684\u5bf9\u9f50\u65b9\u5f0f @Composable fun TextDemo () { Column { Text ( text = \"\u6bcf\u5929\u6478\u9c7c\" , modifier = Modifier . fillMaxWidth (), textAlign = TextAlign . Left ) Text ( text = \"\u8fd9\u597d\u5417\" , modifier = Modifier . fillMaxWidth (), textAlign = TextAlign . Center ) Text ( text = \"\u8fd9\u975e\u5e38\u7684\u597d\" , modifier = Modifier . fillMaxWidth (), textAlign = TextAlign . Right ) } } \u6ce8\u610f \u9700\u8981\u6ce8\u610f\u533a\u5206\u7684\u662f\uff0c TextAlign \u8bbe\u7f6e\u7684\u662f\u6587\u672c\u7684\u5bf9\u9f50\u65b9\u5f0f\uff0c\u800c\u4e0d\u662f\u4f4d\u7f6e\u65b9\u5411 \u5982\u679c\u9700\u8981\u5b9e\u73b0 TextAlign.Right \u4e2d\u7684\u65b9\u5411\uff0c\u8bf7\u4f7f\u7528 Modifier.align(Alignment.End) \uff0c\u8be6\u60c5\u4f7f\u7528\u65b9\u6cd5\u5728 \u8fd9\u91cc 4. lineHeight \u53c2\u6570 \u4f7f\u7528 lineHeight \u53c2\u6570\u53ef\u4ee5\u8ba9\u6211\u4eec\u6307\u5b9a Text \u4e2d\u6bcf\u884c\u7684\u884c\u9ad8\u95f4\u8ddd Column { Text ( text = \"\u4e24\u9762\u5305\u5939\u829d\u58eb\" . repeat ( 15 ), ) Spacer ( Modifier . padding ( vertical = 15. dp )) Text ( text = \"\u4e24\u9762\u5305\u5939\u829d\u58eb\" . repeat ( 15 ), lineHeight = 30. sp ) } 5. \u53ef\u70b9\u51fb\u7684 Text \u6709\u7684\u65f6\u5019\u4e5f\u8bb8\u60a8\u9700\u8981\u5c06\u6587\u672c\u5f53\u4f5c\u6309\u94ae\uff0c\u90a3\u4e48\u53ea\u9700\u8981\u6dfb\u52a0 Modifier.clickable \u5373\u53ef \u4ee3\u7801\u5982\u4e0b\uff1a @Composable fun TextDemo () { Text ( text = \"\u786e\u8ba4\u7f16\u8f91\" , modifier = Modifier . clickable ( onClick = { // TODO }, ) ) } \u53d6\u6d88\u70b9\u51fb\u6ce2\u7eb9 \u4f46\u662f\u6211\u4eec\u4f1a\u53d1\u73b0\uff0c clickable \u6709\u81ea\u5e26\u7684\u6ce2\u7eb9\u6548\u679c\uff0c\u5982\u679c\u6211\u4eec\u60f3\u8981\u53d6\u6d88\u7684\u8bdd\uff0c\u53ea\u9700\u8981\u6dfb\u52a0\u4e24\u4e2a\u53c2\u6570\u5373\u53ef\uff1a @Composable fun TextDemo () { // \u83b7\u53d6 context val context = LocalContext . current Text ( text = \"\u786e\u8ba4\u7f16\u8f91\" , modifier = Modifier . clickable ( onClick = { // \u901a\u77e5\u4e8b\u4ef6 Toast . makeText ( context , \"\u4f60\u70b9\u51fb\u4e86\u6b64\u6587\u672c\" , Toast . LENGTH_LONG ). show () }, indication = null , interactionSource = MutableInteractionSource () ) ) } \u6548\u679c\u5982\u4e0b\uff1a 6. \u7279\u5b9a\u7684\u6587\u5b57\u663e\u793a \u5982\u679c\u6211\u4eec\u60f3\u8ba9\u4e00\u4e2a Text \u8bed\u53e5\u4e2d\u4f7f\u7528\u4e0d\u540c\u7684\u6837\u5f0f\uff0c\u6bd4\u5982\u7c97\u4f53\u63d0\u9192\uff0c\u7279\u6b8a\u989c\u8272 \u5219\u6211\u4eec\u9700\u8981\u4f7f\u7528\u5230 AnnotatedString AnnotatedString \u662f\u4e00\u4e2a\u6570\u636e\u7c7b\uff0c\u5176\u4e2d\u5305\u542b\u4e86\uff1a \u4e00\u4e2a Text \u7684\u503c \u4e00\u4e2a SpanStyleRange \u7684 List \uff0c\u7b49\u540c\u4e8e\u4f4d\u7f6e\u8303\u56f4\u5728\u6587\u5b57\u503c\u5185\u7684\u5185\u5d4c\u6837\u5f0f \u4e00\u4e2a ParagraphStyleRange \u7684 List \uff0c\u7528\u4e8e\u6307\u5b9a\u6587\u5b57\u5bf9\u9f50\u3001\u6587\u5b57\u65b9\u5411\u3001\u884c\u9ad8\u548c\u6587\u5b57\u7f29\u8fdb\u6837\u5f0f inline fun < R : Any > AnnotatedString . Builder . withStyle ( style : SpanStyle , block : AnnotatedString . Builder .() -> crossinline R ): R \u4e00\u4e2a\u7b80\u5355\u7684\u4ee3\u7801\u6f14\u793a\uff1a @Composable fun TextDemo () { Column ( modifier = Modifier . fillMaxWidth (), horizontalAlignment = Alignment . CenterHorizontally ) { Text ( buildAnnotatedString { append ( \"\u4f60\u73b0\u5728\u89c2\u770b\u7684\u7ae0\u8282\u662f \" ) withStyle ( style = SpanStyle ( fontWeight = FontWeight . W900 )) { append ( \"Text\" ) } } ) } } \u6548\u679c\u5982\u4e0b\uff1a 7. \u6587\u5b57\u8d85\u94fe\u63a5\uff1f\uff08ClickableText\uff09 \u5728\u7b2c #6 \u90e8\u5206\u6211\u4eec\u5df2\u7ecf\u4ecb\u7ecd\u4e86\u53ef\u4ee5\u901a\u8fc7 AnnotatedString \u6765\u5b8c\u6210\u5728\u4e00\u4e2a Text \u4e2d\u7ed9\u4e0d\u540c\u7684\u6587\u5b57\u5e94\u7528\u4e0d\u540c\u7684\u6837\u5f0f \u5728\u7b2c #5 \u90e8\u5206\u6211\u4eec\u5df2\u7ecf\u4ecb\u7ecd\u4e86\u53ef\u4ee5\u901a\u8fc7 Modifier.Clickable() \u6765\u5b8c\u6210\u68c0\u6d4b Text \u7684\u70b9\u51fb \u4f46\u662f Modifier.Clickable() \u65e0\u6cd5\u68c0\u6d4b Text \u4e2d\u7684\u90e8\u5206\u70b9\u51fb\uff0c\u90a3\u5982\u679c\u6211\u4eec\u9700\u8981\u68c0\u6d4b\u4e00\u4e2a Text \u4e2d\u7684\u90e8\u5206\u70b9\u51fb\u4e8b\u4ef6\u8be5\u600e\u4e48\u529e\u5462\uff1f\u5c31\u50cf\u6211\u4eec\u7ecf\u5e38\u5728 App \u5e95\u4e0b\u770b\u5230\u7684\u7528\u6237\u534f\u8bae\u7b49 \u5176\u5b9e\u5f88\u7b80\u5355\uff0c Compose \u4e5f\u7ed9\u6211\u4eec\u51c6\u5907\u4e86 ClickableText \uff0c\u6765\u770b\u770b\u5982\u4f55\u4f7f\u7528\u5427\uff01 val text = buildAnnotatedString { append ( \"\u52fe\u9009\u5373\u4ee3\u8868\u540c\u610f\" ) withStyle ( style = SpanStyle ( color = Color ( 0 xFF0E9FF2 ), fontWeight = FontWeight . Bold ) ) { append ( \"\u7528\u6237\u534f\u8bae\" ) } } ClickableText ( text = text , onClick = { offset -> Log . d ( TAG , \"Hi\uff0c\u4f60\u6309\u5230\u4e86\u7b2c $ offset \u4f4d\u7684\u6587\u5b57\" ) } ) \u4f46\u662f...\u600e\u4e48\u624d\u80fd\u68c0\u6d4b \u7528\u6237\u534f\u8bae \u8fd9\u56db\u4e2a\u5b57\u7b26\u7684\u70b9\u51fb\u4e8b\u4ef6\u5462\uff1f \u4e5f\u4e0d\u7528\u6015\uff0c Compose \u8fd8\u5728 buildAnnotatedString \u548c ClickableText \u4e2d\u5f15\u5165\u4e86\u76f8\u5e94\u7684\u65b9\u6cd5 \u5148\u6765\u770b\u770b\u4ee3\u7801\u5427\uff01 val annotatedText = buildAnnotatedString { append ( \"\u52fe\u9009\u5373\u4ee3\u8868\u540c\u610f\" ) pushStringAnnotation ( tag = \"tag\" , annotation = \"\u4e00\u4e2a\u7528\u6237\u534f\u8bae\u5566\u5566\u5566\uff0c\u5185\u5bb9\u5185\u5bb9\" ) withStyle ( style = SpanStyle ( color = Color ( 0 xFF0E9FF2 ), fontWeight = FontWeight . Bold ) ) { append ( \"\u7528\u6237\u534f\u8bae\" ) } pop () } ClickableText ( text = annotatedText , onClick = { offset -> annotatedText . getStringAnnotations ( tag = \"tag\" , start = offset , end = offset ). firstOrNull () ?. let { annotation -> Log . d ( TAG , \"\u4f60\u5df2\u7ecf\u70b9\u5230 ${ annotation . item } \u5566\" ) } } ) \u5728\u4e0a\u9762\u7684\u4ee3\u7801\u4e2d \u591a\u4e86\u4e00\u4e2a pushStringAnnotation() \u65b9\u6cd5\uff0c\u5b83\u4f1a\u5c06\u7ed9\u5b9a\u7684\u6ce8\u91ca\u9644\u52a0\u5230\u4efb\u4f55\u9644\u52a0\u7684\u6587\u672c\u4e0a\uff0c\u76f4\u5230\u76f8\u5e94\u7684 pop \u88ab\u8c03\u7528 getStringAnnotations() \u65b9\u6cd5\u662f\u67e5\u8be2\u9644\u52a0\u5728\u8fd9\u4e2a AnnotatedString \u4e0a\u7684\u5b57\u7b26\u4e32\u6ce8\u91ca\u3002\u6ce8\u91ca\u662f\u9644\u52a0\u5728 AnnotatedString \u4e0a\u7684\u5143\u6570\u636e\uff0c\u4f8b\u5982\uff0c\u5728\u6211\u4eec\u7684\u4ee3\u7801\u4e2d \"tag\" \u662f\u9644\u52a0\u5728\u67d0\u4e2a\u8303\u56f4\u4e0a\u7684\u5b57\u7b26\u4e32\u5143\u6570\u636e\u3002\u6ce8\u91ca\u4e5f\u4e0e\u6837\u5f0f\u4e00\u8d77\u5b58\u50a8\u5728 Range \u4e2d \u5c0f\u8bd5\u725b\u5200 \u90a3\u4e48\uff0c\u4f60\u5df2\u7ecf\u5b66\u4f1a\u4e86\u5982\u4f55\u81ea\u5b9a\u4e49 Text \u4e2d\u7684\u6837\u5f0f\u548c\u70b9\u51fb\u4e8b\u4ef6\uff0c\u6765\u5c1d\u8bd5\u505a\u51fa\u4e00\u4e2a\u8fd9\u6837\u7684\u6548\u679c\uff1f \u5b9e\u73b0\u7684\u4ee3\u7801\u53ef\u4ee5\u901a\u8fc7\u4ee5\u4e0b\u7684\u65b9\u5f0f\u6765\u67e5\u770b Mkdocs Github 8. \u590d\u5236\u6587\u5b57 \u9ed8\u8ba4\u60c5\u51b5\u4e0b Text \u5e76\u4e0d\u80fd\u8fdb\u884c\u590d\u5236\u7b49\u64cd\u4f5c\uff0c\u6211\u4eec\u9700\u8981\u8bbe\u7f6e SelectionContainer \u6765\u5305\u88c5 Text @Composable fun TextDemo () { SelectionContainer { Column { Text ( text = \"\u6bcf\u5929\u6478\u9c7c\" , modifier = Modifier . fillMaxWidth (), textAlign = TextAlign . Left ) Text ( text = \"\u8fd9\u597d\u5417\" , modifier = Modifier . fillMaxWidth (), textAlign = TextAlign . Center ) Text ( text = \"\u8fd9\u975e\u5e38\u7684\u597d\" , modifier = Modifier . fillMaxWidth (), textAlign = TextAlign . Right ) } } } 9. \u6587\u5b57\u5f3a\u8c03\u6548\u679c \u6587\u5b57\u6839\u636e\u4e0d\u540c\u60c5\u51b5\u6765\u786e\u5b9a\u6587\u5b57\u7684\u5f3a\u8c03\u7a0b\u5ea6\uff0c\u4ee5\u7a81\u51fa\u91cd\u70b9\u5e76\u4f53\u73b0\u51fa\u89c6\u89c9\u4e0a\u7684\u5c42\u6b21\u611f\u3002 Material Design \u5efa\u8bae\u91c7\u7528\u4e0d\u540c\u7684\u4e0d\u900f\u660e\u5ea6\u6765\u4f20\u8fbe\u8fd9\u4e9b\u4e0d\u540c\u7684\u91cd\u8981\u7a0b\u5ea6\uff0c\u4f60\u53ef\u4ee5\u901a\u8fc7 LocalContentAlpha \u5b9e\u73b0\u6b64\u529f\u80fd\u3002 \u60a8\u53ef\u4ee5\u901a\u8fc7\u4e3a\u6b64 CompositionLocal \u63d0\u4f9b\u4e00\u4e2a\u503c\u6765\u4e3a\u5c42\u6b21\u7ed3\u6784\u6307\u5b9a\u5185\u5bb9 Alpha \u503c\u3002\uff08 CompositionLocal \u662f\u4e00\u4e2a\u7528\u4e8e\u9690\u5f0f\u7684\u4f20\u9012\u53c2\u6570\u7684\u7ec4\u4ef6\uff0c\u540e\u7eed\u4f1a\u8bb2\u5230\uff09 // \u5c06\u5185\u90e8 Text \u7ec4\u4ef6\u7684 alpha \u5f3a\u8c03\u7a0b\u5ea6\u8bbe\u7f6e\u4e3a\u9ad8 // \u6ce8\u610f: MaterialTheme \u5df2\u7ecf\u9ed8\u8ba4\u5c06\u5f3a\u8c03\u7a0b\u5ea6\u8bbe\u7f6e\u4e3a high CompositionLocalProvider ( LocalContentAlpha provides ContentAlpha . high ) { Text ( \"\u8fd9\u91cc\u662fhigh\u5f3a\u8c03\u6548\u679c\" ) } // \u5c06\u5185\u90e8 Text \u7ec4\u4ef6\u7684 alpha \u5f3a\u8c03\u7a0b\u5ea6\u8bbe\u7f6e\u4e3a\u4e2d CompositionLocalProvider ( LocalContentAlpha provides ContentAlpha . medium ) { Text ( \"\u8fd9\u91cc\u662fmedium\u5f3a\u8c03\u6548\u679c\" ) } // \u5c06\u5185\u90e8 Text \u7ec4\u4ef6\u7684 alpha \u5f3a\u8c03\u7a0b\u5ea6\u8bbe\u7f6e\u4e3a\u7981\u7528 CompositionLocalProvider ( LocalContentAlpha provides ContentAlpha . disabled ) { Icon ( \"\u8fd9\u91cc\u662f\u7981\u7528\u540e\u7684\u6548\u679c\" ) } \u8fd9\u662f\u8fd0\u884c\u6548\u679c: \u8fd9\u5f20\u56fe\u53ef\u4ee5\u5f88\u597d\u7684\u8bf4\u660e\u8fd9\u4e2a\u6548\u679c 10. \u66f4\u591a Text \u53c2\u6570\u8be6\u60c5 Text \u4e00\u4e9b\u7528\u6cd5","title":"Text"},{"location":"elements/text/#1-style","text":"\u5f53\u7136\uff0c\u6211\u4eec\u6709\u65f6\u5019\u4e5f\u9700\u8981\u66f4\u6362\u5b57\u4f53\u7684\u5927\u5c0f Compose \u5df2\u7ecf\u4e3a\u6211\u4eec\u51c6\u5907\u4e86\u5f88\u591a\u4e13\u95e8\u7684\u5b57\u4f53\u5927\u5c0f, \u4ece h1 \u5230 overline @Composable fun TextDemo () { Column { Text ( text = \"\u4f60\u597d\u5440\u964c\u751f\u4eba\uff0c\u8fd9\u662f\u4e00\u4e2a\u6807\u9898\" , style = MaterialTheme . typography . h6 ) Text ( text = \"\u4f60\u597d\u5440\u964c\u751f\u4eba\uff0c\u6211\u662f\u5185\u5bb9\" , style = MaterialTheme . typography . body2 ) } }","title":"1. style \u53c2\u6570"},{"location":"elements/text/#_1","text":"\u5f53\u7136\u6709\u7684\u65f6\u5019\u6211\u4eec\u60f3\u81ea\u5df1\u81ea\u5b9a\u4e49\u5b57\u4f53\u7684\u95f4\u9694\u548c\u5927\u5c0f\uff0c\u90a3\u6211\u4eec\u53ef\u4ee5\u5c06\u4ee3\u7801\u6539\u4e3a\uff1a @Composable fun TextDemo () { Column ( modifier = Modifier . fillMaxWidth (), horizontalAlignment = Alignment . CenterHorizontally ) { Text ( text = \"\u4f60\u597d\u964c\u751f\u4eba\" , style = TextStyle ( fontWeight = FontWeight . W900 , //\u8bbe\u7f6e\u5b57\u4f53\u7c97\u7ec6 fontSize = 20. sp , letterSpacing = 7. sp ) ) } } \u5b83\u5c06\u4f1a\u663e\u793a\u6210","title":"\u6587\u5b57\u95f4\u8ddd"},{"location":"elements/text/#_2","text":"Tips \u5982\u679c\u53ea\u662f\u60f3\u7b80\u5355\u7684\u4fee\u6539\u5b57\u4f53\u5927\u5c0f\u800c\u4e0d\u8003\u8651\u95f4\u9694\u4e4b\u7c7b\u7684\uff0c\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528 fontSize = xx.sp \u6765\u8bbe\u7f6e\u5927\u5c0f","title":"\u5b57\u4f53\u5927\u5c0f"},{"location":"elements/text/#2-maxlines","text":"\u4f7f\u7528 maxLines \u53c2\u6570\u53ef\u4ee5\u5e2e\u52a9\u6211\u4eec\u5c06\u6587\u672c\u9650\u5236\u5728\u6307\u5b9a\u7684\u884c\u6570\u4e4b\u95f4\uff0c\u5982\u679c\u6587\u672c\u8db3\u591f\u77ed\u5219\u4e0d\u4f1a\u751f\u6548\uff0c\u5982\u679c\u6587\u672c\u8d85\u8fc7 maxLines \u6240\u89c4\u5b9a\u7684\u884c\u6570\uff0c\u5219\u4f1a\u8fdb\u884c\u622a\u65ad @Composable fun TextDemo () { Column { Text ( text = \"\u4f60\u597d\u5440\u964c\u751f\u4eba\uff0c\u8fd9\u662f\u4e00\u4e2a\u6807\u9898\uff0c\u4e0d\u662f\u5f88\u957f\uff0c\u56e0\u4e3a\u6211\u60f3\u4e0d\u51fa\u5176\u4ed6\u4ec0\u4e48\u6bd4\u8f83\u597d\u7684\u6807\u9898\u4e86\" , style = MaterialTheme . typography . h6 , maxLines = 1 , ) Text ( text = \"\u4f60\u597d\u5440\u964c\u751f\u4eba\uff0c\u6211\u662f\u5185\u5bb9\" , style = MaterialTheme . typography . body2 ) } }","title":"2. maxLines \u53c2\u6570"},{"location":"elements/text/#overflow","text":"\u4f7f\u7528 overflow \u53c2\u6570\u53ef\u4ee5\u5e2e\u52a9\u6211\u4eec\u5904\u7406\u6ea2\u51fa\u7684\u89c6\u89c9\u6548\u679c @Composable fun TextDemo () { Column { Text ( text = \"\u4f60\u597d\u5440\u964c\u751f\u4eba\uff0c\u8fd9\u662f\u4e00\u4e2a\u6807\u9898\uff0c\u4e0d\u662f\u5f88\u957f\uff0c\u56e0\u4e3a\u6211\u60f3\u4e0d\u51fa\u5176\u4ed6\u4ec0\u4e48\u6bd4\u8f83\u597d\u7684\u6807\u9898\u4e86\" , style = MaterialTheme . typography . h6 , maxLines = 1 , overflow = TextOverflow . Ellipsis ) Text ( text = \"\u4f60\u597d\u5440\u964c\u751f\u4eba\uff0c\u6211\u662f\u5185\u5bb9\" , style = MaterialTheme . typography . body2 ) } }","title":"overflow \u5904\u7406\u6ea2\u51fa"},{"location":"elements/text/#3-textalign","text":"\u5f53\u6211\u4eec\u5728 Text \u4e2d\u8bbe\u7f6e\u4e86 fillMaxWidth() \u4e4b\u540e\uff0c\u6211\u4eec\u53ef\u4ee5\u6307\u5b9a Text \u7684\u5bf9\u9f50\u65b9\u5f0f @Composable fun TextDemo () { Column { Text ( text = \"\u6bcf\u5929\u6478\u9c7c\" , modifier = Modifier . fillMaxWidth (), textAlign = TextAlign . Left ) Text ( text = \"\u8fd9\u597d\u5417\" , modifier = Modifier . fillMaxWidth (), textAlign = TextAlign . Center ) Text ( text = \"\u8fd9\u975e\u5e38\u7684\u597d\" , modifier = Modifier . fillMaxWidth (), textAlign = TextAlign . Right ) } } \u6ce8\u610f \u9700\u8981\u6ce8\u610f\u533a\u5206\u7684\u662f\uff0c TextAlign \u8bbe\u7f6e\u7684\u662f\u6587\u672c\u7684\u5bf9\u9f50\u65b9\u5f0f\uff0c\u800c\u4e0d\u662f\u4f4d\u7f6e\u65b9\u5411 \u5982\u679c\u9700\u8981\u5b9e\u73b0 TextAlign.Right \u4e2d\u7684\u65b9\u5411\uff0c\u8bf7\u4f7f\u7528 Modifier.align(Alignment.End) \uff0c\u8be6\u60c5\u4f7f\u7528\u65b9\u6cd5\u5728 \u8fd9\u91cc","title":"3. textAlign \u53c2\u6570"},{"location":"elements/text/#4-lineheight","text":"\u4f7f\u7528 lineHeight \u53c2\u6570\u53ef\u4ee5\u8ba9\u6211\u4eec\u6307\u5b9a Text \u4e2d\u6bcf\u884c\u7684\u884c\u9ad8\u95f4\u8ddd Column { Text ( text = \"\u4e24\u9762\u5305\u5939\u829d\u58eb\" . repeat ( 15 ), ) Spacer ( Modifier . padding ( vertical = 15. dp )) Text ( text = \"\u4e24\u9762\u5305\u5939\u829d\u58eb\" . repeat ( 15 ), lineHeight = 30. sp ) }","title":"4. lineHeight \u53c2\u6570"},{"location":"elements/text/#5-text","text":"\u6709\u7684\u65f6\u5019\u4e5f\u8bb8\u60a8\u9700\u8981\u5c06\u6587\u672c\u5f53\u4f5c\u6309\u94ae\uff0c\u90a3\u4e48\u53ea\u9700\u8981\u6dfb\u52a0 Modifier.clickable \u5373\u53ef \u4ee3\u7801\u5982\u4e0b\uff1a @Composable fun TextDemo () { Text ( text = \"\u786e\u8ba4\u7f16\u8f91\" , modifier = Modifier . clickable ( onClick = { // TODO }, ) ) }","title":"5. \u53ef\u70b9\u51fb\u7684 Text"},{"location":"elements/text/#_3","text":"\u4f46\u662f\u6211\u4eec\u4f1a\u53d1\u73b0\uff0c clickable \u6709\u81ea\u5e26\u7684\u6ce2\u7eb9\u6548\u679c\uff0c\u5982\u679c\u6211\u4eec\u60f3\u8981\u53d6\u6d88\u7684\u8bdd\uff0c\u53ea\u9700\u8981\u6dfb\u52a0\u4e24\u4e2a\u53c2\u6570\u5373\u53ef\uff1a @Composable fun TextDemo () { // \u83b7\u53d6 context val context = LocalContext . current Text ( text = \"\u786e\u8ba4\u7f16\u8f91\" , modifier = Modifier . clickable ( onClick = { // \u901a\u77e5\u4e8b\u4ef6 Toast . makeText ( context , \"\u4f60\u70b9\u51fb\u4e86\u6b64\u6587\u672c\" , Toast . LENGTH_LONG ). show () }, indication = null , interactionSource = MutableInteractionSource () ) ) } \u6548\u679c\u5982\u4e0b\uff1a","title":"\u53d6\u6d88\u70b9\u51fb\u6ce2\u7eb9"},{"location":"elements/text/#6","text":"\u5982\u679c\u6211\u4eec\u60f3\u8ba9\u4e00\u4e2a Text \u8bed\u53e5\u4e2d\u4f7f\u7528\u4e0d\u540c\u7684\u6837\u5f0f\uff0c\u6bd4\u5982\u7c97\u4f53\u63d0\u9192\uff0c\u7279\u6b8a\u989c\u8272 \u5219\u6211\u4eec\u9700\u8981\u4f7f\u7528\u5230 AnnotatedString AnnotatedString \u662f\u4e00\u4e2a\u6570\u636e\u7c7b\uff0c\u5176\u4e2d\u5305\u542b\u4e86\uff1a \u4e00\u4e2a Text \u7684\u503c \u4e00\u4e2a SpanStyleRange \u7684 List \uff0c\u7b49\u540c\u4e8e\u4f4d\u7f6e\u8303\u56f4\u5728\u6587\u5b57\u503c\u5185\u7684\u5185\u5d4c\u6837\u5f0f \u4e00\u4e2a ParagraphStyleRange \u7684 List \uff0c\u7528\u4e8e\u6307\u5b9a\u6587\u5b57\u5bf9\u9f50\u3001\u6587\u5b57\u65b9\u5411\u3001\u884c\u9ad8\u548c\u6587\u5b57\u7f29\u8fdb\u6837\u5f0f inline fun < R : Any > AnnotatedString . Builder . withStyle ( style : SpanStyle , block : AnnotatedString . Builder .() -> crossinline R ): R \u4e00\u4e2a\u7b80\u5355\u7684\u4ee3\u7801\u6f14\u793a\uff1a @Composable fun TextDemo () { Column ( modifier = Modifier . fillMaxWidth (), horizontalAlignment = Alignment . CenterHorizontally ) { Text ( buildAnnotatedString { append ( \"\u4f60\u73b0\u5728\u89c2\u770b\u7684\u7ae0\u8282\u662f \" ) withStyle ( style = SpanStyle ( fontWeight = FontWeight . W900 )) { append ( \"Text\" ) } } ) } } \u6548\u679c\u5982\u4e0b\uff1a","title":"6. \u7279\u5b9a\u7684\u6587\u5b57\u663e\u793a"},{"location":"elements/text/#7-clickabletext","text":"\u5728\u7b2c #6 \u90e8\u5206\u6211\u4eec\u5df2\u7ecf\u4ecb\u7ecd\u4e86\u53ef\u4ee5\u901a\u8fc7 AnnotatedString \u6765\u5b8c\u6210\u5728\u4e00\u4e2a Text \u4e2d\u7ed9\u4e0d\u540c\u7684\u6587\u5b57\u5e94\u7528\u4e0d\u540c\u7684\u6837\u5f0f \u5728\u7b2c #5 \u90e8\u5206\u6211\u4eec\u5df2\u7ecf\u4ecb\u7ecd\u4e86\u53ef\u4ee5\u901a\u8fc7 Modifier.Clickable() \u6765\u5b8c\u6210\u68c0\u6d4b Text \u7684\u70b9\u51fb \u4f46\u662f Modifier.Clickable() \u65e0\u6cd5\u68c0\u6d4b Text \u4e2d\u7684\u90e8\u5206\u70b9\u51fb\uff0c\u90a3\u5982\u679c\u6211\u4eec\u9700\u8981\u68c0\u6d4b\u4e00\u4e2a Text \u4e2d\u7684\u90e8\u5206\u70b9\u51fb\u4e8b\u4ef6\u8be5\u600e\u4e48\u529e\u5462\uff1f\u5c31\u50cf\u6211\u4eec\u7ecf\u5e38\u5728 App \u5e95\u4e0b\u770b\u5230\u7684\u7528\u6237\u534f\u8bae\u7b49 \u5176\u5b9e\u5f88\u7b80\u5355\uff0c Compose \u4e5f\u7ed9\u6211\u4eec\u51c6\u5907\u4e86 ClickableText \uff0c\u6765\u770b\u770b\u5982\u4f55\u4f7f\u7528\u5427\uff01 val text = buildAnnotatedString { append ( \"\u52fe\u9009\u5373\u4ee3\u8868\u540c\u610f\" ) withStyle ( style = SpanStyle ( color = Color ( 0 xFF0E9FF2 ), fontWeight = FontWeight . Bold ) ) { append ( \"\u7528\u6237\u534f\u8bae\" ) } } ClickableText ( text = text , onClick = { offset -> Log . d ( TAG , \"Hi\uff0c\u4f60\u6309\u5230\u4e86\u7b2c $ offset \u4f4d\u7684\u6587\u5b57\" ) } ) \u4f46\u662f...\u600e\u4e48\u624d\u80fd\u68c0\u6d4b \u7528\u6237\u534f\u8bae \u8fd9\u56db\u4e2a\u5b57\u7b26\u7684\u70b9\u51fb\u4e8b\u4ef6\u5462\uff1f \u4e5f\u4e0d\u7528\u6015\uff0c Compose \u8fd8\u5728 buildAnnotatedString \u548c ClickableText \u4e2d\u5f15\u5165\u4e86\u76f8\u5e94\u7684\u65b9\u6cd5 \u5148\u6765\u770b\u770b\u4ee3\u7801\u5427\uff01 val annotatedText = buildAnnotatedString { append ( \"\u52fe\u9009\u5373\u4ee3\u8868\u540c\u610f\" ) pushStringAnnotation ( tag = \"tag\" , annotation = \"\u4e00\u4e2a\u7528\u6237\u534f\u8bae\u5566\u5566\u5566\uff0c\u5185\u5bb9\u5185\u5bb9\" ) withStyle ( style = SpanStyle ( color = Color ( 0 xFF0E9FF2 ), fontWeight = FontWeight . Bold ) ) { append ( \"\u7528\u6237\u534f\u8bae\" ) } pop () } ClickableText ( text = annotatedText , onClick = { offset -> annotatedText . getStringAnnotations ( tag = \"tag\" , start = offset , end = offset ). firstOrNull () ?. let { annotation -> Log . d ( TAG , \"\u4f60\u5df2\u7ecf\u70b9\u5230 ${ annotation . item } \u5566\" ) } } ) \u5728\u4e0a\u9762\u7684\u4ee3\u7801\u4e2d \u591a\u4e86\u4e00\u4e2a pushStringAnnotation() \u65b9\u6cd5\uff0c\u5b83\u4f1a\u5c06\u7ed9\u5b9a\u7684\u6ce8\u91ca\u9644\u52a0\u5230\u4efb\u4f55\u9644\u52a0\u7684\u6587\u672c\u4e0a\uff0c\u76f4\u5230\u76f8\u5e94\u7684 pop \u88ab\u8c03\u7528 getStringAnnotations() \u65b9\u6cd5\u662f\u67e5\u8be2\u9644\u52a0\u5728\u8fd9\u4e2a AnnotatedString \u4e0a\u7684\u5b57\u7b26\u4e32\u6ce8\u91ca\u3002\u6ce8\u91ca\u662f\u9644\u52a0\u5728 AnnotatedString \u4e0a\u7684\u5143\u6570\u636e\uff0c\u4f8b\u5982\uff0c\u5728\u6211\u4eec\u7684\u4ee3\u7801\u4e2d \"tag\" \u662f\u9644\u52a0\u5728\u67d0\u4e2a\u8303\u56f4\u4e0a\u7684\u5b57\u7b26\u4e32\u5143\u6570\u636e\u3002\u6ce8\u91ca\u4e5f\u4e0e\u6837\u5f0f\u4e00\u8d77\u5b58\u50a8\u5728 Range \u4e2d","title":"7. \u6587\u5b57\u8d85\u94fe\u63a5\uff1f\uff08ClickableText\uff09"},{"location":"elements/text/#_4","text":"\u90a3\u4e48\uff0c\u4f60\u5df2\u7ecf\u5b66\u4f1a\u4e86\u5982\u4f55\u81ea\u5b9a\u4e49 Text \u4e2d\u7684\u6837\u5f0f\u548c\u70b9\u51fb\u4e8b\u4ef6\uff0c\u6765\u5c1d\u8bd5\u505a\u51fa\u4e00\u4e2a\u8fd9\u6837\u7684\u6548\u679c\uff1f \u5b9e\u73b0\u7684\u4ee3\u7801\u53ef\u4ee5\u901a\u8fc7\u4ee5\u4e0b\u7684\u65b9\u5f0f\u6765\u67e5\u770b Mkdocs Github","title":"\u5c0f\u8bd5\u725b\u5200"},{"location":"elements/text/#8","text":"\u9ed8\u8ba4\u60c5\u51b5\u4e0b Text \u5e76\u4e0d\u80fd\u8fdb\u884c\u590d\u5236\u7b49\u64cd\u4f5c\uff0c\u6211\u4eec\u9700\u8981\u8bbe\u7f6e SelectionContainer \u6765\u5305\u88c5 Text @Composable fun TextDemo () { SelectionContainer { Column { Text ( text = \"\u6bcf\u5929\u6478\u9c7c\" , modifier = Modifier . fillMaxWidth (), textAlign = TextAlign . Left ) Text ( text = \"\u8fd9\u597d\u5417\" , modifier = Modifier . fillMaxWidth (), textAlign = TextAlign . Center ) Text ( text = \"\u8fd9\u975e\u5e38\u7684\u597d\" , modifier = Modifier . fillMaxWidth (), textAlign = TextAlign . Right ) } } }","title":"8. \u590d\u5236\u6587\u5b57"},{"location":"elements/text/#9","text":"\u6587\u5b57\u6839\u636e\u4e0d\u540c\u60c5\u51b5\u6765\u786e\u5b9a\u6587\u5b57\u7684\u5f3a\u8c03\u7a0b\u5ea6\uff0c\u4ee5\u7a81\u51fa\u91cd\u70b9\u5e76\u4f53\u73b0\u51fa\u89c6\u89c9\u4e0a\u7684\u5c42\u6b21\u611f\u3002 Material Design \u5efa\u8bae\u91c7\u7528\u4e0d\u540c\u7684\u4e0d\u900f\u660e\u5ea6\u6765\u4f20\u8fbe\u8fd9\u4e9b\u4e0d\u540c\u7684\u91cd\u8981\u7a0b\u5ea6\uff0c\u4f60\u53ef\u4ee5\u901a\u8fc7 LocalContentAlpha \u5b9e\u73b0\u6b64\u529f\u80fd\u3002 \u60a8\u53ef\u4ee5\u901a\u8fc7\u4e3a\u6b64 CompositionLocal \u63d0\u4f9b\u4e00\u4e2a\u503c\u6765\u4e3a\u5c42\u6b21\u7ed3\u6784\u6307\u5b9a\u5185\u5bb9 Alpha \u503c\u3002\uff08 CompositionLocal \u662f\u4e00\u4e2a\u7528\u4e8e\u9690\u5f0f\u7684\u4f20\u9012\u53c2\u6570\u7684\u7ec4\u4ef6\uff0c\u540e\u7eed\u4f1a\u8bb2\u5230\uff09 // \u5c06\u5185\u90e8 Text \u7ec4\u4ef6\u7684 alpha \u5f3a\u8c03\u7a0b\u5ea6\u8bbe\u7f6e\u4e3a\u9ad8 // \u6ce8\u610f: MaterialTheme \u5df2\u7ecf\u9ed8\u8ba4\u5c06\u5f3a\u8c03\u7a0b\u5ea6\u8bbe\u7f6e\u4e3a high CompositionLocalProvider ( LocalContentAlpha provides ContentAlpha . high ) { Text ( \"\u8fd9\u91cc\u662fhigh\u5f3a\u8c03\u6548\u679c\" ) } // \u5c06\u5185\u90e8 Text \u7ec4\u4ef6\u7684 alpha \u5f3a\u8c03\u7a0b\u5ea6\u8bbe\u7f6e\u4e3a\u4e2d CompositionLocalProvider ( LocalContentAlpha provides ContentAlpha . medium ) { Text ( \"\u8fd9\u91cc\u662fmedium\u5f3a\u8c03\u6548\u679c\" ) } // \u5c06\u5185\u90e8 Text \u7ec4\u4ef6\u7684 alpha \u5f3a\u8c03\u7a0b\u5ea6\u8bbe\u7f6e\u4e3a\u7981\u7528 CompositionLocalProvider ( LocalContentAlpha provides ContentAlpha . disabled ) { Icon ( \"\u8fd9\u91cc\u662f\u7981\u7528\u540e\u7684\u6548\u679c\" ) } \u8fd9\u662f\u8fd0\u884c\u6548\u679c: \u8fd9\u5f20\u56fe\u53ef\u4ee5\u5f88\u597d\u7684\u8bf4\u660e\u8fd9\u4e2a\u6548\u679c","title":"9. \u6587\u5b57\u5f3a\u8c03\u6548\u679c"},{"location":"elements/text/#10","text":"Text \u53c2\u6570\u8be6\u60c5 Text \u4e00\u4e9b\u7528\u6cd5","title":"10. \u66f4\u591a"},{"location":"elements/textfield/","text":"textfield \u53ef\u4ee5\u521b\u5efa\u4e00\u4e2a\u8f93\u5165\u6846\u3002 \u4e00\u4e2a\u7b80\u5355\u4f7f\u7528\u7684\u4f8b\u5b50\u662f\u8fd9\u6837\u7684\uff1a import androidx.compose.runtime.* @Composable fun TextFieldDemo () { var text by remember { mutableStateOf ( \"\" )} TextField ( value = text , onValueChange = { text = it } ) } 1. singleLine \u53c2\u6570 \u4f7f\u7528 singleLine \u53c2\u6570\u53ef\u4ee5\u5c06 TextField \u8bbe\u7f6e\u6210\u53ea\u6709\u4e00\u884c \u8bbe\u7f6e\u4e86 singleLine \u518d\u8bbe\u7f6e maxLines \u5c06\u65e0\u6548 @Composable fun TextFieldDemo () { var text by remember { mutableStateOf ( \"\" )} TextField ( value = text , onValueChange = { text = it }, singleLine = true ) } 2. label \u53c2\u6570 label \u6807\u7b7e\u53ef\u4ee5\u8fd0\u7528\u5728 TextField \u4e2d\uff0c\u5f53\u805a\u7126\u7684\u65f6\u5019\u4f1a\u6539\u53d8\u5b57\u4f53\u5927\u5c0f @Composable fun TextFieldDemo () { var text by remember { mutableStateOf ( \"\" )} Column ( modifier = Modifier . fillMaxWidth (), horizontalAlignment = Alignment . CenterHorizontally ) { TextField ( value = text , onValueChange = { text = it }, singleLine = true , label = { Text ( \"\u90ae\u7bb1\" ) } ) } } 3. leadingIcon \u53c2\u6570 leadingIcon \u53c2\u6570\u53ef\u4ee5\u5728 TextField \u524d\u9762\u5e03\u7f6e lambda \u8868\u8fbe\u5f0f\u6240\u63a5\u6536\u5230\u7684\u4e1c\u897f TextField ( value = text , onValueChange = { text = it }, leadingIcon = { Icon ( Icons . Filled . Search , null ) }, ) \u867d\u7136\u540d\u5b57\u4e0a\u53eb\u505a leadingIcon \uff0c\u4f46\u662f leadingIcon \u63a5\u6536\u6765\u81ea\u4e00\u4e2a @Composable \u51fd\u6570\u7684 lambda \u8868\u8fbe\u5f0f\uff0c \u6211\u4eec\u4e5f\u53ef\u4ee5\u5728\u91cc\u9762\u586b\u5165 Text \u51fd\u6570 TextField ( value = text , onValueChange = { text = it }, leadingIcon = { Text ( \"\u8054\u7cfb\u4eba\" ) }, ) 4. trailingIcon \u53c2\u6570 trailingIcon \u53c2\u6570\u53ef\u4ee5\u5728 TextField \u5c3e\u90e8\u5e03\u7f6e lambda \u8868\u8fbe\u5f0f\u6240\u63a5\u6536\u5230\u7684\u4e1c\u897f TextField ( value = text , onValueChange = { text = it }, trailingIcon = { Text ( \"@163.com\" ) }, ) trailingIcon = { IconButton ( onClick = { }){ Icon ( Icons . Filled . Send , null ) } }, 5. Color \u53c2\u6570 @Composable fun textFieldColors ( // \u8f93\u5165\u7684\u6587\u5b57\u989c\u8272 textColor : Color = LocalContentColor . current . copy ( LocalContentAlpha . current ), // \u7981\u7528 TextField \u65f6\uff0c\u5df2\u6709\u7684\u6587\u5b57\u989c\u8272 disabledTextColor : Color = textColor . copy ( ContentAlpha . disabled ), // \u8f93\u5165\u6846\u7684\u80cc\u666f\u989c\u8272\uff0c\u5f53\u8bbe\u7f6e\u4e3a Color.Transparent \u65f6\uff0c\u5c06\u900f\u660e backgroundColor : Color = MaterialTheme . colors . onSurface . copy ( alpha = BackgroundOpacity ), // \u8f93\u5165\u6846\u7684\u5149\u6807\u989c\u8272 cursorColor : Color = MaterialTheme . colors . primary , // \u5f53 TextField \u7684 isError \u53c2\u6570\u4e3a true \u65f6\uff0c\u5149\u6807\u7684\u989c\u8272 errorCursorColor : Color = MaterialTheme . colors . error , // \u5f53\u8f93\u5165\u6846\u5904\u4e8e\u7126\u70b9\u65f6\uff0c\u5e95\u90e8\u6307\u793a\u5668\u7684\u989c\u8272 focusedIndicatorColor : Color = MaterialTheme . colors . primary . copy ( alpha = ContentAlpha . high ), // \u5f53\u8f93\u5165\u6846\u4e0d\u5904\u4e8e\u7126\u70b9\u65f6\uff0c\u5e95\u90e8\u6307\u793a\u5668\u7684\u989c\u8272 unfocusedIndicatorColor : Color = MaterialTheme . colors . onSurface . copy ( alpha = UnfocusedIndicatorLineOpacity ), // \u7981\u7528 TextField \u65f6\uff0c\u5e95\u90e8\u6307\u793a\u5668\u7684\u989c\u8272 disabledIndicatorColor : Color = unfocusedIndicatorColor . copy ( alpha = ContentAlpha . disabled ), // \u5f53 TextField \u7684 isError \u53c2\u6570\u4e3a true \u65f6\uff0c\u5e95\u90e8\u6307\u793a\u5668\u7684\u989c\u8272 errorIndicatorColor : Color = MaterialTheme . colors . error , // TextField \u8f93\u5165\u6846\u524d\u5934\u7684\u989c\u8272 leadingIconColor : Color = MaterialTheme . colors . onSurface . copy ( alpha = IconOpacity ), // \u7981\u7528 TextField \u65f6 TextField \u8f93\u5165\u6846\u524d\u5934\u7684\u989c\u8272 disabledLeadingIconColor : Color = leadingIconColor . copy ( alpha = ContentAlpha . disabled ), // \u5f53 TextField \u7684 isError \u53c2\u6570\u4e3a true \u65f6 TextField \u8f93\u5165\u6846\u524d\u5934\u7684\u989c\u8272 errorLeadingIconColor : Color = leadingIconColor , // TextField \u8f93\u5165\u6846\u5c3e\u90e8\u7684\u989c\u8272 trailingIconColor : Color = MaterialTheme . colors . onSurface . copy ( alpha = IconOpacity ), // \u7981\u7528 TextField \u65f6 TextField \u8f93\u5165\u6846\u5c3e\u90e8\u7684\u989c\u8272 disabledTrailingIconColor : Color = trailingIconColor . copy ( alpha = ContentAlpha . disabled ), // \u5f53 TextField \u7684 isError \u53c2\u6570\u4e3a true \u65f6 TextField \u8f93\u5165\u6846\u5c3e\u90e8\u7684\u989c\u8272 errorTrailingIconColor : Color = MaterialTheme . colors . error , // \u5f53\u8f93\u5165\u6846\u5904\u4e8e\u7126\u70b9\u65f6\uff0cLabel \u7684\u989c\u8272 focusedLabelColor : Color = MaterialTheme . colors . primary . copy ( alpha = ContentAlpha . high ), // \u5f53\u8f93\u5165\u6846\u4e0d\u5904\u4e8e\u7126\u70b9\u65f6\uff0cLabel \u7684\u989c\u8272 unfocusedLabelColor : Color = MaterialTheme . colors . onSurface . copy ( ContentAlpha . medium ), // \u7981\u7528 TextField \u65f6\uff0cLabel \u7684\u989c\u8272 disabledLabelColor : Color = unfocusedLabelColor . copy ( ContentAlpha . disabled ), // \u5f53 TextField \u7684 isError \u53c2\u6570\u4e3a true \u65f6\uff0cLabel \u7684\u989c\u8272 errorLabelColor : Color = MaterialTheme . colors . error , // Placeholder \u7684\u989c\u8272 placeholderColor : Color = MaterialTheme . colors . onSurface . copy ( ContentAlpha . medium ), // \u7981\u7528 TextField \u65f6\uff0cplaceholder \u7684\u989c\u8272 disabledPlaceholderColor : Color = placeholderColor . copy ( ContentAlpha . disabled ) ) \u8c03\u7528\u65b9\u6cd5 TextField ( value = text , onValueChange = { text = it }, leadingIcon = { Icon ( Icons . Filled . Search , null ) }, colors = TextFieldDefaults . textFieldColors ( textColor = Color ( 0 xFF0079D3 ), backgroundColor = Color . Transparent ) ) \u5728\u4f60\u4f7f\u7528 IDE \u667a\u80fd\u8865\u5168\u7684\u65f6\u5019\u53ef\u80fd\u9047\u5230\u8fd9\u79cd\u60c5\u51b5 \u89e3\u51b3\u65b9\u6cd5\u5982\u4e0b\uff0c\u624b\u52a8\u6253\u5b8c\u51fd\u6570\u540d \u66f4\u591a TextField \u53c2\u6570\u8be6\u60c5","title":"TextField"},{"location":"elements/textfield/#1-singleline","text":"\u4f7f\u7528 singleLine \u53c2\u6570\u53ef\u4ee5\u5c06 TextField \u8bbe\u7f6e\u6210\u53ea\u6709\u4e00\u884c \u8bbe\u7f6e\u4e86 singleLine \u518d\u8bbe\u7f6e maxLines \u5c06\u65e0\u6548 @Composable fun TextFieldDemo () { var text by remember { mutableStateOf ( \"\" )} TextField ( value = text , onValueChange = { text = it }, singleLine = true ) }","title":"1. singleLine \u53c2\u6570"},{"location":"elements/textfield/#2-label","text":"label \u6807\u7b7e\u53ef\u4ee5\u8fd0\u7528\u5728 TextField \u4e2d\uff0c\u5f53\u805a\u7126\u7684\u65f6\u5019\u4f1a\u6539\u53d8\u5b57\u4f53\u5927\u5c0f @Composable fun TextFieldDemo () { var text by remember { mutableStateOf ( \"\" )} Column ( modifier = Modifier . fillMaxWidth (), horizontalAlignment = Alignment . CenterHorizontally ) { TextField ( value = text , onValueChange = { text = it }, singleLine = true , label = { Text ( \"\u90ae\u7bb1\" ) } ) } }","title":"2. label \u53c2\u6570"},{"location":"elements/textfield/#3-leadingicon","text":"leadingIcon \u53c2\u6570\u53ef\u4ee5\u5728 TextField \u524d\u9762\u5e03\u7f6e lambda \u8868\u8fbe\u5f0f\u6240\u63a5\u6536\u5230\u7684\u4e1c\u897f TextField ( value = text , onValueChange = { text = it }, leadingIcon = { Icon ( Icons . Filled . Search , null ) }, ) \u867d\u7136\u540d\u5b57\u4e0a\u53eb\u505a leadingIcon \uff0c\u4f46\u662f leadingIcon \u63a5\u6536\u6765\u81ea\u4e00\u4e2a @Composable \u51fd\u6570\u7684 lambda \u8868\u8fbe\u5f0f\uff0c \u6211\u4eec\u4e5f\u53ef\u4ee5\u5728\u91cc\u9762\u586b\u5165 Text \u51fd\u6570 TextField ( value = text , onValueChange = { text = it }, leadingIcon = { Text ( \"\u8054\u7cfb\u4eba\" ) }, )","title":"3. leadingIcon \u53c2\u6570"},{"location":"elements/textfield/#4-trailingicon","text":"trailingIcon \u53c2\u6570\u53ef\u4ee5\u5728 TextField \u5c3e\u90e8\u5e03\u7f6e lambda \u8868\u8fbe\u5f0f\u6240\u63a5\u6536\u5230\u7684\u4e1c\u897f TextField ( value = text , onValueChange = { text = it }, trailingIcon = { Text ( \"@163.com\" ) }, ) trailingIcon = { IconButton ( onClick = { }){ Icon ( Icons . Filled . Send , null ) } },","title":"4. trailingIcon \u53c2\u6570"},{"location":"elements/textfield/#5-color","text":"@Composable fun textFieldColors ( // \u8f93\u5165\u7684\u6587\u5b57\u989c\u8272 textColor : Color = LocalContentColor . current . copy ( LocalContentAlpha . current ), // \u7981\u7528 TextField \u65f6\uff0c\u5df2\u6709\u7684\u6587\u5b57\u989c\u8272 disabledTextColor : Color = textColor . copy ( ContentAlpha . disabled ), // \u8f93\u5165\u6846\u7684\u80cc\u666f\u989c\u8272\uff0c\u5f53\u8bbe\u7f6e\u4e3a Color.Transparent \u65f6\uff0c\u5c06\u900f\u660e backgroundColor : Color = MaterialTheme . colors . onSurface . copy ( alpha = BackgroundOpacity ), // \u8f93\u5165\u6846\u7684\u5149\u6807\u989c\u8272 cursorColor : Color = MaterialTheme . colors . primary , // \u5f53 TextField \u7684 isError \u53c2\u6570\u4e3a true \u65f6\uff0c\u5149\u6807\u7684\u989c\u8272 errorCursorColor : Color = MaterialTheme . colors . error , // \u5f53\u8f93\u5165\u6846\u5904\u4e8e\u7126\u70b9\u65f6\uff0c\u5e95\u90e8\u6307\u793a\u5668\u7684\u989c\u8272 focusedIndicatorColor : Color = MaterialTheme . colors . primary . copy ( alpha = ContentAlpha . high ), // \u5f53\u8f93\u5165\u6846\u4e0d\u5904\u4e8e\u7126\u70b9\u65f6\uff0c\u5e95\u90e8\u6307\u793a\u5668\u7684\u989c\u8272 unfocusedIndicatorColor : Color = MaterialTheme . colors . onSurface . copy ( alpha = UnfocusedIndicatorLineOpacity ), // \u7981\u7528 TextField \u65f6\uff0c\u5e95\u90e8\u6307\u793a\u5668\u7684\u989c\u8272 disabledIndicatorColor : Color = unfocusedIndicatorColor . copy ( alpha = ContentAlpha . disabled ), // \u5f53 TextField \u7684 isError \u53c2\u6570\u4e3a true \u65f6\uff0c\u5e95\u90e8\u6307\u793a\u5668\u7684\u989c\u8272 errorIndicatorColor : Color = MaterialTheme . colors . error , // TextField \u8f93\u5165\u6846\u524d\u5934\u7684\u989c\u8272 leadingIconColor : Color = MaterialTheme . colors . onSurface . copy ( alpha = IconOpacity ), // \u7981\u7528 TextField \u65f6 TextField \u8f93\u5165\u6846\u524d\u5934\u7684\u989c\u8272 disabledLeadingIconColor : Color = leadingIconColor . copy ( alpha = ContentAlpha . disabled ), // \u5f53 TextField \u7684 isError \u53c2\u6570\u4e3a true \u65f6 TextField \u8f93\u5165\u6846\u524d\u5934\u7684\u989c\u8272 errorLeadingIconColor : Color = leadingIconColor , // TextField \u8f93\u5165\u6846\u5c3e\u90e8\u7684\u989c\u8272 trailingIconColor : Color = MaterialTheme . colors . onSurface . copy ( alpha = IconOpacity ), // \u7981\u7528 TextField \u65f6 TextField \u8f93\u5165\u6846\u5c3e\u90e8\u7684\u989c\u8272 disabledTrailingIconColor : Color = trailingIconColor . copy ( alpha = ContentAlpha . disabled ), // \u5f53 TextField \u7684 isError \u53c2\u6570\u4e3a true \u65f6 TextField \u8f93\u5165\u6846\u5c3e\u90e8\u7684\u989c\u8272 errorTrailingIconColor : Color = MaterialTheme . colors . error , // \u5f53\u8f93\u5165\u6846\u5904\u4e8e\u7126\u70b9\u65f6\uff0cLabel \u7684\u989c\u8272 focusedLabelColor : Color = MaterialTheme . colors . primary . copy ( alpha = ContentAlpha . high ), // \u5f53\u8f93\u5165\u6846\u4e0d\u5904\u4e8e\u7126\u70b9\u65f6\uff0cLabel \u7684\u989c\u8272 unfocusedLabelColor : Color = MaterialTheme . colors . onSurface . copy ( ContentAlpha . medium ), // \u7981\u7528 TextField \u65f6\uff0cLabel \u7684\u989c\u8272 disabledLabelColor : Color = unfocusedLabelColor . copy ( ContentAlpha . disabled ), // \u5f53 TextField \u7684 isError \u53c2\u6570\u4e3a true \u65f6\uff0cLabel \u7684\u989c\u8272 errorLabelColor : Color = MaterialTheme . colors . error , // Placeholder \u7684\u989c\u8272 placeholderColor : Color = MaterialTheme . colors . onSurface . copy ( ContentAlpha . medium ), // \u7981\u7528 TextField \u65f6\uff0cplaceholder \u7684\u989c\u8272 disabledPlaceholderColor : Color = placeholderColor . copy ( ContentAlpha . disabled ) ) \u8c03\u7528\u65b9\u6cd5 TextField ( value = text , onValueChange = { text = it }, leadingIcon = { Icon ( Icons . Filled . Search , null ) }, colors = TextFieldDefaults . textFieldColors ( textColor = Color ( 0 xFF0079D3 ), backgroundColor = Color . Transparent ) ) \u5728\u4f60\u4f7f\u7528 IDE \u667a\u80fd\u8865\u5168\u7684\u65f6\u5019\u53ef\u80fd\u9047\u5230\u8fd9\u79cd\u60c5\u51b5 \u89e3\u51b3\u65b9\u6cd5\u5982\u4e0b\uff0c\u624b\u52a8\u6253\u5b8c\u51fd\u6570\u540d","title":"5. Color \u53c2\u6570"},{"location":"elements/textfield/#_1","text":"TextField \u53c2\u6570\u8be6\u60c5","title":"\u66f4\u591a"},{"location":"layout/bottomnavigation/","text":"@Composable fun BottomNavigation ( modifier : Modifier = Modifier , backgroundColor : Color = MaterialTheme . colors . primarySurface , contentColor : Color = contentColorFor ( backgroundColor ), elevation : Dp = BottomNavigationDefaults . Elevation , content : RowScope .() -> Unit ): @Composable Unit Material Design bottom navigation Bottom navigation bars \u5141\u8bb8\u5728\u4e00\u4e2a\u5e94\u7528\u7a0b\u5e8f\u7684\u4e3b\u8981\u76ee\u7684\u5730\u4e4b\u95f4\u79fb\u52a8\u3002 BottomNavigation \u5e94\u8be5\u5305\u542b\u591a\u4e2a BottomNavigationItems \u9879\uff0c\u6bcf\u4e2a\u5bfc\u822a\u9879\u4ee3\u8868\u4e00\u4e2a\u5355\u4e00\u7684\u76ee\u7684\u5730\u3002 \u8fd9\u662f\u4e00\u4e2a\u7b80\u5355\u548c Scaffold \u642d\u914d\u7684\u793a\u4f8b\u4ee3\u7801\uff1a @Composable fun ScaffoldDemo (){ var selectedItem by remember { mutableStateOf ( 0 ) } val items = listOf ( \"\u4e3b\u9875\" , \"\u6211\u559c\u6b22\u7684\" , \"\u8bbe\u7f6e\" ) Scaffold ( topBar = { TopAppBar ( title = { Text ( \"\u4e3b\u9875\" ) }, navigationIcon = { IconButton ( onClick = { }) { Icon ( Icons . Filled . ArrowBack , null ) } } ) }, bottomnavigation = { BottomNavigation { items . forEachIndexed { index , item -> BottomNavigationItem ( icon = { Icon ( Icons . Filled . Favorite , contentDescription = null ) }, label = { Text ( item ) }, selected = selectedItem == index , onClick = { selectedItem = index } ) } } } ){ } } \u8fd9\u6837\u4e00\u4e2a\u57fa\u672c\u7684 Bottom navigation bars \u680f\u6211\u4eec\u5c31\u5b9e\u73b0\u5566\uff0c\u662f\u4e0d\u662f\u5f88\u7b80\u5355\uff1f \u6211\u4eec\u53ef\u4ee5\u7a0d\u5fae\u4fee\u6539\u4e00\u70b9\u4ee3\u7801\uff0c\u8ba9\u5bfc\u822a\u680f\u53d8\u6210\u4e09\u4e2a\u4e0d\u540c\u7684\u56fe\u6807\u6309\u94ae \u5c06 BottomNavigationItem \u7684\u4ee3\u7801\u4fee\u6539\u6210\u4ee5\u4e0b BottomNavigationItem ( icon = { when ( index ){ 0 -> Icon ( Icons . Filled . Home , contentDescription = null ) 1 -> Icon ( Icons . Filled . Favorite , contentDescription = null ) else -> Icon ( Icons . Filled . Settings , contentDescription = null ) } }, label = { Text ( item ) }, selected = selectedItem == index , onClick = { selectedItem = index } ) \u81ea\u5b9a\u4e49 BottomNavigation \u680f \u8fd9\u662f\u4e00\u4e2a\u81ea\u5b9a\u4e49 BottomNavigation \u680f\u7684\u6f14\u793a \u5b9e\u73b0\u7684\u4ee3\u7801\u53ef\u4ee5\u901a\u8fc7\u4ee5\u4e0b\u7684\u65b9\u5f0f\u6765\u67e5\u770b Mkdocs Github \u66f4\u591a BottomNavigation \u8be6\u60c5","title":"BottomNavigation"},{"location":"layout/bottomnavigation/#bottomnavigation","text":"\u8fd9\u662f\u4e00\u4e2a\u81ea\u5b9a\u4e49 BottomNavigation \u680f\u7684\u6f14\u793a \u5b9e\u73b0\u7684\u4ee3\u7801\u53ef\u4ee5\u901a\u8fc7\u4ee5\u4e0b\u7684\u65b9\u5f0f\u6765\u67e5\u770b Mkdocs Github","title":"\u81ea\u5b9a\u4e49 BottomNavigation \u680f"},{"location":"layout/bottomnavigation/#_1","text":"BottomNavigation \u8be6\u60c5","title":"\u66f4\u591a"},{"location":"layout/column/","text":"Column \u662f Jetpack Compose \u4e2d\u4e00\u4e2a\u5f88\u57fa\u672c\u7684\u5e03\u5c40\u79cd\u7c7b\uff0c\u5b83\u4f1a\u5c06\u91cc\u9762\u7684 \u6bcf\u4e2a \u7ec4\u4ef6\u4ee5\u884c\u7684\u5f62\u5f0f\u5448\u73b0 @Composable inline fun Column ( modifier : Modifier = Modifier , verticalArrangement : Arrangement . Vertical = Arrangement . Top , horizontalAlignment : Alignment . Horizontal = Alignment . Start , content : ColumnScope .() -> Unit ): Unit 1. Text \u5728 Column \u91cc\u9762\u7684\u4f7f\u7528 class MainActivity : ComponentActivity () { override fun onCreate ( savedInstanceState : Bundle?) { super . onCreate ( savedInstanceState ) setContent { ColumnDemo () } } } @Composable fun ColumnDemo () { Column { Text ( \"\u4f60\u597d\u5440\" ) Text ( \"\u6211\u6b63\u5728\u4f7f\u7528 Android Studio\" ) Text ( \"\u73b0\u5728\u662f\u665a\u4e0a\" ) } } \u6548\u679c\u5982\u4e0b\uff1a 1.\u5c45\u4e2d\u6587\u5b57 \u5982\u679c\u6211\u4eec\u9700\u8981\u5c06 Column \u91cc\u9762\u7684\u6587\u5b57\u5c45\u4e2d\u8be5\u600e\u4e48\u529e\u5462\uff1f \u5f88\u7b80\u5355\uff0c\u6211\u4eec\u53ea\u9700\u8981\u6dfb\u52a0 modifier \u548c horizontalAlignment \u53c2\u6570 \u4ee3\u7801\u5982\u4e0b: @Composable fun ColumnDemo () { Column ( modifier = Modifier . fillMaxWidth (), horizontalAlignment = Alignment . CenterHorizontally ) { Text ( \"\u4f60\u597d\u5440\" ) Text ( \"\u6211\u6b63\u5728\u4f7f\u7528 Android Studio\" ) Text ( \"\u73b0\u5728\u662f\u665a\u4e0a\" ) } } // \u6211\u4eec\u8981\u6ce8\u610f\u7684\u662f\uff0c\u5982\u679c\u4e0d\u6dfb\u52a0 Modifier.fillMaxWidth() // Column \u7684\u5bbd\u5ea6\u5c06\u53d6\u51b3\u4e8e\u91cc\u9762\u6700\u5bbd\u63a7\u4ef6\u7684\u957f\u5ea6 \u6548\u679c\u5982\u4e0b\uff1a 2.\u7279\u5b9a\u6587\u5b57\u5c45\u4e2d \u5982\u679c\u6211\u4eec\u60f3\u8ba9 Column \u91cc\u9762\u7684\u67d0\u4e9b\u6587\u5b57\u5c45\u4e2d\u800c\u4e0d\u662f\u5168\u90e8\u5c45\u4e2d\u600e\u4e48\u529e \u6211\u4eec\u53ea\u9700\u8981\u5728\u9700\u8981\u5c45\u4e2d\u7684\u6587\u5b57\u7684\u5730\u65b9\u6dfb\u52a0 Modifier.align \u53c2\u6570\uff0c\u5e76\u4e14\u5c06 Column \u7684 modifier \u53c2\u6570\u8bbe\u7f6e\u4e3a fillMaxWidth() \u5373\u53ef\u5b9e\u73b0\u6548\u679c \u4ee3\u7801\u5982\u4e0b\uff1a @Composable fun ColumnDemo () { Column ( modifier = Modifier . fillMaxWidth () ){ Text ( text = \"\u591c\u8272\" , modifier = Modifier . align ( Alignment . CenterHorizontally ), style = MaterialTheme . typography . h6 , fontWeight = FontWeight . W900 ) Text ( \"\u4eca\u665a\u7684\u591c\u8272\u5f88\u4e0d\u9519\uff0c\u6211\u548c\u670b\u53cb\u8d70\u5728\u6cb3\u8fb9\u7684\u5c0f\u8def\u4e0a\uff0c\u770b\u5230\u4e86\u5f88\u591a\u7f8e\u4e3d\u7684\u98ce\u666f\" ) } } \u6548\u679c\u5982\u4e0b\uff1a","title":"Column"},{"location":"layout/column/#1-text-column","text":"class MainActivity : ComponentActivity () { override fun onCreate ( savedInstanceState : Bundle?) { super . onCreate ( savedInstanceState ) setContent { ColumnDemo () } } } @Composable fun ColumnDemo () { Column { Text ( \"\u4f60\u597d\u5440\" ) Text ( \"\u6211\u6b63\u5728\u4f7f\u7528 Android Studio\" ) Text ( \"\u73b0\u5728\u662f\u665a\u4e0a\" ) } } \u6548\u679c\u5982\u4e0b\uff1a","title":"1. Text \u5728 Column \u91cc\u9762\u7684\u4f7f\u7528"},{"location":"layout/column/#1","text":"\u5982\u679c\u6211\u4eec\u9700\u8981\u5c06 Column \u91cc\u9762\u7684\u6587\u5b57\u5c45\u4e2d\u8be5\u600e\u4e48\u529e\u5462\uff1f \u5f88\u7b80\u5355\uff0c\u6211\u4eec\u53ea\u9700\u8981\u6dfb\u52a0 modifier \u548c horizontalAlignment \u53c2\u6570 \u4ee3\u7801\u5982\u4e0b: @Composable fun ColumnDemo () { Column ( modifier = Modifier . fillMaxWidth (), horizontalAlignment = Alignment . CenterHorizontally ) { Text ( \"\u4f60\u597d\u5440\" ) Text ( \"\u6211\u6b63\u5728\u4f7f\u7528 Android Studio\" ) Text ( \"\u73b0\u5728\u662f\u665a\u4e0a\" ) } } // \u6211\u4eec\u8981\u6ce8\u610f\u7684\u662f\uff0c\u5982\u679c\u4e0d\u6dfb\u52a0 Modifier.fillMaxWidth() // Column \u7684\u5bbd\u5ea6\u5c06\u53d6\u51b3\u4e8e\u91cc\u9762\u6700\u5bbd\u63a7\u4ef6\u7684\u957f\u5ea6 \u6548\u679c\u5982\u4e0b\uff1a","title":"1.\u5c45\u4e2d\u6587\u5b57"},{"location":"layout/column/#2","text":"\u5982\u679c\u6211\u4eec\u60f3\u8ba9 Column \u91cc\u9762\u7684\u67d0\u4e9b\u6587\u5b57\u5c45\u4e2d\u800c\u4e0d\u662f\u5168\u90e8\u5c45\u4e2d\u600e\u4e48\u529e \u6211\u4eec\u53ea\u9700\u8981\u5728\u9700\u8981\u5c45\u4e2d\u7684\u6587\u5b57\u7684\u5730\u65b9\u6dfb\u52a0 Modifier.align \u53c2\u6570\uff0c\u5e76\u4e14\u5c06 Column \u7684 modifier \u53c2\u6570\u8bbe\u7f6e\u4e3a fillMaxWidth() \u5373\u53ef\u5b9e\u73b0\u6548\u679c \u4ee3\u7801\u5982\u4e0b\uff1a @Composable fun ColumnDemo () { Column ( modifier = Modifier . fillMaxWidth () ){ Text ( text = \"\u591c\u8272\" , modifier = Modifier . align ( Alignment . CenterHorizontally ), style = MaterialTheme . typography . h6 , fontWeight = FontWeight . W900 ) Text ( \"\u4eca\u665a\u7684\u591c\u8272\u5f88\u4e0d\u9519\uff0c\u6211\u548c\u670b\u53cb\u8d70\u5728\u6cb3\u8fb9\u7684\u5c0f\u8def\u4e0a\uff0c\u770b\u5230\u4e86\u5f88\u591a\u7f8e\u4e3d\u7684\u98ce\u666f\" ) } } \u6548\u679c\u5982\u4e0b\uff1a","title":"2.\u7279\u5b9a\u6587\u5b57\u5c45\u4e2d"},{"location":"layout/custom_layout/","text":"\u6982\u8ff0 Compose \u5df2\u7ecf\u5185\u7f6e\u4e86\u8bb8\u591a\u7ec4\u4ef6\uff0c\u8bf8\u5982 Column\uff0cRow\uff0cBox \u7b49\u3002\u5f00\u53d1\u8005\u53ef\u4ee5\u901a\u8fc7\u8fd9\u4e9b\u7ec4\u5408\u8fd9\u4e9b\u5df2\u6709\u7684\u7ec4\u4ef6\u6765\u5b9a\u5236\u81ea\u5df1\u7684\u4e13\u5c5e\u7ec4\u4ef6\u3002 \u5c31\u50cf\u5728\u4f20\u7edfView\u7cfb\u7edf\u4e2d\uff0c\u5f53 LinearLayout \u7b49\u57fa\u7840\u5e03\u5c40\u65e0\u6cd5\u6ee1\u8db3\u4f60\u7684\u9700\u6c42\u65f6\uff0c\u4f60\u53ef\u4ee5\u901a\u8fc7\u91cd\u5199 measure \u4e0e layout \u6765\u8fbe\u6210\u4f60\u7684\u671f\u671b\u3002Compose \u6cbf\u7528\u4e86\u8fd9\u4e00\u7406\u5ff5\uff0c\u5728\u4e00\u4e9b\u573a\u666f\u4e0b\u5982\u679c Compose \u5185\u7f6e\u7ec4\u4ef6\u53ef\u80fd\u65e0\u6cd5\u6ee1\u8db3\u4f60\u7684\u9700\u6c42\uff0c\u53ef\u4ee5\u5c1d\u8bd5\u901a\u8fc7\u5b9a\u5236\u6d4b\u91cf\u4e0e\u5e03\u5c40\u8fc7\u7a0b\u6765\u5b8c\u6210\u9700\u6c42\u3002\u4e8b\u5b9e\u4e0a\uff0cCompose \u5185\u7f6e\u7ec4\u4ef6\u4e5f\u662f\u901a\u8fc7\u5b9a\u5236 Layout \u6765\u8fbe\u6210\u7684\uff0c\u53ea\u662f\u4e00\u4e2a\u66f4\u9ad8\u5c42\u6b21\u7684\u5c01\u88c5\u3002 \u5728\u5b66\u4e60\u5982\u4f55\u5b9a\u5236 Layout \u4e4b\u524d\uff0c\u6211\u4eec\u9700\u8981\u5148\u4e86\u89e3\u4e0b Compose \u7684\u5e03\u5c40\u539f\u7406\u3002 Compose \u5e03\u5c40\u539f\u7406 composable \u88ab\u8c03\u7528\u65f6\u4f1a\u5c06\u81ea\u8eab\u5305\u542b\u7684UI\u5143\u7d20\u6dfb\u52a0\u5230UI\u6811\u4e2d\u5e76\u5728\u5c4f\u5e55\u4e0a\u88ab\u6e32\u67d3\u51fa\u6765\u3002\u6bcf\u4e2a UI \u5143\u7d20\u90fd\u6709\u4e00\u4e2a\u7236\u5143\u7d20\uff0c\u53ef\u80fd\u4f1a\u5305\u542b\u96f6\u81f3\u591a\u4e2a\u5b50\u5143\u7d20\u3002\u6bcf\u4e2a\u5143\u7d20\u90fd\u6709\u4e00\u4e2a\u76f8\u5bf9\u5176\u7236\u5143\u7d20\u7684\u5185\u90e8\u4f4d\u7f6e\u548c\u5c3a\u5bf8\u3002 \u6bcf\u4e2a\u5143\u7d20\u90fd\u4f1a\u88ab\u8981\u6c42\u6839\u636e\u7236\u5143\u7d20\u7684\u7ea6\u675f\u6765\u8fdb\u884c\u81ea\u6211\u6d4b\u91cf(\u7c7b\u4f3c\u4f20\u7edf View \u4e2d\u7684 MeasureSpec )\uff0c\u7ea6\u675f\u4e2d\u5305\u542b\u4e86\u7236\u5143\u7d20\u5141\u8bb8\u5b50\u5143\u7d20\u7684\u6700\u5927\u5bbd\u5ea6\u4e0e\u9ad8\u5ea6\u548c\u6700\u5c0f\u5bbd\u5ea6\u4e0e\u9ad8\u5ea6\uff0c\u5f53\u7236\u5143\u7d20\u60f3\u8981\u5f3a\u5236\u5b50\u5143\u7d20\u5bbd\u9ad8\u4e3a\u56fa\u5b9a\u503c\u65f6\uff0c\u5176\u5bf9\u5e94\u7684\u6700\u5927\u503c\u4e0e\u6700\u5c0f\u503c\u5c31\u662f\u76f8\u540c\u7684\u3002 \u5bf9\u4e8e\u4e00\u4e9b\u5305\u542b\u591a\u4e2a\u5b50\u5143\u7d20\u7684UI\u5143\u7d20\uff0c\u9700\u8981\u6d4b\u91cf\u6bcf\u4e00\u4e2a\u5b50\u5143\u7d20\u4ece\u800c\u786e\u5b9a\u5f53\u524dUI\u5143\u7d20\u81ea\u8eab\u7684\u5927\u5c0f\u3002\u5e76\u4e14\u5728\u6bcf\u4e2a\u5b50\u5143\u7d20\u81ea\u6211\u6d4b\u91cf\u540e\uff0c\u5f53\u524dUI\u5143\u7d20\u53ef\u4ee5\u6839\u636e\u5176\u6240\u9700\u8981\u7684\u5bbd\u5ea6\u4e0e\u9ad8\u5ea6\u8fdb\u884c\u5728\u81ea\u5df1\u5185\u90e8\u8fdb\u884c\u653e\u7f6e Compose UI \u4e0d\u5141\u8bb8\u591a\u6b21\u6d4b\u91cf \uff0c\u5f53\u524dUI\u5143\u7d20\u7684\u6bcf\u4e00\u4e2a\u5b50\u5143\u7d20\u5747\u4e0d\u80fd\u88ab\u91cd\u590d\u8fdb\u884c\u6d4b\u91cf\uff0c\u6362\u53e5\u8bdd\u8bf4\u5c31\u662f \u6bcf\u4e2a\u5b50\u5143\u7d20\u53ea\u5141\u8bb8\u88ab\u6d4b\u91cf\u4e00\u6b21 \u3002\u8fd9\u6837\u505a\u7684\u597d\u5904\u662f\u4ec0\u4e48\uff1f\u8fd9\u6837\u505a\u7684\u597d\u5904\u662f\u4e3a\u4e86\u63d0\u9ad8\u6027\u80fd\u3002\u5728\u4f20\u7edf View \u7cfb\u7edf\u4e2d\u4e00\u4e2a UI \u5143\u7d20\u5141\u8bb8\u591a\u6b21\u6d4b\u91cf\u5b50\u5143\u7d20\uff0c\u6211\u4eec\u5047\u8bbe\u5bf9\u5b50\u5143\u7d20\u6d4b\u91cf\u4e24\u6b21\uff0c\u800c\u8be5\u5b50\u5143\u7d20\u53ef\u80fd\u53c8\u5bf9\u5176\u5b50\u5143\u7d20\u53c8\u6d4b\u91cf\u4e86\u4e24\u6b21\uff0c\u603b\u4f53\u4e0a\u5f53\u524d UI \u5143\u7d20\u91cd\u65b0\u6d4b\u91cf\u4e00\u6b21\uff0c\u5219\u5b59\u5b50\u5143\u7d20\u5c31\u9700\u8981\u6d4b\u91cf\u56db\u6b21\uff0c\u6d4b\u91cf\u6b21\u6570\u4f1a\u968f\u7740\u6df1\u5ea6\u800c\u6307\u6570\u7ea7\u4e0a\u5347\u3002\u4ee5\u6b64\u7c7b\u63a8\uff0c\u90a3\u4e48\u4e00\u6b21\u5e03\u5c40\u6574\u9897 UI \u6811\u90fd\u9700\u8981\u505a\u5927\u91cf\u7684\u5de5\u4f5c\uff0c\u5f88\u96be\u4fdd\u6301\u5e94\u7528\u7a0b\u5e8f\u7684\u826f\u597d\u6027\u80fd\u3002 \u4e3a\u907f\u514d\u4f20\u7edf View \u7cfb\u7edf\u6d4b\u91cf\u5e03\u5c40\u7684\u6027\u80fd\u9677\u9631\uff0cCompose \u9650\u5236\u4e86\u6bcf\u4e2a\u5b50\u5143\u7d20\u7684\u6d4b\u91cf\u6b21\u6570\uff0c\u53ef\u4ee5\u9ad8\u6548\u5904\u7406\u6df1\u5ea6\u6bd4\u8f83\u5927\u7684 UI \u6811(\u6781\u7aef\u60c5\u51b5\u662f\u9000\u5316\u6210\u94fe\u8868\u7684\u6811\u5f62\u7ed3\u6784)\u3002\u4f46\u662f\u5728\u6709\u4e9b\u573a\u666f\u4e0b\uff0c\u591a\u6b21\u6d4b\u91cf\u5b50\u5143\u7d20\u662f\u6709\u610f\u4e49\u7684\uff0c\u6211\u4eec\u662f\u9700\u8981\u83b7\u53d6\u5230\u5b50\u5143\u7d20\u591a\u6b21\u6d4b\u91cf\u7684\u4fe1\u606f\u7684\u3002\u5bf9\u4e8e\u8fd9\u4e9b\u60c5\u51b5\uff0c\u6709\u529e\u6cd5\u505a\u5230\u8fd9\u4e00\u70b9\uff0c\u6211\u4eec\u5c06\u5728\u540e\u9762\u8ba8\u8bba\u3002 \u4f7f\u7528 Layout Modifier \u4f7f\u7528 Modifier.layout() \u624b\u52a8\u63a7\u5236\u5143\u7d20\u7684\u6d4b\u91cf\u548c\u5e03\u5c40\u3002\u901a\u5e38 layout \u4fee\u9970\u7b26\u7684\u4f7f\u7528\u65b9\u6cd5\u50cf\u4e0b\u9762\u8fd9\u6837\u3002 fun Modifier . customLayoutModifier (...) = Modifier . layout { measurable , constraints -> ... }) \u5f53\u4f7f\u7528 layout \u4fee\u9970\u7b26\u65f6\uff0c\u4f60\u4f20\u5165\u7684\u56de\u8c03 lambda \u9700\u8981\u5305\u542b\u4e24\u4e2a\u53c2\u6570\uff1ameasurable\u3001constraints measurable\uff1a\u5b50\u5143\u7d20\u7684\u6d4b\u91cf\u53e5\u67c4\uff0c\u901a\u8fc7\u63d0\u4f9b\u7684api\u5b8c\u6210\u6d4b\u91cf\u4e0e\u5e03\u5c40\u8fc7\u7a0b constraints: \u5b50\u5143\u7d20\u7684\u6d4b\u91cf\u7ea6\u675f\uff0c\u5305\u62ec\u5bbd\u5ea6\u4e0e\u9ad8\u5ea6\u7684\u6700\u5927\u503c\u4e0e\u6700\u5c0f\u503c\u3002 Layout Modifier \u4f7f\u7528\u793a\u4f8b \u6709\u65f6\u4f60\u60f3\u5728\u5c4f\u5e55\u4e0a\u5c55\u793a\u4e00\u6bb5\u6587\u672c\u4fe1\u606f\uff0c\u901a\u5e38\u4f60\u4f1a\u4f7f\u7528\u5230 Compose \u5185\u7f6e\u7684 Text \u7ec4\u4ef6\u3002\u5355\u5355\u663e\u793a\u6587\u672c\u662f\u4e0d\u591f\u7684\uff0c\u4f60\u5e0c\u671b\u6307\u5b9a Text \u9876\u90e8\u5230\u6587\u672c\u57fa\u7ebf\u7684\u9ad8\u5ea6\uff0c\u8ba9\u6587\u672c\u770b\u7684\u66f4\u81ea\u7136\u4e00\u4e9b\u3002\u4f7f\u7528\u5185\u7f6e\u7684 padding \u4fee\u9970\u7b26\u662f\u65e0\u6cd5\u6ee1\u8db3\u4f60\u7684\u9700\u6c42\u7684\uff0c\u4ed6\u53ea\u80fd\u6307\u5b9a Text \u9876\u90e8\u5230\u6587\u672c\u9876\u90e8\u7684\u9ad8\u5ea6\uff0c\u6b64\u65f6\u4f60\u5c31\u9700\u8981\u4f7f\u7528\u5230 layout \u4fee\u9970\u7b26\u4e86\u3002 \u6211\u4eec\u9996\u5148\u521b\u5efa\u4e00\u4e2a firstBaselineToTop \u4fee\u9970\u7b26 fun Modifier . firstBaselineToTop ( firstBaselineToTop : Dp ) = Modifier . layout { measurable , constraints -> ... } \u6b63\u5982\u6211\u4eec\u5728 Compose \u5e03\u5c40\u539f\u7406\u4e2d\u6240\u63d0\u5230\u7684\uff0c \u6bcf\u4e2a\u5b50\u5143\u7d20\u53ea\u5141\u8bb8\u88ab\u6d4b\u91cf\u4e00\u6b21 \u3002 \u901a\u8fc7\u4f7f\u7528 measurable.measure(constraints) \u5b8c\u6210\u5b50\u5143\u7d20\u7684\u6d4b\u91cf\uff0c\u5982\u679c\u5c06 lambda \u7684 constraints \u76f4\u63a5\u4f20\u5165\u5219\u610f\u5473\u7740\uff1a\u4f60\u5c06\u7236\u5143\u7d20\u7ed9\u5f53\u524d\u5143\u7d20\u7684\u9650\u5236\u76f4\u63a5\u63d0\u4f9b\u4e86\u5f53\u524d\u5143\u7d20\u7684\u5b50\u5143\u7d20\uff0c\u81ea\u8eab\u6ca1\u6709\u589e\u52a0\u4efb\u4f55\u989d\u5916\u7684\u9650\u5236\u3002\u5b50\u5143\u7d20\u6d4b\u91cf\u7684\u7ed3\u679c\u88ab\u5305\u88c5\u5728\u4e00\u4e2a Placeable \u5b9e\u4f8b\u4e2d\uff0c\u53ef\u901a\u8fc7\u8be5 Placeable \u5b9e\u4f8b\u83b7\u53d6\u5b50\u5143\u7d20\u6d4b\u91cf\u7ed3\u679c\u3002 \u5728\u6211\u4eec\u7684\u793a\u4f8b\u4e2d\u5f53\u524d Text \u5143\u7d20\u4e5f\u4e0d\u5bf9\u5b50\u5143\u7d20\u8fdb\u884c\u989d\u5916\u9650\u5236\u3002 fun Modifier . firstBaselineToTop ( firstBaselineToTop : Dp ) = Modifier . layout { measurable , constraints -> val placeable = measurable . measure ( constraints ) ... } \u73b0\u5728\u5b50\u5143\u7d20\u5df2\u7ecf\u5b8c\u6210\u4e86\u6d4b\u91cf\u6d41\u7a0b\uff0c\u4f60\u9700\u8981\u8ba1\u7b97\u5f53\u524d\u5143\u7d20\u7684\u6253\u7b97\u5e76\u901a\u8fc7 layout(width, height) \u65b9\u6cd5\u5bf9\u5f53\u524d\u5143\u7d20\u7684\u5bbd\u5ea6\u4e0e\u9ad8\u5ea6\u8fdb\u884c\u6307\u5b9a\u3002\u5e76\u5c06\u5b50\u5143\u7d20\u7684\u5e03\u5c40\u6d41\u7a0b\u5199\u5165\u5728 layout(width, height) \u7684 lambda \u53c2\u6570\u4e2d\u3002 \u5728\u6211\u4eec\u7684\u793a\u4f8b\u4e2d\u5f53\u524d Text \u5143\u7d20\u7684\u5bbd\u5ea6\u5219\u662f\u6587\u672c\u5bbd\u5ea6\uff0c\u800c\u9ad8\u5ea6\u5219\u662f\u6211\u4eec\u6307\u5b9a\u7684 Text \u9876\u90e8\u5230\u6587\u672c\u57fa\u7ebf\u9ad8\u5ea6\u4e0e\u6587\u672c\u57fa\u7ebf\u5230 Text \u5e95\u90e8\u7684\u9ad8\u5ea6\u4e4b\u548c\u3002 fun Modifier . firstBaselineToTop ( firstBaselineToTop : Dp ) = Modifier . layout { measurable , constraints -> val placeable = measurable . measure ( constraints ) check ( placeable [ FirstBaseline ] != AlignmentLine . Unspecified ) val firstBaseline = placeable [ FirstBaseline ] val placeableY = firstBaselineToTop . roundToPx () - firstBaseline val height = placeable . height + placeableY layout ( placeable . width , height ) { ... } } \u73b0\u5728\u4f60\u53ef\u4ee5\u901a\u8fc7\u4f7f\u7528 placeable.placeRelative(x, y) \u6765\u5b8c\u6210\u5b50\u5143\u7d20\u7684\u5e03\u5c40\u6d41\u7a0b\uff0c\u8fd9\u662f\u5fc5\u8981\u7684\u3002 placeRelative \u4f1a\u6839\u636e\u5f53\u524d layoutDirection \u81ea\u52a8\u8c03\u6574\u5b50\u5143\u7d20\u7684\u4f4d\u7f6e\u3002 \u5728\u6211\u4eec\u7684\u793a\u4f8b\u4e2d\uff0c\u5f53\u524d\u5b50\u5143\u7d20\u7684\u6a2a\u5411\u5750\u6807\u76f8\u5bf9\u5f53\u524d\u5143\u7d20\u4e3a\u96f6\uff0c\u800c\u7eb5\u5411\u5750\u6807\u5219\u4e3a Text \u7ec4\u4ef6\u9876\u90e8\u5230\u6587\u672c\u9876\u90e8\u7684\u8ddd\u79bb\u3002 fun Modifier . firstBaselineToTop ( firstBaselineToTop : Dp ) = Modifier . layout { measurable , constraints -> ... val placeableY = firstBaselineToTop . roundToPx () - firstBaseline val height = placeable . height + placeableY layout ( placeable . width , height ) { placeable . placeRelative ( 0 , placeableY ) } } \u4e3a\u9884\u89c8\u5e03\u5c40\u7ed3\u679c\uff0c\u6211\u4eec\u521b\u5efa\u4e86\u4e24\u4e2a\u9884\u89c8\u89c6\u56fe\u3002 @Preview @Composable fun TextWithPaddingToBaselinePreview () { LayoutsCodelabTheme { Text ( \"Hi there!\" , Modifier . firstBaselineToTop ( 24. dp )) } } @Preview @Composable fun TextWithNormalPaddingPreview () { LayoutsCodelabTheme { Text ( \"Hi there!\" , Modifier . padding ( top = 24. dp )) } } \u9884\u89c8\u6548\u679c \u4f7f\u7528 Layout Composable Layout Modifier \u4f1a\u5c06\u5f53\u524d\u5143\u7d20\u7684\u6240\u6709\u5b50\u5143\u7d20\u89c6\u4f5c\u4e3a\u6574\u4f53\u8fdb\u884c\u7edf\u4e00\u7684\u6d4b\u91cf\u4e0e\u5e03\u5c40\uff0c\u591a\u9002\u7528\u4e8e\u7edf\u4e00\u5904\u7406\u7684\u573a\u666f\u3002\u7136\u800c\u6211\u4eec\u6709\u65f6\u662f\u9700\u8981\u7cbe\u7ec6\u5316\u6d4b\u91cf\u5e03\u5c40\u6bcf\u4e00\u4e2a\u5b50\u7ec4\u4ef6\uff0c\u8fd9\u9700\u8981\u6211\u4eec\u8fdb\u884c\u5b8c\u5168\u7684\u81ea\u5b9a\u4e49 Layout\u3002\u8fd9\u7c7b\u4f3c\u4e8e\u4f20\u7edf View \u7cfb\u7edf\u4e2d\u5b9a\u5236 View \u4e0e ViewGroup \u6d4b\u91cf\u5e03\u5c40\u6d41\u7a0b\u7684\u533a\u522b\u3002\u5bf9\u4e8e\u5b9a\u5236 \u201cViewGroup\u201d \u7684\u573a\u666f\uff0c\u6211\u4eec\u5e94\u8be5\u4f7f\u7528 Layout Composable \u4e86\u3002\u9996\u5148\u6211\u4eec\u9700\u8981\u521b\u5efa\u4e00\u4e2a Layout Composable\u3002 @Composable fun CustomLayout ( modifier : Modifier = Modifier , // custom layout attributes content : @Composable () -> Unit ) { Layout ( modifier = modifier , content = content ) { measurables , constraints -> // measure and position children given constraints logic here } } \u53ef\u4ee5\u770b\u5230\uff0cLayout \u9700\u8981\u586b\u5199\u4e09\u4e2a\u53c2\u6570\uff1amodifier\uff0ccontent\uff0cmeasurePolicy modifier \uff1a\u7531\u5916\u90e8\u4f20\u5165\u7684\u4fee\u9970\u7b26\uff0c\u4f1a\u51b3\u5b9a\u8be5 UI \u5143\u7d20\u7684 constraints content \uff1a\u5728 content \u4e2d\u58f0\u660e\u6240\u6709\u5b50\u5143\u7d20\u4fe1\u606f measurePolicy \uff1a\u9ed8\u8ba4\u573a\u666f\u4e0b\u53ea\u5b9e\u73b0 measure \u5373\u53ef\uff0c\u4e0a\u9762\u793a\u4f8b\u4e2d\u6700\u540e\u4f20\u5165\u7684 lambda \u5c31\u662f measure \u7684\u5b9e\u73b0\u3002\u5f53\u4f60\u60f3\u8981\u4e3a\u4f60\u7684 Layout Composable \u9002\u914d Intrinsics \u65f6(\u5b98\u65b9\u4e2d\u6587\u7ffb\u8bd1\u4e3a\u56fa\u6709\u7279\u6027\u6d4b\u91cf)\uff0c\u5219\u9700\u8981\u91cd\u5199 minIntrinsicWidth \u3001 minIntrinsicHeight \u3001 maxIntrinsicWidth \u3001 maxIntrinsicHeight \u65b9\u6cd5\uff0c\u6709\u5173\u4e8e\u56fa\u6709\u7279\u6027\u6d4b\u91cf\u7684\u6587\u7ae0\u540e\u7eed\u4f1a\u66f4\u65b0\uff0c\u8bf7\u6301\u7eed\u5173\u6ce8\u3002 Layout Composable \u4f7f\u7528\u793a\u4f8b \u6211\u4eec\u53ef\u4ee5\u901a\u8fc7 Layout Composable \u5b9a\u5236\u4e00\u4e2a\u81ea\u5df1\u4e13\u5c5e\u7684 Column\uff0c\u9996\u5148\u6211\u4eec\u9700\u8981\u58f0\u660e\u8fd9\u4e2a Composable\u3002 @Composable fun MyOwnColumn ( modifier : Modifier = Modifier , content : @Composable () -> Unit ) { Layout ( modifier = modifier , content = content ) { measurables , constraints -> // measure and position children given constraints logic here } } \u548c Layout Modifier \u4e00\u6837\uff0c\u6211\u4eec\u9700\u8981\u5bf9\u6240\u6709\u5b50\u7ec4\u4ef6\u8fdb\u884c\u4e00\u6b21\u6d4b\u91cf\u3002 \u5207\u8bb0\uff0c\u6bcf\u4e2a\u5b50\u5143\u7d20\u53ea\u5141\u8bb8\u88ab\u6d4b\u91cf\u4e00\u6b21 \u3002 \u4e0e Layout Modifier \u4e0d\u540c\u7684\u662f\uff0c\u8fd9\u91cc\u7684 measurables \u662f\u4e00\u4e2a List\uff0c\u800c Layout Modifier \u5219\u53ea\u662f\u4e00\u4e2a measurable\uff0c\u56e0\u4e3a\u4ed6\u5c06\u6240\u6709\u5b50\u5143\u7d20\u770b\u4f5c\u4e86\u4e00\u4e2a\u6574\u4f53\u3002 \u5728\u6211\u4eec\u7684\u793a\u4f8b\u4e2d\u4ecd\u7136\u4e0d\u5bf9\u5b50\u5143\u7d20\u8fdb\u884c\u989d\u5916\u9650\u5236\uff0c\u6700\u7ec8\u5c06\u6bcf\u6b21\u6d4b\u91cf\u7684\u7ed3\u679c\u4fdd\u5b58\u5230 placeables \u8fd9\u4e2a List \u4e2d\u3002 @Composable fun MyOwnColumn ( modifier : Modifier = Modifier , content : @Composable () -> Unit ) { Layout ( modifier = modifier , content = content ) { measurables , constraints -> val placeables = measurables . map { measurable -> // Measure each child measurable . measure ( constraints ) } } } \u73b0\u5728\u5728\u5c06\u8fd9\u4e9b\u5b50\u5143\u7d20\u5e03\u5c40\u4e4b\u524d\uff0c\u4f60\u9700\u8981\u8ba1\u7b97\u5f53\u524d\u5b9a\u5236 column \u6240\u5e94\u8be5\u5360\u7528\u7684\u5c4f\u5e55\u5bbd\u5ea6\u4e0e\u9ad8\u5ea6\u3002\u8fd9\u6837\u4e3a\u4e86\u51fa\u4e8e\u7b80\u5355\u8003\u8651\uff0c\u9009\u62e9\u5c06\u5bbd\u5ea6\u4e0e\u9ad8\u5ea6\u8bbe\u7f6e\u4e3a\u5176\u7236\u5143\u7d20\u6240\u5141\u8bb8\u7684\u6700\u5927\u9ad8\u5ea6\u4e0e\u5bbd\u5ea6\u3002\u4e0e Layout Modifier \u4e00\u6837\u901a\u8fc7 layout(width, height) \u65b9\u6cd5\u5bf9\u5f53\u524d\u5143\u7d20\u7684\u5bbd\u5ea6\u4e0e\u9ad8\u5ea6\u8fdb\u884c\u6307\u5b9a\u3002 @Composable fun MyOwnColumn ( modifier : Modifier = Modifier , content : @Composable () -> Unit ) { Layout ( modifier = modifier , content = content ) { measurables , constraints -> ... layout ( constraints . maxWidth , constraints . maxHeight ) { // Place children } } } \u5177\u4f53\u5b50\u5143\u7d20\u7684\u5e03\u5c40\u4e5f\u4e0e Layout Modifier \u662f\u76f8\u540c\u7684\u3002\u4f5c\u4e3a Column \u662f\u9700\u8981\u5c06\u5b50\u5143\u7d20\u8fdb\u884c\u5782\u76f4\u6392\u5217\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u4ec5\u9700\u6307\u5b9a\u6bcf\u4e00\u4e2a\u5b50\u5143\u7d20\u7684\u9876\u90e8\u76f8\u5bf9\u4f4d\u7f6e\u5373\u53ef\u3002 @Composable fun MyOwnColumn ( modifier : Modifier = Modifier , content : @Composable () -> Unit ) { Layout ( modifier = modifier , content = content ) { measurables , constraints -> val placeables = measurables . map { measurable -> measurable . measure ( constraints ) } var yPosition = 0 layout ( constraints . maxWidth , constraints . maxHeight ) { placeables . forEach { placeable -> placeable . placeRelative ( x = 0 , y = yPosition ) yPosition += placeable . height } } } } \u4e3a\u9884\u89c8\u5e03\u5c40\u7ed3\u679c\uff0c\u6211\u4eec\u521b\u5efa\u4e86\u9884\u89c8\u89c6\u56fe\uff0c\u521b\u5efa\u81ea\u5df1\u5b9a\u5236\u7684 Column\uff0c\u5e76\u6dfb\u52a0\u4e86\u4e00\u4e9b\u5b50\u5143\u7d20\u3002 @Composable fun BodyContent ( modifier : Modifier = Modifier ) { MyOwnColumn ( modifier . padding ( 8. dp )) { Text ( \"MyOwnColumn\" ) Text ( \"places items\" ) Text ( \"vertically.\" ) Text ( \"We've done it by hand!\" ) } } \u9884\u89c8\u6548\u679c","title":"\u81ea\u5b9a\u4e49Layout"},{"location":"layout/custom_layout/#_1","text":"Compose \u5df2\u7ecf\u5185\u7f6e\u4e86\u8bb8\u591a\u7ec4\u4ef6\uff0c\u8bf8\u5982 Column\uff0cRow\uff0cBox \u7b49\u3002\u5f00\u53d1\u8005\u53ef\u4ee5\u901a\u8fc7\u8fd9\u4e9b\u7ec4\u5408\u8fd9\u4e9b\u5df2\u6709\u7684\u7ec4\u4ef6\u6765\u5b9a\u5236\u81ea\u5df1\u7684\u4e13\u5c5e\u7ec4\u4ef6\u3002 \u5c31\u50cf\u5728\u4f20\u7edfView\u7cfb\u7edf\u4e2d\uff0c\u5f53 LinearLayout \u7b49\u57fa\u7840\u5e03\u5c40\u65e0\u6cd5\u6ee1\u8db3\u4f60\u7684\u9700\u6c42\u65f6\uff0c\u4f60\u53ef\u4ee5\u901a\u8fc7\u91cd\u5199 measure \u4e0e layout \u6765\u8fbe\u6210\u4f60\u7684\u671f\u671b\u3002Compose \u6cbf\u7528\u4e86\u8fd9\u4e00\u7406\u5ff5\uff0c\u5728\u4e00\u4e9b\u573a\u666f\u4e0b\u5982\u679c Compose \u5185\u7f6e\u7ec4\u4ef6\u53ef\u80fd\u65e0\u6cd5\u6ee1\u8db3\u4f60\u7684\u9700\u6c42\uff0c\u53ef\u4ee5\u5c1d\u8bd5\u901a\u8fc7\u5b9a\u5236\u6d4b\u91cf\u4e0e\u5e03\u5c40\u8fc7\u7a0b\u6765\u5b8c\u6210\u9700\u6c42\u3002\u4e8b\u5b9e\u4e0a\uff0cCompose \u5185\u7f6e\u7ec4\u4ef6\u4e5f\u662f\u901a\u8fc7\u5b9a\u5236 Layout \u6765\u8fbe\u6210\u7684\uff0c\u53ea\u662f\u4e00\u4e2a\u66f4\u9ad8\u5c42\u6b21\u7684\u5c01\u88c5\u3002 \u5728\u5b66\u4e60\u5982\u4f55\u5b9a\u5236 Layout \u4e4b\u524d\uff0c\u6211\u4eec\u9700\u8981\u5148\u4e86\u89e3\u4e0b Compose \u7684\u5e03\u5c40\u539f\u7406\u3002","title":"\u6982\u8ff0"},{"location":"layout/custom_layout/#compose","text":"composable \u88ab\u8c03\u7528\u65f6\u4f1a\u5c06\u81ea\u8eab\u5305\u542b\u7684UI\u5143\u7d20\u6dfb\u52a0\u5230UI\u6811\u4e2d\u5e76\u5728\u5c4f\u5e55\u4e0a\u88ab\u6e32\u67d3\u51fa\u6765\u3002\u6bcf\u4e2a UI \u5143\u7d20\u90fd\u6709\u4e00\u4e2a\u7236\u5143\u7d20\uff0c\u53ef\u80fd\u4f1a\u5305\u542b\u96f6\u81f3\u591a\u4e2a\u5b50\u5143\u7d20\u3002\u6bcf\u4e2a\u5143\u7d20\u90fd\u6709\u4e00\u4e2a\u76f8\u5bf9\u5176\u7236\u5143\u7d20\u7684\u5185\u90e8\u4f4d\u7f6e\u548c\u5c3a\u5bf8\u3002 \u6bcf\u4e2a\u5143\u7d20\u90fd\u4f1a\u88ab\u8981\u6c42\u6839\u636e\u7236\u5143\u7d20\u7684\u7ea6\u675f\u6765\u8fdb\u884c\u81ea\u6211\u6d4b\u91cf(\u7c7b\u4f3c\u4f20\u7edf View \u4e2d\u7684 MeasureSpec )\uff0c\u7ea6\u675f\u4e2d\u5305\u542b\u4e86\u7236\u5143\u7d20\u5141\u8bb8\u5b50\u5143\u7d20\u7684\u6700\u5927\u5bbd\u5ea6\u4e0e\u9ad8\u5ea6\u548c\u6700\u5c0f\u5bbd\u5ea6\u4e0e\u9ad8\u5ea6\uff0c\u5f53\u7236\u5143\u7d20\u60f3\u8981\u5f3a\u5236\u5b50\u5143\u7d20\u5bbd\u9ad8\u4e3a\u56fa\u5b9a\u503c\u65f6\uff0c\u5176\u5bf9\u5e94\u7684\u6700\u5927\u503c\u4e0e\u6700\u5c0f\u503c\u5c31\u662f\u76f8\u540c\u7684\u3002 \u5bf9\u4e8e\u4e00\u4e9b\u5305\u542b\u591a\u4e2a\u5b50\u5143\u7d20\u7684UI\u5143\u7d20\uff0c\u9700\u8981\u6d4b\u91cf\u6bcf\u4e00\u4e2a\u5b50\u5143\u7d20\u4ece\u800c\u786e\u5b9a\u5f53\u524dUI\u5143\u7d20\u81ea\u8eab\u7684\u5927\u5c0f\u3002\u5e76\u4e14\u5728\u6bcf\u4e2a\u5b50\u5143\u7d20\u81ea\u6211\u6d4b\u91cf\u540e\uff0c\u5f53\u524dUI\u5143\u7d20\u53ef\u4ee5\u6839\u636e\u5176\u6240\u9700\u8981\u7684\u5bbd\u5ea6\u4e0e\u9ad8\u5ea6\u8fdb\u884c\u5728\u81ea\u5df1\u5185\u90e8\u8fdb\u884c\u653e\u7f6e Compose UI \u4e0d\u5141\u8bb8\u591a\u6b21\u6d4b\u91cf \uff0c\u5f53\u524dUI\u5143\u7d20\u7684\u6bcf\u4e00\u4e2a\u5b50\u5143\u7d20\u5747\u4e0d\u80fd\u88ab\u91cd\u590d\u8fdb\u884c\u6d4b\u91cf\uff0c\u6362\u53e5\u8bdd\u8bf4\u5c31\u662f \u6bcf\u4e2a\u5b50\u5143\u7d20\u53ea\u5141\u8bb8\u88ab\u6d4b\u91cf\u4e00\u6b21 \u3002\u8fd9\u6837\u505a\u7684\u597d\u5904\u662f\u4ec0\u4e48\uff1f\u8fd9\u6837\u505a\u7684\u597d\u5904\u662f\u4e3a\u4e86\u63d0\u9ad8\u6027\u80fd\u3002\u5728\u4f20\u7edf View \u7cfb\u7edf\u4e2d\u4e00\u4e2a UI \u5143\u7d20\u5141\u8bb8\u591a\u6b21\u6d4b\u91cf\u5b50\u5143\u7d20\uff0c\u6211\u4eec\u5047\u8bbe\u5bf9\u5b50\u5143\u7d20\u6d4b\u91cf\u4e24\u6b21\uff0c\u800c\u8be5\u5b50\u5143\u7d20\u53ef\u80fd\u53c8\u5bf9\u5176\u5b50\u5143\u7d20\u53c8\u6d4b\u91cf\u4e86\u4e24\u6b21\uff0c\u603b\u4f53\u4e0a\u5f53\u524d UI \u5143\u7d20\u91cd\u65b0\u6d4b\u91cf\u4e00\u6b21\uff0c\u5219\u5b59\u5b50\u5143\u7d20\u5c31\u9700\u8981\u6d4b\u91cf\u56db\u6b21\uff0c\u6d4b\u91cf\u6b21\u6570\u4f1a\u968f\u7740\u6df1\u5ea6\u800c\u6307\u6570\u7ea7\u4e0a\u5347\u3002\u4ee5\u6b64\u7c7b\u63a8\uff0c\u90a3\u4e48\u4e00\u6b21\u5e03\u5c40\u6574\u9897 UI \u6811\u90fd\u9700\u8981\u505a\u5927\u91cf\u7684\u5de5\u4f5c\uff0c\u5f88\u96be\u4fdd\u6301\u5e94\u7528\u7a0b\u5e8f\u7684\u826f\u597d\u6027\u80fd\u3002 \u4e3a\u907f\u514d\u4f20\u7edf View \u7cfb\u7edf\u6d4b\u91cf\u5e03\u5c40\u7684\u6027\u80fd\u9677\u9631\uff0cCompose \u9650\u5236\u4e86\u6bcf\u4e2a\u5b50\u5143\u7d20\u7684\u6d4b\u91cf\u6b21\u6570\uff0c\u53ef\u4ee5\u9ad8\u6548\u5904\u7406\u6df1\u5ea6\u6bd4\u8f83\u5927\u7684 UI \u6811(\u6781\u7aef\u60c5\u51b5\u662f\u9000\u5316\u6210\u94fe\u8868\u7684\u6811\u5f62\u7ed3\u6784)\u3002\u4f46\u662f\u5728\u6709\u4e9b\u573a\u666f\u4e0b\uff0c\u591a\u6b21\u6d4b\u91cf\u5b50\u5143\u7d20\u662f\u6709\u610f\u4e49\u7684\uff0c\u6211\u4eec\u662f\u9700\u8981\u83b7\u53d6\u5230\u5b50\u5143\u7d20\u591a\u6b21\u6d4b\u91cf\u7684\u4fe1\u606f\u7684\u3002\u5bf9\u4e8e\u8fd9\u4e9b\u60c5\u51b5\uff0c\u6709\u529e\u6cd5\u505a\u5230\u8fd9\u4e00\u70b9\uff0c\u6211\u4eec\u5c06\u5728\u540e\u9762\u8ba8\u8bba\u3002","title":"Compose \u5e03\u5c40\u539f\u7406"},{"location":"layout/custom_layout/#layout-modifier","text":"\u4f7f\u7528 Modifier.layout() \u624b\u52a8\u63a7\u5236\u5143\u7d20\u7684\u6d4b\u91cf\u548c\u5e03\u5c40\u3002\u901a\u5e38 layout \u4fee\u9970\u7b26\u7684\u4f7f\u7528\u65b9\u6cd5\u50cf\u4e0b\u9762\u8fd9\u6837\u3002 fun Modifier . customLayoutModifier (...) = Modifier . layout { measurable , constraints -> ... }) \u5f53\u4f7f\u7528 layout \u4fee\u9970\u7b26\u65f6\uff0c\u4f60\u4f20\u5165\u7684\u56de\u8c03 lambda \u9700\u8981\u5305\u542b\u4e24\u4e2a\u53c2\u6570\uff1ameasurable\u3001constraints measurable\uff1a\u5b50\u5143\u7d20\u7684\u6d4b\u91cf\u53e5\u67c4\uff0c\u901a\u8fc7\u63d0\u4f9b\u7684api\u5b8c\u6210\u6d4b\u91cf\u4e0e\u5e03\u5c40\u8fc7\u7a0b constraints: \u5b50\u5143\u7d20\u7684\u6d4b\u91cf\u7ea6\u675f\uff0c\u5305\u62ec\u5bbd\u5ea6\u4e0e\u9ad8\u5ea6\u7684\u6700\u5927\u503c\u4e0e\u6700\u5c0f\u503c\u3002","title":"\u4f7f\u7528 Layout Modifier"},{"location":"layout/custom_layout/#layout-modifier_1","text":"\u6709\u65f6\u4f60\u60f3\u5728\u5c4f\u5e55\u4e0a\u5c55\u793a\u4e00\u6bb5\u6587\u672c\u4fe1\u606f\uff0c\u901a\u5e38\u4f60\u4f1a\u4f7f\u7528\u5230 Compose \u5185\u7f6e\u7684 Text \u7ec4\u4ef6\u3002\u5355\u5355\u663e\u793a\u6587\u672c\u662f\u4e0d\u591f\u7684\uff0c\u4f60\u5e0c\u671b\u6307\u5b9a Text \u9876\u90e8\u5230\u6587\u672c\u57fa\u7ebf\u7684\u9ad8\u5ea6\uff0c\u8ba9\u6587\u672c\u770b\u7684\u66f4\u81ea\u7136\u4e00\u4e9b\u3002\u4f7f\u7528\u5185\u7f6e\u7684 padding \u4fee\u9970\u7b26\u662f\u65e0\u6cd5\u6ee1\u8db3\u4f60\u7684\u9700\u6c42\u7684\uff0c\u4ed6\u53ea\u80fd\u6307\u5b9a Text \u9876\u90e8\u5230\u6587\u672c\u9876\u90e8\u7684\u9ad8\u5ea6\uff0c\u6b64\u65f6\u4f60\u5c31\u9700\u8981\u4f7f\u7528\u5230 layout \u4fee\u9970\u7b26\u4e86\u3002 \u6211\u4eec\u9996\u5148\u521b\u5efa\u4e00\u4e2a firstBaselineToTop \u4fee\u9970\u7b26 fun Modifier . firstBaselineToTop ( firstBaselineToTop : Dp ) = Modifier . layout { measurable , constraints -> ... } \u6b63\u5982\u6211\u4eec\u5728 Compose \u5e03\u5c40\u539f\u7406\u4e2d\u6240\u63d0\u5230\u7684\uff0c \u6bcf\u4e2a\u5b50\u5143\u7d20\u53ea\u5141\u8bb8\u88ab\u6d4b\u91cf\u4e00\u6b21 \u3002 \u901a\u8fc7\u4f7f\u7528 measurable.measure(constraints) \u5b8c\u6210\u5b50\u5143\u7d20\u7684\u6d4b\u91cf\uff0c\u5982\u679c\u5c06 lambda \u7684 constraints \u76f4\u63a5\u4f20\u5165\u5219\u610f\u5473\u7740\uff1a\u4f60\u5c06\u7236\u5143\u7d20\u7ed9\u5f53\u524d\u5143\u7d20\u7684\u9650\u5236\u76f4\u63a5\u63d0\u4f9b\u4e86\u5f53\u524d\u5143\u7d20\u7684\u5b50\u5143\u7d20\uff0c\u81ea\u8eab\u6ca1\u6709\u589e\u52a0\u4efb\u4f55\u989d\u5916\u7684\u9650\u5236\u3002\u5b50\u5143\u7d20\u6d4b\u91cf\u7684\u7ed3\u679c\u88ab\u5305\u88c5\u5728\u4e00\u4e2a Placeable \u5b9e\u4f8b\u4e2d\uff0c\u53ef\u901a\u8fc7\u8be5 Placeable \u5b9e\u4f8b\u83b7\u53d6\u5b50\u5143\u7d20\u6d4b\u91cf\u7ed3\u679c\u3002 \u5728\u6211\u4eec\u7684\u793a\u4f8b\u4e2d\u5f53\u524d Text \u5143\u7d20\u4e5f\u4e0d\u5bf9\u5b50\u5143\u7d20\u8fdb\u884c\u989d\u5916\u9650\u5236\u3002 fun Modifier . firstBaselineToTop ( firstBaselineToTop : Dp ) = Modifier . layout { measurable , constraints -> val placeable = measurable . measure ( constraints ) ... } \u73b0\u5728\u5b50\u5143\u7d20\u5df2\u7ecf\u5b8c\u6210\u4e86\u6d4b\u91cf\u6d41\u7a0b\uff0c\u4f60\u9700\u8981\u8ba1\u7b97\u5f53\u524d\u5143\u7d20\u7684\u6253\u7b97\u5e76\u901a\u8fc7 layout(width, height) \u65b9\u6cd5\u5bf9\u5f53\u524d\u5143\u7d20\u7684\u5bbd\u5ea6\u4e0e\u9ad8\u5ea6\u8fdb\u884c\u6307\u5b9a\u3002\u5e76\u5c06\u5b50\u5143\u7d20\u7684\u5e03\u5c40\u6d41\u7a0b\u5199\u5165\u5728 layout(width, height) \u7684 lambda \u53c2\u6570\u4e2d\u3002 \u5728\u6211\u4eec\u7684\u793a\u4f8b\u4e2d\u5f53\u524d Text \u5143\u7d20\u7684\u5bbd\u5ea6\u5219\u662f\u6587\u672c\u5bbd\u5ea6\uff0c\u800c\u9ad8\u5ea6\u5219\u662f\u6211\u4eec\u6307\u5b9a\u7684 Text \u9876\u90e8\u5230\u6587\u672c\u57fa\u7ebf\u9ad8\u5ea6\u4e0e\u6587\u672c\u57fa\u7ebf\u5230 Text \u5e95\u90e8\u7684\u9ad8\u5ea6\u4e4b\u548c\u3002 fun Modifier . firstBaselineToTop ( firstBaselineToTop : Dp ) = Modifier . layout { measurable , constraints -> val placeable = measurable . measure ( constraints ) check ( placeable [ FirstBaseline ] != AlignmentLine . Unspecified ) val firstBaseline = placeable [ FirstBaseline ] val placeableY = firstBaselineToTop . roundToPx () - firstBaseline val height = placeable . height + placeableY layout ( placeable . width , height ) { ... } } \u73b0\u5728\u4f60\u53ef\u4ee5\u901a\u8fc7\u4f7f\u7528 placeable.placeRelative(x, y) \u6765\u5b8c\u6210\u5b50\u5143\u7d20\u7684\u5e03\u5c40\u6d41\u7a0b\uff0c\u8fd9\u662f\u5fc5\u8981\u7684\u3002 placeRelative \u4f1a\u6839\u636e\u5f53\u524d layoutDirection \u81ea\u52a8\u8c03\u6574\u5b50\u5143\u7d20\u7684\u4f4d\u7f6e\u3002 \u5728\u6211\u4eec\u7684\u793a\u4f8b\u4e2d\uff0c\u5f53\u524d\u5b50\u5143\u7d20\u7684\u6a2a\u5411\u5750\u6807\u76f8\u5bf9\u5f53\u524d\u5143\u7d20\u4e3a\u96f6\uff0c\u800c\u7eb5\u5411\u5750\u6807\u5219\u4e3a Text \u7ec4\u4ef6\u9876\u90e8\u5230\u6587\u672c\u9876\u90e8\u7684\u8ddd\u79bb\u3002 fun Modifier . firstBaselineToTop ( firstBaselineToTop : Dp ) = Modifier . layout { measurable , constraints -> ... val placeableY = firstBaselineToTop . roundToPx () - firstBaseline val height = placeable . height + placeableY layout ( placeable . width , height ) { placeable . placeRelative ( 0 , placeableY ) } } \u4e3a\u9884\u89c8\u5e03\u5c40\u7ed3\u679c\uff0c\u6211\u4eec\u521b\u5efa\u4e86\u4e24\u4e2a\u9884\u89c8\u89c6\u56fe\u3002 @Preview @Composable fun TextWithPaddingToBaselinePreview () { LayoutsCodelabTheme { Text ( \"Hi there!\" , Modifier . firstBaselineToTop ( 24. dp )) } } @Preview @Composable fun TextWithNormalPaddingPreview () { LayoutsCodelabTheme { Text ( \"Hi there!\" , Modifier . padding ( top = 24. dp )) } } \u9884\u89c8\u6548\u679c","title":"Layout Modifier \u4f7f\u7528\u793a\u4f8b"},{"location":"layout/custom_layout/#layout-composable","text":"Layout Modifier \u4f1a\u5c06\u5f53\u524d\u5143\u7d20\u7684\u6240\u6709\u5b50\u5143\u7d20\u89c6\u4f5c\u4e3a\u6574\u4f53\u8fdb\u884c\u7edf\u4e00\u7684\u6d4b\u91cf\u4e0e\u5e03\u5c40\uff0c\u591a\u9002\u7528\u4e8e\u7edf\u4e00\u5904\u7406\u7684\u573a\u666f\u3002\u7136\u800c\u6211\u4eec\u6709\u65f6\u662f\u9700\u8981\u7cbe\u7ec6\u5316\u6d4b\u91cf\u5e03\u5c40\u6bcf\u4e00\u4e2a\u5b50\u7ec4\u4ef6\uff0c\u8fd9\u9700\u8981\u6211\u4eec\u8fdb\u884c\u5b8c\u5168\u7684\u81ea\u5b9a\u4e49 Layout\u3002\u8fd9\u7c7b\u4f3c\u4e8e\u4f20\u7edf View \u7cfb\u7edf\u4e2d\u5b9a\u5236 View \u4e0e ViewGroup \u6d4b\u91cf\u5e03\u5c40\u6d41\u7a0b\u7684\u533a\u522b\u3002\u5bf9\u4e8e\u5b9a\u5236 \u201cViewGroup\u201d \u7684\u573a\u666f\uff0c\u6211\u4eec\u5e94\u8be5\u4f7f\u7528 Layout Composable \u4e86\u3002\u9996\u5148\u6211\u4eec\u9700\u8981\u521b\u5efa\u4e00\u4e2a Layout Composable\u3002 @Composable fun CustomLayout ( modifier : Modifier = Modifier , // custom layout attributes content : @Composable () -> Unit ) { Layout ( modifier = modifier , content = content ) { measurables , constraints -> // measure and position children given constraints logic here } } \u53ef\u4ee5\u770b\u5230\uff0cLayout \u9700\u8981\u586b\u5199\u4e09\u4e2a\u53c2\u6570\uff1amodifier\uff0ccontent\uff0cmeasurePolicy modifier \uff1a\u7531\u5916\u90e8\u4f20\u5165\u7684\u4fee\u9970\u7b26\uff0c\u4f1a\u51b3\u5b9a\u8be5 UI \u5143\u7d20\u7684 constraints content \uff1a\u5728 content \u4e2d\u58f0\u660e\u6240\u6709\u5b50\u5143\u7d20\u4fe1\u606f measurePolicy \uff1a\u9ed8\u8ba4\u573a\u666f\u4e0b\u53ea\u5b9e\u73b0 measure \u5373\u53ef\uff0c\u4e0a\u9762\u793a\u4f8b\u4e2d\u6700\u540e\u4f20\u5165\u7684 lambda \u5c31\u662f measure \u7684\u5b9e\u73b0\u3002\u5f53\u4f60\u60f3\u8981\u4e3a\u4f60\u7684 Layout Composable \u9002\u914d Intrinsics \u65f6(\u5b98\u65b9\u4e2d\u6587\u7ffb\u8bd1\u4e3a\u56fa\u6709\u7279\u6027\u6d4b\u91cf)\uff0c\u5219\u9700\u8981\u91cd\u5199 minIntrinsicWidth \u3001 minIntrinsicHeight \u3001 maxIntrinsicWidth \u3001 maxIntrinsicHeight \u65b9\u6cd5\uff0c\u6709\u5173\u4e8e\u56fa\u6709\u7279\u6027\u6d4b\u91cf\u7684\u6587\u7ae0\u540e\u7eed\u4f1a\u66f4\u65b0\uff0c\u8bf7\u6301\u7eed\u5173\u6ce8\u3002","title":"\u4f7f\u7528 Layout Composable"},{"location":"layout/custom_layout/#layout-composable_1","text":"\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7 Layout Composable \u5b9a\u5236\u4e00\u4e2a\u81ea\u5df1\u4e13\u5c5e\u7684 Column\uff0c\u9996\u5148\u6211\u4eec\u9700\u8981\u58f0\u660e\u8fd9\u4e2a Composable\u3002 @Composable fun MyOwnColumn ( modifier : Modifier = Modifier , content : @Composable () -> Unit ) { Layout ( modifier = modifier , content = content ) { measurables , constraints -> // measure and position children given constraints logic here } } \u548c Layout Modifier \u4e00\u6837\uff0c\u6211\u4eec\u9700\u8981\u5bf9\u6240\u6709\u5b50\u7ec4\u4ef6\u8fdb\u884c\u4e00\u6b21\u6d4b\u91cf\u3002 \u5207\u8bb0\uff0c\u6bcf\u4e2a\u5b50\u5143\u7d20\u53ea\u5141\u8bb8\u88ab\u6d4b\u91cf\u4e00\u6b21 \u3002 \u4e0e Layout Modifier \u4e0d\u540c\u7684\u662f\uff0c\u8fd9\u91cc\u7684 measurables \u662f\u4e00\u4e2a List\uff0c\u800c Layout Modifier \u5219\u53ea\u662f\u4e00\u4e2a measurable\uff0c\u56e0\u4e3a\u4ed6\u5c06\u6240\u6709\u5b50\u5143\u7d20\u770b\u4f5c\u4e86\u4e00\u4e2a\u6574\u4f53\u3002 \u5728\u6211\u4eec\u7684\u793a\u4f8b\u4e2d\u4ecd\u7136\u4e0d\u5bf9\u5b50\u5143\u7d20\u8fdb\u884c\u989d\u5916\u9650\u5236\uff0c\u6700\u7ec8\u5c06\u6bcf\u6b21\u6d4b\u91cf\u7684\u7ed3\u679c\u4fdd\u5b58\u5230 placeables \u8fd9\u4e2a List \u4e2d\u3002 @Composable fun MyOwnColumn ( modifier : Modifier = Modifier , content : @Composable () -> Unit ) { Layout ( modifier = modifier , content = content ) { measurables , constraints -> val placeables = measurables . map { measurable -> // Measure each child measurable . measure ( constraints ) } } } \u73b0\u5728\u5728\u5c06\u8fd9\u4e9b\u5b50\u5143\u7d20\u5e03\u5c40\u4e4b\u524d\uff0c\u4f60\u9700\u8981\u8ba1\u7b97\u5f53\u524d\u5b9a\u5236 column \u6240\u5e94\u8be5\u5360\u7528\u7684\u5c4f\u5e55\u5bbd\u5ea6\u4e0e\u9ad8\u5ea6\u3002\u8fd9\u6837\u4e3a\u4e86\u51fa\u4e8e\u7b80\u5355\u8003\u8651\uff0c\u9009\u62e9\u5c06\u5bbd\u5ea6\u4e0e\u9ad8\u5ea6\u8bbe\u7f6e\u4e3a\u5176\u7236\u5143\u7d20\u6240\u5141\u8bb8\u7684\u6700\u5927\u9ad8\u5ea6\u4e0e\u5bbd\u5ea6\u3002\u4e0e Layout Modifier \u4e00\u6837\u901a\u8fc7 layout(width, height) \u65b9\u6cd5\u5bf9\u5f53\u524d\u5143\u7d20\u7684\u5bbd\u5ea6\u4e0e\u9ad8\u5ea6\u8fdb\u884c\u6307\u5b9a\u3002 @Composable fun MyOwnColumn ( modifier : Modifier = Modifier , content : @Composable () -> Unit ) { Layout ( modifier = modifier , content = content ) { measurables , constraints -> ... layout ( constraints . maxWidth , constraints . maxHeight ) { // Place children } } } \u5177\u4f53\u5b50\u5143\u7d20\u7684\u5e03\u5c40\u4e5f\u4e0e Layout Modifier \u662f\u76f8\u540c\u7684\u3002\u4f5c\u4e3a Column \u662f\u9700\u8981\u5c06\u5b50\u5143\u7d20\u8fdb\u884c\u5782\u76f4\u6392\u5217\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u4ec5\u9700\u6307\u5b9a\u6bcf\u4e00\u4e2a\u5b50\u5143\u7d20\u7684\u9876\u90e8\u76f8\u5bf9\u4f4d\u7f6e\u5373\u53ef\u3002 @Composable fun MyOwnColumn ( modifier : Modifier = Modifier , content : @Composable () -> Unit ) { Layout ( modifier = modifier , content = content ) { measurables , constraints -> val placeables = measurables . map { measurable -> measurable . measure ( constraints ) } var yPosition = 0 layout ( constraints . maxWidth , constraints . maxHeight ) { placeables . forEach { placeable -> placeable . placeRelative ( x = 0 , y = yPosition ) yPosition += placeable . height } } } } \u4e3a\u9884\u89c8\u5e03\u5c40\u7ed3\u679c\uff0c\u6211\u4eec\u521b\u5efa\u4e86\u9884\u89c8\u89c6\u56fe\uff0c\u521b\u5efa\u81ea\u5df1\u5b9a\u5236\u7684 Column\uff0c\u5e76\u6dfb\u52a0\u4e86\u4e00\u4e9b\u5b50\u5143\u7d20\u3002 @Composable fun BodyContent ( modifier : Modifier = Modifier ) { MyOwnColumn ( modifier . padding ( 8. dp )) { Text ( \"MyOwnColumn\" ) Text ( \"places items\" ) Text ( \"vertically.\" ) Text ( \"We've done it by hand!\" ) } } \u9884\u89c8\u6548\u679c","title":"Layout Composable \u4f7f\u7528\u793a\u4f8b"},{"location":"layout/intrinsic/","text":"\u56fa\u6709\u7279\u6027\u6d4b\u91cf\u662f\u4ec0\u4e48 \u5728 \u81ea\u5b9a\u4e49Layout \u4e2d\u6211\u4eec\u63d0\u5230 Compose \u5e03\u5c40\u539f\u7406\uff0cCompose \u4e2d\u7684\u6bcf\u4e2a UI \u7ec4\u4ef6\u662f\u4e0d\u5141\u8bb8\u591a\u6b21\u8fdb\u884c\u6d4b\u91cf\u7684\uff0c\u591a\u6b21\u6d4b\u91cf\u5728\u8fd0\u884c\u65f6\u4f1a\u629b\u5f02\u5e38\uff0c\u7981\u6b62\u591a\u6b21\u6d4b\u91cf\u7684\u597d\u5904\u662f\u4e3a\u4e86\u63d0\u9ad8\u6027\u80fd\uff0c\u4f46\u5728\u5f88\u591a\u573a\u666f\u4e2d\u591a\u6b21\u6d4b\u91cf\u5b50 UI \u7ec4\u4ef6\u662f\u6709\u610f\u4e49\u7684\u3002\u5728 Jetpack Compose \u4ee3\u7801\u5b9e\u9a8c\u5ba4\u4e2d\u5c31\u63d0\u4f9b\u4e86\u8fd9\u6837\u4e00\u79cd\u573a\u666f\uff0c\u6211\u4eec\u5e0c\u671b\u4e2d\u95f4\u5206\u5272\u7ebf\u9ad8\u5ea6\u4e0e\u4e24\u8fb9\u6587\u6848\u9ad8\u7684\u4e00\u8fb9\u4fdd\u6301\u76f8\u7b49\u3002 \u4e3a\u5b9e\u73b0\u8fd9\u4e2a\u9700\u6c42\uff0c\u5b98\u65b9\u6240\u63d0\u4f9b\u7684\u8bbe\u8ba1\u65b9\u6848\u662f\u5e0c\u671b\u7236\u7ec4\u4ef6\u53ef\u4ee5\u9884\u5148\u83b7\u53d6\u5230\u4e24\u8fb9\u7684\u6587\u6848\u7ec4\u4ef6\u9ad8\u5ea6\u4fe1\u606f\uff0c\u7136\u540e\u8ba1\u7b97\u4e24\u8fb9\u9ad8\u5ea6\u7684\u6700\u5927\u503c\u5373\u53ef\u786e\u5b9a\u5f53\u524d\u7236\u7ec4\u4ef6\u7684\u9ad8\u5ea6\u503c\uff0c\u6b64\u65f6\u4ec5\u9700\u5c06\u5206\u5272\u7ebf\u9ad8\u5ea6\u503c\u94fa\u6ee1\u6574\u4e2a\u7236\u7ec4\u4ef6\u5373\u53ef\u3002 \u4e3a\u4e86\u5b9e\u73b0\u7236\u7ec4\u4ef6\u9884\u5148\u83b7\u53d6\u6587\u6848\u7ec4\u4ef6\u9ad8\u5ea6\u4fe1\u606f\u4ece\u800c\u786e\u5b9a\u81ea\u8eab\u7684\u9ad8\u5ea6\u4fe1\u606f\uff0cCompose \u4e3a\u5f00\u53d1\u8005\u4eec\u63d0\u4f9b\u4e86\u56fa\u6709\u7279\u6027\u6d4b\u91cf\u673a\u5236\uff0c\u5141\u8bb8\u5f00\u53d1\u8005\u5728\u6bcf\u4e2a\u5b50\u7ec4\u4ef6\u6b63\u5f0f\u6d4b\u91cf\u524d\u80fd\u83b7\u53d6\u5230\u6bcf\u4e2a\u5b50\u7ec4\u4ef6\u7684\u5bbd\u9ad8\u7b49\u4fe1\u606f\u3002 \u5728\u57fa\u7840\u7ec4\u4ef6\u4e2d\u4f7f\u7528\u56fa\u6709\u7279\u6027\u6d4b\u91cf \u4f7f\u7528\u56fa\u6709\u7279\u6027\u6d4b\u91cf\u7684\u524d\u63d0\u662f\u5f53\u524d\u4f5c\u7528\u7684 Layout \u9700\u8981\u9002\u914d\u56fa\u6709\u7279\u6027\u6d4b\u91cf\uff0c\u76ee\u524d\u8bb8\u591a\u57fa\u7840\u7ec4\u4ef6\u5df2\u7ecf\u5b8c\u6210\u5bf9\u56fa\u6709\u7279\u6027\u6d4b\u91cf\u7684\u9002\u914d\uff0c\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528\u3002 \u5728\u4e0a\u9762\u6240\u63d0\u5230\u7684\u4f8b\u5b50\u4e2d\u7236\u7ec4\u4ef6\u6240\u63d0\u4f9b\u7684\u80fd\u529b\u4f7f\u7528\u57fa\u7840\u7ec4\u4ef6\u4e2d\u7684 Row \u7ec4\u4ef6\u5373\u53ef\u627f\u62c5\uff0c\u6211\u4eec\u4ec5\u9700\u4e3a Row \u7ec4\u4ef6\u9ad8\u5ea6\u8bbe\u7f6e\u56fa\u6709\u7279\u6027\u6d4b\u91cf\u5373\u53ef\u3002\u6211\u4eec\u4f7f\u7528 Modifier.height(IntrinsicSize.Min) \u5373\u53ef\u4e3a\u9ad8\u5ea6\u8bbe\u7f6e\u56fa\u6709\u7279\u6027\u6d4b\u91cf\u3002 @Composable fun TwoTexts ( modifier : Modifier = Modifier , text1 : String , text2 : String ) { Row ( modifier = modifier . height ( IntrinsicSize . Min )) { // I'm here Text ( modifier = Modifier . weight ( 1f ) . padding ( start = 4. dp ) . wrapContentWidth ( Alignment . Start ), text = text1 ) Divider ( color = Color . Black , modifier = Modifier . fillMaxHeight (). width ( 1. dp )) Text ( modifier = Modifier . weight ( 1f ) . padding ( end = 4. dp ) . wrapContentWidth ( Alignment . End ), text = text2 ) } } @Preview @Composable fun TwoTextsPreview () { LayoutsCodelabTheme { Surface { TwoTexts ( text1 = \"Hi\" , text2 = \"there\" ) } } } \u901a\u8fc7\u4f7f\u7528\u56fa\u6709\u7279\u6027\u6d4b\u91cf\u5373\u53ef\u5b8c\u6210\u4e0a\u9762\u6240\u8ff0\u573a\u666f\u7684\u9700\u6c42\uff0c\u5c55\u793a\u6548\u679c\u5982\u56fe\u6240\u793a\u3002 \u503c\u5f97\u6ce8\u610f\u7684\u662f\u6b64\u65f6\u6211\u4eec\u7684 Modifier \u4ec5\u4f7f\u7528 Modifier.height(IntrinsicSize.Min) \u4e3a\u9ad8\u5ea6\u8bbe\u7f6e\u4e86\u56fa\u6709\u7279\u6027\u6d4b\u91cf\uff0c\u5e76\u6ca1\u6709\u8fdb\u884c\u5bbd\u5ea6\u7684\u8bbe\u7f6e\u3002\u6b64\u65f6\u6240\u8868\u8fbe\u7684\u610f\u601d\u662f\uff0c\u5f53\u5bbd\u5ea6\u4e0d\u9650\u65f6\u901a\u8fc7\u5b50\u7ec4\u4ef6\u9884\u5148\u6d4b\u91cf\u7684\u5bbd\u9ad8\u4fe1\u606f\u6240\u80fd\u8ba1\u7b97\u7684\u9ad8\u5ea6\u6700\u5c11\u53ef\u4ee5\u662f\u591a\u5c11\u3002\u5f53\u7136\u4f60\u4e5f\u53ef\u4ee5\u8fdb\u884c\u5bbd\u5ea6\u7684\u8bbe\u7f6e\uff0c\u5f53\u5bbd\u5ea6\u53d7\u9650\u65f6\u901a\u8fc7\u5b50\u7ec4\u4ef6\u9884\u5148\u6d4b\u91cf\u7684\u5bbd\u9ad8\u4fe1\u606f\u6240\u80fd\u8ba1\u7b97\u7684\u9ad8\u5ea6\u6700\u5c11\u53ef\u4ee5\u662f\u591a\u5c11\u3002 \u53ef\u80fd\u4f60\u4e0d\u80fd\u7406\u89e3\u5bbd\u5ea6\u53d7\u9650\u53ef\u80fd\u5f71\u54cd\u9ad8\u5ea6\u8fd9\u4ef6\u4e8b\uff0c\u5176\u5b9e\u6211\u4eec\u5e38\u7528\u7684 Text \u7ec4\u4ef6\u5f53\u5bbd\u5ea6\u6536\u5230\u4e0d\u540c\u9650\u5236\u65f6\uff0c\u5176\u9ad8\u5ea6\u5c31\u662f\u4e0d\u4e00\u6837\u7684\u3002 Column ( Modifier . fillMaxSize ()) { Box ( Modifier . width ( 50. dp ). background ( Color . Red )) { Text ( text = \"Jetpack Compose is an excellent development tool\" ) } Box ( Modifier . width ( 100. dp ). background ( Color . Yellow )) { Text ( text = \"Jetpack Compose is an excellent development tool\" ) } } \u26a0\ufe0f \u6ce8\u610f\u4e8b\u9879\uff1a \u4f60\u53ea\u80fd\u5bf9\u5df2\u7ecf\u9002\u914d\u56fa\u6709\u7279\u6027\u6d4b\u91cf\u80fd\u529b\u7684\u7ec4\u4ef6\u4f7f\u7528 IntrinsicSize.Min \u6216 IntrinsicSize.Max \uff0c\u5426\u5219\u7a0b\u5e8f\u4f1a\u8fd0\u884c\u65f6\u629b\u51fa\u5f02\u5e38\u800c\u5d29\u6e83\u3002\u5bf9\u4e8e\u6240\u6709\u81ea\u5b9a\u4e49 Layout \u7684\u5f00\u53d1\u8005\u6765\u8bf4\u5982\u679c\u652f\u6301\u4f7f\u7528\u8005\u4f7f\u7528\u56fa\u6709\u7279\u6027\u6d4b\u91cf\uff0c\u5219\u5fc5\u987b\u8981\u8fdb\u884c\u56fa\u6709\u7279\u6027\u6d4b\u91cf\u7684\u9002\u914d\u5de5\u4f5c\u3002 \u4e3a\u81ea\u5b9a\u4e49 Layout \u9002\u914d\u56fa\u6709\u7279\u6027\u6d4b\u91cf \u4ece\u4e0a\u9762\u7684\u4f8b\u5b50\u53ef\u4ee5\u53d1\u73b0\uff0c\u6211\u4eec\u4ec5\u4f7f\u7528 Modifier.height(IntrinsicSize.Min) \u5373\u53ef\u4ea4\u7ed9 Row \u7ec4\u4ef6\u6839\u636e\u5b50\u7ec4\u4ef6\u7684\u4fe1\u606f\u8fdb\u884c\u8ba1\u7b97\u4ece\u800c\u786e\u5b9a\u4e00\u4e2a\u56fa\u5b9a\u7684\u9ad8\u5ea6\u3002\u7136\u800c\u4e4b\u524d\u4ed6\u65f6\u5982\u4f55\u64cd\u4f5c\u7684\uff0c\u5bf9\u4e8e\u5f00\u53d1\u8005\u800c\u8a00\u662f\u5b8c\u5168\u672a\u77e5\u7684\u3002\u6240\u4ee5\u672c\u6587\u5c06\u7ee7\u7eed\u6df1\u5165\u4e0b\u53bb\uff0c\u901a\u8fc7\u4e00\u4e2a\u81ea\u5b9a\u4e49 Layout \u9002\u914d\u56fa\u6709\u7279\u6027\u6d4b\u91cf\u7684\u8fc7\u7a0b\u6765\u6478\u6e05\u56fa\u6709\u7279\u6027\u6d4b\u91cf\u7684\u6574\u4e2a\u6d41\u7a0b\u3002 \u91cd\u5199 MeasurePolicy \u56fa\u6709\u7279\u6027\u6d4b\u91cf\u76f8\u5173\u65b9\u6cd5 \u5bf9\u4e8e\u9002\u914d\u56fa\u6709\u7279\u6027\u6d4b\u91cf\u7684 Layout\uff0c\u6211\u4eec\u9700\u8981\u5bf9 MeasurePolicy \u4e0b\u7684\u56fa\u6709\u7279\u6027\u6d4b\u91cf\u65b9\u6cd5\u8fdb\u884c\u91cd\u5199\u3002\u8fd8\u8bb0\u5f97 MeasurePolicy \u662f\u8c01\u561b\uff1f\u6ca1\u9519\u4ed6\u5c31\u662f\u6211\u4eec\u5728\u81ea\u5b9a\u4e49 Layout \u4e2d\u4f20\u5165\u7684\u6700\u540e\u7684 lambda SAM \u8f6c\u6362\u7684\u5b9e\u4f8b\u7c7b\u578b\u3002 @Composable inline fun Layout ( content : @Composable () -> Unit , modifier : Modifier = Modifier , measurePolicy : MeasurePolicy ) \u5bf9\u4e8e\u56fa\u6709\u7279\u6027\u6d4b\u91cf\u7684\u9002\u914d\uff0c\u6211\u4eec\u9700\u8981\u6839\u636e\u9700\u6c42\u91cd\u5199\u4ee5\u4e0b\u56db\u4e2a\u65b9\u6cd5\u3002 \u4f7f\u7528 Modifier.width(IntrinsicSize.Max) \uff0c\u5219\u4f1a\u8c03\u7528 maxIntrinsicWidth \u65b9\u6cd5 \u4f7f\u7528 Modifier.width(IntrinsicSize.Min) \uff0c\u5219\u4f1a\u8c03\u7528 minIntrinsicWidth \u65b9\u6cd5 \u4f7f\u7528 Modifier.height(IntrinsicSize.Max) \uff0c\u5219\u4f1a\u8c03\u7528 maxIntrinsicHeight \u65b9\u6cd5 \u4f7f\u7528 Modifier.height(IntrinsicSize.Min) \uff0c\u5219\u4f1a\u8c03\u7528 minIntrinsicHeight \u65b9\u6cd5 \u26a0\ufe0f \u6ce8\u610f\u4e8b\u9879\uff1a \u5982\u679c\u54ea\u4e2a Modifier \u4f7f\u7528\u4e86, \u4f46\u5176\u5bf9\u5e94\u65b9\u6cd5\u6ca1\u6709\u91cd\u5199\u4ecd\u4f1a\u5d29\u6e83\u3002 \u5728 Layout \u58f0\u660e\u65f6\uff0c\u6211\u4eec\u5c31\u4e0d\u80fd\u4f7f\u7528 SAM \u5f62\u5f0f\u4e86\uff0c\u800c\u662f\u8981\u89c4\u89c4\u77e9\u77e9\u5b9e\u73b0 MeasurePolicy @Composable fun IntrinsicRow ( modifier : Modifier , content : @Composable () -> Unit ){ Layout ( content = content , modifier = modifier , measurePolicy = object : MeasurePolicy { override fun MeasureScope . measure ( measurables : List < Measurable > , constraints : Constraints ): MeasureResult { TODO ( \"Not yet implemented\" ) } override fun IntrinsicMeasureScope . minIntrinsicHeight ( measurables : List < IntrinsicMeasurable > , width : Int ): Int { TODO ( \"Not yet implemented\" ) } override fun IntrinsicMeasureScope . maxIntrinsicHeight ( measurables : List < IntrinsicMeasurable > , width : Int ): Int { TODO ( \"Not yet implemented\" ) } override fun IntrinsicMeasureScope . maxIntrinsicWidth ( measurables : List < IntrinsicMeasurable > , height : Int ): Int { TODO ( \"Not yet implemented\" ) } override fun IntrinsicMeasureScope . minIntrinsicWidth ( measurables : List < IntrinsicMeasurable > , height : Int ): Int { TODO ( \"Not yet implemented\" ) } } ) } \u5728\u6211\u4eec\u7684\u6848\u4f8b\u4e2d\u4ec5\u4f7f\u7528\u4e86 Modifier.height(IntrinsicSize.Min) \uff0c\u51fa\u4e8e\u7b80\u5355\u8003\u8651\u4ec5\u91cd\u5199\u4e86 minIntrinsicHeight \u4ee5\u4f5c\u793a\u4f8b\u3002 minIntrinsicHeight \u4e0e maxIntrinsicHeight \u6709\u76f8\u540c\u7684\u4e24\u4e2a\u53c2\u6570 measurables \u4e0e width measurables \uff1a\u7c7b\u4f3c\u4e8e measure \u65b9\u6cd5\u7684 measurables\uff0c\u7528\u4e8e\u83b7\u53d6\u5b50\u7ec4\u4ef6\u7684\u5bbd\u9ad8\u4fe1\u606f\u3002 width \uff1a\u7236\u7ec4\u4ef6\u6240\u80fd\u63d0\u4f9b\u7684\u6700\u5927\u5bbd\u5ea6\uff08\u65e0\u8bba\u6b64\u65f6\u662f minIntrinsicHeight \u8fd8\u662f maxIntrinsicHeight \uff09 Modifier . widthIn ( 100. dp , 200. dp ) //\u5728\u6b64\u573a\u666f\u4e0bminIntrinsicHeight\u7684\u53c2\u6570width\u503c\u4e3a200.dp\u5bf9\u5e94\u7684px . height ( IntrinsicSize . Max ) \u63a5\u4e0b\u6765\u6211\u4eec\u4f7f\u7528 maxIntrinsicHeight \u5373\u53ef\u83b7\u53d6\u5230\u6bcf\u4e2a\u5b50\u7ec4\u4ef6\u5728\u7ed9\u5b9a\u5bbd\u5ea6\u4e0b\u80fd\u591f\u4fdd\u8bc1\u6b63\u786e\u5c55\u793a\u7684\u6700\u5c0f\u9ad8\u5ea6\uff0c\u8fd9\u4e2a\u6b63\u786e\u5c55\u793a\u7684\u9ad8\u5ea6\u662f\u7531\u5b50\u7ec4\u4ef6\u6765\u4fdd\u8bc1\u7684\u3002\u518d\u5f97\u5230\u6240\u6709\u5b50\u7ec4\u4ef6\u7684\u9ad8\u5ea6\u4fe1\u606f\u540e\uff0c\u6211\u4eec\u5373\u53ef\u8ba1\u7b97\u6700\u5927\u9ad8\u5ea6\u503c\uff0c\u6b64\u503c\u5c06\u4f1a\u88ab\u8bbe\u7f6e\u4e3a\u5f53\u524d\u7236\u7ec4\u4ef6\uff08\u4e5f\u5c31\u662f\u5f53\u524d\u81ea\u5b9a\u4e49Layout\uff09\u7684\u56fa\u5b9a\u9ad8\u5ea6\u3002 override fun IntrinsicMeasureScope . minIntrinsicHeight ( measurables : List < IntrinsicMeasurable > , width : Int ): Int { var maxHeight = 0 measurables . forEach { maxHeight = it . minIntrinsicHeight ( width ). coerceAtLeast ( maxHeight ) } return maxHeight } \u5728 Layout measure \u4e2d\u9002\u914d \u63a5\u4e0b\u6765\u6211\u4eec\u5c06\u6240\u6709\u4f7f\u7528\u7684 Composable \u58f0\u660e\u51fa\u6765\u3002 IntrinsicRow ( modifier = Modifier . fillMaxWidth () . height ( IntrinsicSize . Min ) ) { Text ( text = \"Left\" , Modifier . wrapContentWidth ( Alignment . Start ). layoutId ( \"main\" )) Divider ( color = Color . Black , modifier = Modifier . width ( 4. dp ) . fillMaxHeight () . layoutId ( \"devider\" ) ) Text ( text = \"Right\" , Modifier . wrapContentWidth ( Alignment . End ). layoutId ( \"main\" )) } \u6b64\u65f6\uff0c\u7531\u4e8e\u58f0\u660e\u4e86 Modifier.fillMaxWidth() \uff0c\u5bfc\u81f4\u6211\u4eec\u81ea\u5b9a\u4e49 Layout \u5bbd\u5ea6\u662f\u56fa\u5b9a\u7684\uff0c\u53c8\u56e0\u4e3a\u6211\u4eec\u4f7f\u7528\u4e86\u56fa\u6709\u7279\u6027\u6d4b\u91cf\uff0c\u6b64\u65f6\u6211\u4eec\u81ea\u5b9a\u4e49 Layout \u7684\u9ad8\u5ea6\u4e5f\u662f\u56fa\u5b9a\u7684\u3002\u5177\u4f53\u8868\u73b0\u4e3a constraints \u53c2\u6570\u4e2d minWidth \u4e0e maxWidth \u76f8\u7b49\uff08\u5bbd\u5ea6\u56fa\u5b9a\uff09\uff0cminHeight \u4e0e maxHeight \u76f8\u7b49\uff08\u9ad8\u5ea6\u56fa\u5b9a\uff09\u3002 \u800c\u6211\u4eec\u5e0c\u671b Devider \u6d4b\u91cf\u7684\u5bbd\u5ea6\u4e0d\u5e94\u662f\u56fa\u5b9a\u4e0e\u7236\u7ec4\u4ef6\u76f8\u540c\uff0c\u800c\u662f\u8981\u6839\u636e\u5176\u81ea\u8eab\u58f0\u660e\u7684\u5bbd\u5ea6\uff0c\u4e5f\u5c31\u662f Modifier.width(4.dp) \uff0c\u6240\u4ee5\u6211\u4eec\u5bf9 Devider \u6d4b\u91cf\u4f7f\u7528\u7684 constraints \u8fdb\u884c\u4e86\u4fee\u6539\u3002\u5c06\u5176\u6700\u5c0f\u503c\u8bbe\u7f6e\u4e3a\u96f6\u3002 @Composable fun IntrinsicRow ( modifier : Modifier , content : @Composable () -> Unit ){ Layout ( content = content , modifier = modifier , measurePolicy = object : MeasurePolicy { override fun MeasureScope . measure ( measurables : List < Measurable > , constraints : Constraints ): MeasureResult { var devideConstraints = constraints . copy ( minWidth = 0 ) var mainPlaceables = measurables . filter { it . layoutId == \"main\" }. map { it . measure ( constraints ) } var devidePlaceable = measurables . first { it . layoutId == \"devider\" }. measure ( devideConstraints ) var midPos = constraints . maxWidth / 2 return layout ( constraints . maxWidth , constraints . maxHeight ) { mainPlaceables . forEach { it . placeRelative ( 0 , 0 ) } devidePlaceable . placeRelative ( midPos , 0 ) } } override fun IntrinsicMeasureScope . minIntrinsicHeight ( measurables : List < IntrinsicMeasurable > , width : Int ): Int { var maxHeight = 0 measurables . forEach { maxHeight = it . maxIntrinsicHeight ( width ). coerceAtLeast ( maxHeight ) } return maxHeight } } ) } \u6700\u7ec8\u6548\u679c\u5982\u4e0b\uff0c\u8fd9\u6837\u6211\u4eec\u5c31\u4e3a\u6211\u4eec\u81ea\u5b9a\u4e49 Layout \u9002\u914d\u4e86\u56fa\u6709\u7279\u6027\u6d4b\u91cf\u80fd\u529b\u3002 \u5bf9\u56fa\u6709\u7279\u6027\u6d4b\u91cf\u7684\u601d\u8003 \u56fa\u6709\u7279\u6027\u6d4b\u91cf\u7684\u672c\u8d28\u5c31\u662f\u7236\u7ec4\u4ef6\u53ef\u5728\u6b63\u5f0f\u6d4b\u91cf\u5e03\u5c40\u524d\u9884\u5148\u83b7\u53d6\u5230\u6bcf\u4e2a\u5b50\u7ec4\u4ef6\u5bbd\u9ad8\u4fe1\u606f\u540e\u901a\u8fc7\u8ba1\u7b97\u6765\u786e\u5b9a\u81ea\u8eab\u7684\u56fa\u5b9a\u5bbd\u5ea6\u6216\u9ad8\u5ea6\uff0c\u4ece\u800c\u95f4\u63a5\u5f71\u54cd\u5230\u5176\u4e2d\u5305\u542b\u7684\u90e8\u5206\u5b50\u7ec4\u4ef6\u5e03\u5c40\u4fe1\u606f\u3002\u4e5f\u5c31\u662f\u8bf4\u5b50\u7ec4\u4ef6\u53ef\u4ee5\u6839\u636e\u81ea\u8eab\u5bbd\u9ad8\u4fe1\u606f\u4ece\u800c\u786e\u5b9a\u7236\u7ec4\u4ef6\u7684\u5bbd\u5ea6\u6216\u9ad8\u5ea6\uff0c\u4ece\u800c\u5f71\u54cd\u5176\u4ed6\u5b50\u7ec4\u4ef6\u5e03\u5c40\u3002\u5728\u6211\u4eec\u4f7f\u7528\u7684\u65b9\u6848\u4e2d\uff0c\u6211\u4eec\u901a\u8fc7\u6587\u6848\u5b50\u7ec4\u4ef6\u7684\u9ad8\u5ea6\u786e\u5b9a\u4e86\u7236\u7ec4\u4ef6\u7684\u56fa\u5b9a\u9ad8\u5ea6\uff0c\u4ece\u800c\u95f4\u63a5\u786e\u5b9a\u4e86\u5206\u5272\u7ebf\u7684\u9ad8\u5ea6\u3002\u6b64\u65f6\u5b50\u7ec4\u4ef6\u8981\u901a\u8fc7\u56fa\u6709\u7279\u6027\u6d4b\u91cf\u8fd9\u79cd\u65b9\u5f0f\uff0c\u901a\u8fc7\u7236\u7ec4\u4ef6\u800c\u5bf9\u5176\u4ed6\u5b50\u7ec4\u4ef6\u4ea7\u751f\u5f71\u54cd\uff0c\u7136\u800c\u5728\u6709\u4e9b\u573a\u666f\u4e0b\u6211\u4eec\u4e0d\u5e0c\u671b\u7236\u7ec4\u4ef6\u53c2\u4e0e\u5176\u4e2d\uff0c\u800c\u5e0c\u671b\u5b50\u7ec4\u4ef6\u95f4\u901a\u8fc7\u6d4b\u91cf\u7684\u5148\u540e\u987a\u5e8f\u76f4\u63a5\u76f8\u4e92\u5f71\u54cd\uff0cCompose \u4e3a\u6211\u4eec\u63d0\u4f9b\u4e86 SubcomposeLayout \u6765\u5904\u7406\u8fd9\u7c7b\u5b50\u7ec4\u4ef6\u5b58\u5728\u4f9d\u8d56\u5173\u7cfb\u7684\u573a\u666f\u3002\u7531\u4e8e\u672c\u6587\u7bc7\u5e45\u6709\u9650\uff0c\u6709\u5173\u4e8e SubcomposeLayout \u5185\u5bb9\u540e\u7eed\u4f1a\u7ee7\u7eed\u66f4\u65b0\uff0c\u8bf7\u6301\u7eed\u5173\u6ce8\u3002","title":"\u56fa\u6709\u7279\u6027\u6d4b\u91cf"},{"location":"layout/intrinsic/#_1","text":"\u5728 \u81ea\u5b9a\u4e49Layout \u4e2d\u6211\u4eec\u63d0\u5230 Compose \u5e03\u5c40\u539f\u7406\uff0cCompose \u4e2d\u7684\u6bcf\u4e2a UI \u7ec4\u4ef6\u662f\u4e0d\u5141\u8bb8\u591a\u6b21\u8fdb\u884c\u6d4b\u91cf\u7684\uff0c\u591a\u6b21\u6d4b\u91cf\u5728\u8fd0\u884c\u65f6\u4f1a\u629b\u5f02\u5e38\uff0c\u7981\u6b62\u591a\u6b21\u6d4b\u91cf\u7684\u597d\u5904\u662f\u4e3a\u4e86\u63d0\u9ad8\u6027\u80fd\uff0c\u4f46\u5728\u5f88\u591a\u573a\u666f\u4e2d\u591a\u6b21\u6d4b\u91cf\u5b50 UI \u7ec4\u4ef6\u662f\u6709\u610f\u4e49\u7684\u3002\u5728 Jetpack Compose \u4ee3\u7801\u5b9e\u9a8c\u5ba4\u4e2d\u5c31\u63d0\u4f9b\u4e86\u8fd9\u6837\u4e00\u79cd\u573a\u666f\uff0c\u6211\u4eec\u5e0c\u671b\u4e2d\u95f4\u5206\u5272\u7ebf\u9ad8\u5ea6\u4e0e\u4e24\u8fb9\u6587\u6848\u9ad8\u7684\u4e00\u8fb9\u4fdd\u6301\u76f8\u7b49\u3002 \u4e3a\u5b9e\u73b0\u8fd9\u4e2a\u9700\u6c42\uff0c\u5b98\u65b9\u6240\u63d0\u4f9b\u7684\u8bbe\u8ba1\u65b9\u6848\u662f\u5e0c\u671b\u7236\u7ec4\u4ef6\u53ef\u4ee5\u9884\u5148\u83b7\u53d6\u5230\u4e24\u8fb9\u7684\u6587\u6848\u7ec4\u4ef6\u9ad8\u5ea6\u4fe1\u606f\uff0c\u7136\u540e\u8ba1\u7b97\u4e24\u8fb9\u9ad8\u5ea6\u7684\u6700\u5927\u503c\u5373\u53ef\u786e\u5b9a\u5f53\u524d\u7236\u7ec4\u4ef6\u7684\u9ad8\u5ea6\u503c\uff0c\u6b64\u65f6\u4ec5\u9700\u5c06\u5206\u5272\u7ebf\u9ad8\u5ea6\u503c\u94fa\u6ee1\u6574\u4e2a\u7236\u7ec4\u4ef6\u5373\u53ef\u3002 \u4e3a\u4e86\u5b9e\u73b0\u7236\u7ec4\u4ef6\u9884\u5148\u83b7\u53d6\u6587\u6848\u7ec4\u4ef6\u9ad8\u5ea6\u4fe1\u606f\u4ece\u800c\u786e\u5b9a\u81ea\u8eab\u7684\u9ad8\u5ea6\u4fe1\u606f\uff0cCompose \u4e3a\u5f00\u53d1\u8005\u4eec\u63d0\u4f9b\u4e86\u56fa\u6709\u7279\u6027\u6d4b\u91cf\u673a\u5236\uff0c\u5141\u8bb8\u5f00\u53d1\u8005\u5728\u6bcf\u4e2a\u5b50\u7ec4\u4ef6\u6b63\u5f0f\u6d4b\u91cf\u524d\u80fd\u83b7\u53d6\u5230\u6bcf\u4e2a\u5b50\u7ec4\u4ef6\u7684\u5bbd\u9ad8\u7b49\u4fe1\u606f\u3002","title":"\u56fa\u6709\u7279\u6027\u6d4b\u91cf\u662f\u4ec0\u4e48"},{"location":"layout/intrinsic/#_2","text":"\u4f7f\u7528\u56fa\u6709\u7279\u6027\u6d4b\u91cf\u7684\u524d\u63d0\u662f\u5f53\u524d\u4f5c\u7528\u7684 Layout \u9700\u8981\u9002\u914d\u56fa\u6709\u7279\u6027\u6d4b\u91cf\uff0c\u76ee\u524d\u8bb8\u591a\u57fa\u7840\u7ec4\u4ef6\u5df2\u7ecf\u5b8c\u6210\u5bf9\u56fa\u6709\u7279\u6027\u6d4b\u91cf\u7684\u9002\u914d\uff0c\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528\u3002 \u5728\u4e0a\u9762\u6240\u63d0\u5230\u7684\u4f8b\u5b50\u4e2d\u7236\u7ec4\u4ef6\u6240\u63d0\u4f9b\u7684\u80fd\u529b\u4f7f\u7528\u57fa\u7840\u7ec4\u4ef6\u4e2d\u7684 Row \u7ec4\u4ef6\u5373\u53ef\u627f\u62c5\uff0c\u6211\u4eec\u4ec5\u9700\u4e3a Row \u7ec4\u4ef6\u9ad8\u5ea6\u8bbe\u7f6e\u56fa\u6709\u7279\u6027\u6d4b\u91cf\u5373\u53ef\u3002\u6211\u4eec\u4f7f\u7528 Modifier.height(IntrinsicSize.Min) \u5373\u53ef\u4e3a\u9ad8\u5ea6\u8bbe\u7f6e\u56fa\u6709\u7279\u6027\u6d4b\u91cf\u3002 @Composable fun TwoTexts ( modifier : Modifier = Modifier , text1 : String , text2 : String ) { Row ( modifier = modifier . height ( IntrinsicSize . Min )) { // I'm here Text ( modifier = Modifier . weight ( 1f ) . padding ( start = 4. dp ) . wrapContentWidth ( Alignment . Start ), text = text1 ) Divider ( color = Color . Black , modifier = Modifier . fillMaxHeight (). width ( 1. dp )) Text ( modifier = Modifier . weight ( 1f ) . padding ( end = 4. dp ) . wrapContentWidth ( Alignment . End ), text = text2 ) } } @Preview @Composable fun TwoTextsPreview () { LayoutsCodelabTheme { Surface { TwoTexts ( text1 = \"Hi\" , text2 = \"there\" ) } } } \u901a\u8fc7\u4f7f\u7528\u56fa\u6709\u7279\u6027\u6d4b\u91cf\u5373\u53ef\u5b8c\u6210\u4e0a\u9762\u6240\u8ff0\u573a\u666f\u7684\u9700\u6c42\uff0c\u5c55\u793a\u6548\u679c\u5982\u56fe\u6240\u793a\u3002 \u503c\u5f97\u6ce8\u610f\u7684\u662f\u6b64\u65f6\u6211\u4eec\u7684 Modifier \u4ec5\u4f7f\u7528 Modifier.height(IntrinsicSize.Min) \u4e3a\u9ad8\u5ea6\u8bbe\u7f6e\u4e86\u56fa\u6709\u7279\u6027\u6d4b\u91cf\uff0c\u5e76\u6ca1\u6709\u8fdb\u884c\u5bbd\u5ea6\u7684\u8bbe\u7f6e\u3002\u6b64\u65f6\u6240\u8868\u8fbe\u7684\u610f\u601d\u662f\uff0c\u5f53\u5bbd\u5ea6\u4e0d\u9650\u65f6\u901a\u8fc7\u5b50\u7ec4\u4ef6\u9884\u5148\u6d4b\u91cf\u7684\u5bbd\u9ad8\u4fe1\u606f\u6240\u80fd\u8ba1\u7b97\u7684\u9ad8\u5ea6\u6700\u5c11\u53ef\u4ee5\u662f\u591a\u5c11\u3002\u5f53\u7136\u4f60\u4e5f\u53ef\u4ee5\u8fdb\u884c\u5bbd\u5ea6\u7684\u8bbe\u7f6e\uff0c\u5f53\u5bbd\u5ea6\u53d7\u9650\u65f6\u901a\u8fc7\u5b50\u7ec4\u4ef6\u9884\u5148\u6d4b\u91cf\u7684\u5bbd\u9ad8\u4fe1\u606f\u6240\u80fd\u8ba1\u7b97\u7684\u9ad8\u5ea6\u6700\u5c11\u53ef\u4ee5\u662f\u591a\u5c11\u3002 \u53ef\u80fd\u4f60\u4e0d\u80fd\u7406\u89e3\u5bbd\u5ea6\u53d7\u9650\u53ef\u80fd\u5f71\u54cd\u9ad8\u5ea6\u8fd9\u4ef6\u4e8b\uff0c\u5176\u5b9e\u6211\u4eec\u5e38\u7528\u7684 Text \u7ec4\u4ef6\u5f53\u5bbd\u5ea6\u6536\u5230\u4e0d\u540c\u9650\u5236\u65f6\uff0c\u5176\u9ad8\u5ea6\u5c31\u662f\u4e0d\u4e00\u6837\u7684\u3002 Column ( Modifier . fillMaxSize ()) { Box ( Modifier . width ( 50. dp ). background ( Color . Red )) { Text ( text = \"Jetpack Compose is an excellent development tool\" ) } Box ( Modifier . width ( 100. dp ). background ( Color . Yellow )) { Text ( text = \"Jetpack Compose is an excellent development tool\" ) } } \u26a0\ufe0f \u6ce8\u610f\u4e8b\u9879\uff1a \u4f60\u53ea\u80fd\u5bf9\u5df2\u7ecf\u9002\u914d\u56fa\u6709\u7279\u6027\u6d4b\u91cf\u80fd\u529b\u7684\u7ec4\u4ef6\u4f7f\u7528 IntrinsicSize.Min \u6216 IntrinsicSize.Max \uff0c\u5426\u5219\u7a0b\u5e8f\u4f1a\u8fd0\u884c\u65f6\u629b\u51fa\u5f02\u5e38\u800c\u5d29\u6e83\u3002\u5bf9\u4e8e\u6240\u6709\u81ea\u5b9a\u4e49 Layout \u7684\u5f00\u53d1\u8005\u6765\u8bf4\u5982\u679c\u652f\u6301\u4f7f\u7528\u8005\u4f7f\u7528\u56fa\u6709\u7279\u6027\u6d4b\u91cf\uff0c\u5219\u5fc5\u987b\u8981\u8fdb\u884c\u56fa\u6709\u7279\u6027\u6d4b\u91cf\u7684\u9002\u914d\u5de5\u4f5c\u3002","title":"\u5728\u57fa\u7840\u7ec4\u4ef6\u4e2d\u4f7f\u7528\u56fa\u6709\u7279\u6027\u6d4b\u91cf"},{"location":"layout/intrinsic/#layout","text":"\u4ece\u4e0a\u9762\u7684\u4f8b\u5b50\u53ef\u4ee5\u53d1\u73b0\uff0c\u6211\u4eec\u4ec5\u4f7f\u7528 Modifier.height(IntrinsicSize.Min) \u5373\u53ef\u4ea4\u7ed9 Row \u7ec4\u4ef6\u6839\u636e\u5b50\u7ec4\u4ef6\u7684\u4fe1\u606f\u8fdb\u884c\u8ba1\u7b97\u4ece\u800c\u786e\u5b9a\u4e00\u4e2a\u56fa\u5b9a\u7684\u9ad8\u5ea6\u3002\u7136\u800c\u4e4b\u524d\u4ed6\u65f6\u5982\u4f55\u64cd\u4f5c\u7684\uff0c\u5bf9\u4e8e\u5f00\u53d1\u8005\u800c\u8a00\u662f\u5b8c\u5168\u672a\u77e5\u7684\u3002\u6240\u4ee5\u672c\u6587\u5c06\u7ee7\u7eed\u6df1\u5165\u4e0b\u53bb\uff0c\u901a\u8fc7\u4e00\u4e2a\u81ea\u5b9a\u4e49 Layout \u9002\u914d\u56fa\u6709\u7279\u6027\u6d4b\u91cf\u7684\u8fc7\u7a0b\u6765\u6478\u6e05\u56fa\u6709\u7279\u6027\u6d4b\u91cf\u7684\u6574\u4e2a\u6d41\u7a0b\u3002","title":"\u4e3a\u81ea\u5b9a\u4e49 Layout \u9002\u914d\u56fa\u6709\u7279\u6027\u6d4b\u91cf"},{"location":"layout/intrinsic/#measurepolicy","text":"\u5bf9\u4e8e\u9002\u914d\u56fa\u6709\u7279\u6027\u6d4b\u91cf\u7684 Layout\uff0c\u6211\u4eec\u9700\u8981\u5bf9 MeasurePolicy \u4e0b\u7684\u56fa\u6709\u7279\u6027\u6d4b\u91cf\u65b9\u6cd5\u8fdb\u884c\u91cd\u5199\u3002\u8fd8\u8bb0\u5f97 MeasurePolicy \u662f\u8c01\u561b\uff1f\u6ca1\u9519\u4ed6\u5c31\u662f\u6211\u4eec\u5728\u81ea\u5b9a\u4e49 Layout \u4e2d\u4f20\u5165\u7684\u6700\u540e\u7684 lambda SAM \u8f6c\u6362\u7684\u5b9e\u4f8b\u7c7b\u578b\u3002 @Composable inline fun Layout ( content : @Composable () -> Unit , modifier : Modifier = Modifier , measurePolicy : MeasurePolicy ) \u5bf9\u4e8e\u56fa\u6709\u7279\u6027\u6d4b\u91cf\u7684\u9002\u914d\uff0c\u6211\u4eec\u9700\u8981\u6839\u636e\u9700\u6c42\u91cd\u5199\u4ee5\u4e0b\u56db\u4e2a\u65b9\u6cd5\u3002 \u4f7f\u7528 Modifier.width(IntrinsicSize.Max) \uff0c\u5219\u4f1a\u8c03\u7528 maxIntrinsicWidth \u65b9\u6cd5 \u4f7f\u7528 Modifier.width(IntrinsicSize.Min) \uff0c\u5219\u4f1a\u8c03\u7528 minIntrinsicWidth \u65b9\u6cd5 \u4f7f\u7528 Modifier.height(IntrinsicSize.Max) \uff0c\u5219\u4f1a\u8c03\u7528 maxIntrinsicHeight \u65b9\u6cd5 \u4f7f\u7528 Modifier.height(IntrinsicSize.Min) \uff0c\u5219\u4f1a\u8c03\u7528 minIntrinsicHeight \u65b9\u6cd5 \u26a0\ufe0f \u6ce8\u610f\u4e8b\u9879\uff1a \u5982\u679c\u54ea\u4e2a Modifier \u4f7f\u7528\u4e86, \u4f46\u5176\u5bf9\u5e94\u65b9\u6cd5\u6ca1\u6709\u91cd\u5199\u4ecd\u4f1a\u5d29\u6e83\u3002 \u5728 Layout \u58f0\u660e\u65f6\uff0c\u6211\u4eec\u5c31\u4e0d\u80fd\u4f7f\u7528 SAM \u5f62\u5f0f\u4e86\uff0c\u800c\u662f\u8981\u89c4\u89c4\u77e9\u77e9\u5b9e\u73b0 MeasurePolicy @Composable fun IntrinsicRow ( modifier : Modifier , content : @Composable () -> Unit ){ Layout ( content = content , modifier = modifier , measurePolicy = object : MeasurePolicy { override fun MeasureScope . measure ( measurables : List < Measurable > , constraints : Constraints ): MeasureResult { TODO ( \"Not yet implemented\" ) } override fun IntrinsicMeasureScope . minIntrinsicHeight ( measurables : List < IntrinsicMeasurable > , width : Int ): Int { TODO ( \"Not yet implemented\" ) } override fun IntrinsicMeasureScope . maxIntrinsicHeight ( measurables : List < IntrinsicMeasurable > , width : Int ): Int { TODO ( \"Not yet implemented\" ) } override fun IntrinsicMeasureScope . maxIntrinsicWidth ( measurables : List < IntrinsicMeasurable > , height : Int ): Int { TODO ( \"Not yet implemented\" ) } override fun IntrinsicMeasureScope . minIntrinsicWidth ( measurables : List < IntrinsicMeasurable > , height : Int ): Int { TODO ( \"Not yet implemented\" ) } } ) } \u5728\u6211\u4eec\u7684\u6848\u4f8b\u4e2d\u4ec5\u4f7f\u7528\u4e86 Modifier.height(IntrinsicSize.Min) \uff0c\u51fa\u4e8e\u7b80\u5355\u8003\u8651\u4ec5\u91cd\u5199\u4e86 minIntrinsicHeight \u4ee5\u4f5c\u793a\u4f8b\u3002 minIntrinsicHeight \u4e0e maxIntrinsicHeight \u6709\u76f8\u540c\u7684\u4e24\u4e2a\u53c2\u6570 measurables \u4e0e width measurables \uff1a\u7c7b\u4f3c\u4e8e measure \u65b9\u6cd5\u7684 measurables\uff0c\u7528\u4e8e\u83b7\u53d6\u5b50\u7ec4\u4ef6\u7684\u5bbd\u9ad8\u4fe1\u606f\u3002 width \uff1a\u7236\u7ec4\u4ef6\u6240\u80fd\u63d0\u4f9b\u7684\u6700\u5927\u5bbd\u5ea6\uff08\u65e0\u8bba\u6b64\u65f6\u662f minIntrinsicHeight \u8fd8\u662f maxIntrinsicHeight \uff09 Modifier . widthIn ( 100. dp , 200. dp ) //\u5728\u6b64\u573a\u666f\u4e0bminIntrinsicHeight\u7684\u53c2\u6570width\u503c\u4e3a200.dp\u5bf9\u5e94\u7684px . height ( IntrinsicSize . Max ) \u63a5\u4e0b\u6765\u6211\u4eec\u4f7f\u7528 maxIntrinsicHeight \u5373\u53ef\u83b7\u53d6\u5230\u6bcf\u4e2a\u5b50\u7ec4\u4ef6\u5728\u7ed9\u5b9a\u5bbd\u5ea6\u4e0b\u80fd\u591f\u4fdd\u8bc1\u6b63\u786e\u5c55\u793a\u7684\u6700\u5c0f\u9ad8\u5ea6\uff0c\u8fd9\u4e2a\u6b63\u786e\u5c55\u793a\u7684\u9ad8\u5ea6\u662f\u7531\u5b50\u7ec4\u4ef6\u6765\u4fdd\u8bc1\u7684\u3002\u518d\u5f97\u5230\u6240\u6709\u5b50\u7ec4\u4ef6\u7684\u9ad8\u5ea6\u4fe1\u606f\u540e\uff0c\u6211\u4eec\u5373\u53ef\u8ba1\u7b97\u6700\u5927\u9ad8\u5ea6\u503c\uff0c\u6b64\u503c\u5c06\u4f1a\u88ab\u8bbe\u7f6e\u4e3a\u5f53\u524d\u7236\u7ec4\u4ef6\uff08\u4e5f\u5c31\u662f\u5f53\u524d\u81ea\u5b9a\u4e49Layout\uff09\u7684\u56fa\u5b9a\u9ad8\u5ea6\u3002 override fun IntrinsicMeasureScope . minIntrinsicHeight ( measurables : List < IntrinsicMeasurable > , width : Int ): Int { var maxHeight = 0 measurables . forEach { maxHeight = it . minIntrinsicHeight ( width ). coerceAtLeast ( maxHeight ) } return maxHeight }","title":"\u91cd\u5199 MeasurePolicy \u56fa\u6709\u7279\u6027\u6d4b\u91cf\u76f8\u5173\u65b9\u6cd5"},{"location":"layout/intrinsic/#layout-measure","text":"\u63a5\u4e0b\u6765\u6211\u4eec\u5c06\u6240\u6709\u4f7f\u7528\u7684 Composable \u58f0\u660e\u51fa\u6765\u3002 IntrinsicRow ( modifier = Modifier . fillMaxWidth () . height ( IntrinsicSize . Min ) ) { Text ( text = \"Left\" , Modifier . wrapContentWidth ( Alignment . Start ). layoutId ( \"main\" )) Divider ( color = Color . Black , modifier = Modifier . width ( 4. dp ) . fillMaxHeight () . layoutId ( \"devider\" ) ) Text ( text = \"Right\" , Modifier . wrapContentWidth ( Alignment . End ). layoutId ( \"main\" )) } \u6b64\u65f6\uff0c\u7531\u4e8e\u58f0\u660e\u4e86 Modifier.fillMaxWidth() \uff0c\u5bfc\u81f4\u6211\u4eec\u81ea\u5b9a\u4e49 Layout \u5bbd\u5ea6\u662f\u56fa\u5b9a\u7684\uff0c\u53c8\u56e0\u4e3a\u6211\u4eec\u4f7f\u7528\u4e86\u56fa\u6709\u7279\u6027\u6d4b\u91cf\uff0c\u6b64\u65f6\u6211\u4eec\u81ea\u5b9a\u4e49 Layout \u7684\u9ad8\u5ea6\u4e5f\u662f\u56fa\u5b9a\u7684\u3002\u5177\u4f53\u8868\u73b0\u4e3a constraints \u53c2\u6570\u4e2d minWidth \u4e0e maxWidth \u76f8\u7b49\uff08\u5bbd\u5ea6\u56fa\u5b9a\uff09\uff0cminHeight \u4e0e maxHeight \u76f8\u7b49\uff08\u9ad8\u5ea6\u56fa\u5b9a\uff09\u3002 \u800c\u6211\u4eec\u5e0c\u671b Devider \u6d4b\u91cf\u7684\u5bbd\u5ea6\u4e0d\u5e94\u662f\u56fa\u5b9a\u4e0e\u7236\u7ec4\u4ef6\u76f8\u540c\uff0c\u800c\u662f\u8981\u6839\u636e\u5176\u81ea\u8eab\u58f0\u660e\u7684\u5bbd\u5ea6\uff0c\u4e5f\u5c31\u662f Modifier.width(4.dp) \uff0c\u6240\u4ee5\u6211\u4eec\u5bf9 Devider \u6d4b\u91cf\u4f7f\u7528\u7684 constraints \u8fdb\u884c\u4e86\u4fee\u6539\u3002\u5c06\u5176\u6700\u5c0f\u503c\u8bbe\u7f6e\u4e3a\u96f6\u3002 @Composable fun IntrinsicRow ( modifier : Modifier , content : @Composable () -> Unit ){ Layout ( content = content , modifier = modifier , measurePolicy = object : MeasurePolicy { override fun MeasureScope . measure ( measurables : List < Measurable > , constraints : Constraints ): MeasureResult { var devideConstraints = constraints . copy ( minWidth = 0 ) var mainPlaceables = measurables . filter { it . layoutId == \"main\" }. map { it . measure ( constraints ) } var devidePlaceable = measurables . first { it . layoutId == \"devider\" }. measure ( devideConstraints ) var midPos = constraints . maxWidth / 2 return layout ( constraints . maxWidth , constraints . maxHeight ) { mainPlaceables . forEach { it . placeRelative ( 0 , 0 ) } devidePlaceable . placeRelative ( midPos , 0 ) } } override fun IntrinsicMeasureScope . minIntrinsicHeight ( measurables : List < IntrinsicMeasurable > , width : Int ): Int { var maxHeight = 0 measurables . forEach { maxHeight = it . maxIntrinsicHeight ( width ). coerceAtLeast ( maxHeight ) } return maxHeight } } ) } \u6700\u7ec8\u6548\u679c\u5982\u4e0b\uff0c\u8fd9\u6837\u6211\u4eec\u5c31\u4e3a\u6211\u4eec\u81ea\u5b9a\u4e49 Layout \u9002\u914d\u4e86\u56fa\u6709\u7279\u6027\u6d4b\u91cf\u80fd\u529b\u3002","title":"\u5728 Layout measure \u4e2d\u9002\u914d"},{"location":"layout/intrinsic/#_3","text":"\u56fa\u6709\u7279\u6027\u6d4b\u91cf\u7684\u672c\u8d28\u5c31\u662f\u7236\u7ec4\u4ef6\u53ef\u5728\u6b63\u5f0f\u6d4b\u91cf\u5e03\u5c40\u524d\u9884\u5148\u83b7\u53d6\u5230\u6bcf\u4e2a\u5b50\u7ec4\u4ef6\u5bbd\u9ad8\u4fe1\u606f\u540e\u901a\u8fc7\u8ba1\u7b97\u6765\u786e\u5b9a\u81ea\u8eab\u7684\u56fa\u5b9a\u5bbd\u5ea6\u6216\u9ad8\u5ea6\uff0c\u4ece\u800c\u95f4\u63a5\u5f71\u54cd\u5230\u5176\u4e2d\u5305\u542b\u7684\u90e8\u5206\u5b50\u7ec4\u4ef6\u5e03\u5c40\u4fe1\u606f\u3002\u4e5f\u5c31\u662f\u8bf4\u5b50\u7ec4\u4ef6\u53ef\u4ee5\u6839\u636e\u81ea\u8eab\u5bbd\u9ad8\u4fe1\u606f\u4ece\u800c\u786e\u5b9a\u7236\u7ec4\u4ef6\u7684\u5bbd\u5ea6\u6216\u9ad8\u5ea6\uff0c\u4ece\u800c\u5f71\u54cd\u5176\u4ed6\u5b50\u7ec4\u4ef6\u5e03\u5c40\u3002\u5728\u6211\u4eec\u4f7f\u7528\u7684\u65b9\u6848\u4e2d\uff0c\u6211\u4eec\u901a\u8fc7\u6587\u6848\u5b50\u7ec4\u4ef6\u7684\u9ad8\u5ea6\u786e\u5b9a\u4e86\u7236\u7ec4\u4ef6\u7684\u56fa\u5b9a\u9ad8\u5ea6\uff0c\u4ece\u800c\u95f4\u63a5\u786e\u5b9a\u4e86\u5206\u5272\u7ebf\u7684\u9ad8\u5ea6\u3002\u6b64\u65f6\u5b50\u7ec4\u4ef6\u8981\u901a\u8fc7\u56fa\u6709\u7279\u6027\u6d4b\u91cf\u8fd9\u79cd\u65b9\u5f0f\uff0c\u901a\u8fc7\u7236\u7ec4\u4ef6\u800c\u5bf9\u5176\u4ed6\u5b50\u7ec4\u4ef6\u4ea7\u751f\u5f71\u54cd\uff0c\u7136\u800c\u5728\u6709\u4e9b\u573a\u666f\u4e0b\u6211\u4eec\u4e0d\u5e0c\u671b\u7236\u7ec4\u4ef6\u53c2\u4e0e\u5176\u4e2d\uff0c\u800c\u5e0c\u671b\u5b50\u7ec4\u4ef6\u95f4\u901a\u8fc7\u6d4b\u91cf\u7684\u5148\u540e\u987a\u5e8f\u76f4\u63a5\u76f8\u4e92\u5f71\u54cd\uff0cCompose \u4e3a\u6211\u4eec\u63d0\u4f9b\u4e86 SubcomposeLayout \u6765\u5904\u7406\u8fd9\u7c7b\u5b50\u7ec4\u4ef6\u5b58\u5728\u4f9d\u8d56\u5173\u7cfb\u7684\u573a\u666f\u3002\u7531\u4e8e\u672c\u6587\u7bc7\u5e45\u6709\u9650\uff0c\u6709\u5173\u4e8e SubcomposeLayout \u5185\u5bb9\u540e\u7eed\u4f1a\u7ee7\u7eed\u66f4\u65b0\uff0c\u8bf7\u6301\u7eed\u5173\u6ce8\u3002","title":"\u5bf9\u56fa\u6709\u7279\u6027\u6d4b\u91cf\u7684\u601d\u8003"},{"location":"layout/modalbottomsheetlayout/","text":"1. ModalBottomSheetLayout \u6982\u8ff0 ModalBottomSheetLayout \u5448\u73b0\u4e86\u4e00\u7cfb\u5217\u7684\u9009\u62e9\uff0c\u540c\u65f6\u963b\u6b62\u4e86\u4e0e\u5c4f\u5e55\u5176\u4ed6\u90e8\u5206\u7684\u4e92\u52a8\u3002 \u5b83\u4eec\u662f\u79fb\u52a8\u7aef\u4e0a\u5185\u5d4c\u5f0f\u83dc\u5355\u548c\u7b80\u5355\u5bf9\u8bdd\u6846\u7684\u66ff\u4ee3\u65b9\u6848\uff0c\u4e3a\u5185\u5bb9\u3001\u56fe\u6807\u548c\u64cd\u4f5c\u63d0\u4f9b\u4e86\u989d\u5916\u7684\u7a7a\u95f4 ModalSheetLayout \u603b\u5171\u6709\u4e09\u79cd\u72b6\u6001\uff1a Hidden HalfExpanded Expanded \u4e00\u4e2a\u7b80\u5355\u7684 ModalBottomSheetLayout \u7684\u4f8b\u5b50\u662f\u8fd9\u6837\u7684\uff1a val state = rememberModalBottomSheetState ( ModalBottomSheetValue . Hidden ) val scope = rememberCoroutineScope () ModalBottomSheetLayout ( sheetState = state , sheetContent = { Column { ListItem ( text = { Text ( \"\u9009\u62e9\u5206\u4eab\u5230\u54ea\u91cc\u5427~\" )}) ListItem ( text = { Text ( \"github\" )}, icon = { Surface ( shape = CircleShape , color = Color ( 0 xFF181717 ) ) { Icon ( painterResource ( R . drawable . github ), null , tint = Color . White , modifier = Modifier . padding ( 4. dp ) ) } }, modifier = Modifier . clickable { }) ListItem ( text = { Text ( \"\u5fae\u4fe1\" )}, icon = { Surface ( shape = CircleShape , color = Color ( 0 xFF07C160 ) ) { Icon ( painterResource ( R . drawable . wechat ), null , tint = Color . White , modifier = Modifier . padding ( 4. dp ) ) } }, modifier = Modifier . clickable { }) } } ) { Column ( modifier = Modifier . fillMaxSize () . padding ( 16. dp ), horizontalAlignment = Alignment . CenterHorizontally ) { Button ( onClick = { scope . launch { state . show () } }) { Text ( \"\u70b9\u6211\u5c55\u5f00\" ) } } } \u6ce8\u610f \u76ee\u524d\u4f7f\u7528 ModalBottomSheetLayout \u9700\u8981\u6807\u660e @ExperimentalMaterialApi 2. \u6536\u56de ModalBottomSheet \u4e00\u822c\u60c5\u51b5\u4e0b\uff0c ModalBottomSheet \u65e0\u6cd5\u81ea\u52a8\u5904\u7406\u6309\u4e0b\u8fd4\u56de\u952e\u5c31\u6536\u8d77\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u7528 BackHandler \u6765\u5904\u7406 \u5728 ModalBottomSheet \u540e\u6dfb\u52a0\u4ee3\u7801\uff1a BackHandler ( enabled = ( state . currentValue == ModalBottomSheetValue . HalfExpanded || state . currentValue == ModalBottomSheetValue . Expanded ), onBack = { scope . launch { state . hide () } } ) 3. \u8bbe\u7f6e\u52a8\u753b\u65f6\u95f4 ModalSheetLayout \u9ed8\u8ba4\u7528 state.show() \u6216\u8005 state.hidden() \u6765\u5f39\u51fa\u548c\u6536\u56de \u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u8fd9\u6837\u7684\u65b9\u5f0f\u6765\u81ea\u5b9a\u4e49\u52a8\u753b\u65f6\u95f4 state . animateTo ( ModalBottomSheetValue . Hidden , tween ( 1000 )) \u5f39\u51fa\u540c\u7406 4. \u66f4\u591a ModalBottomSheet \u53c2\u6570\u8be6\u60c5","title":"ModalBottomSheetLayout"},{"location":"layout/modalbottomsheetlayout/#1-modalbottomsheetlayout","text":"ModalBottomSheetLayout \u5448\u73b0\u4e86\u4e00\u7cfb\u5217\u7684\u9009\u62e9\uff0c\u540c\u65f6\u963b\u6b62\u4e86\u4e0e\u5c4f\u5e55\u5176\u4ed6\u90e8\u5206\u7684\u4e92\u52a8\u3002 \u5b83\u4eec\u662f\u79fb\u52a8\u7aef\u4e0a\u5185\u5d4c\u5f0f\u83dc\u5355\u548c\u7b80\u5355\u5bf9\u8bdd\u6846\u7684\u66ff\u4ee3\u65b9\u6848\uff0c\u4e3a\u5185\u5bb9\u3001\u56fe\u6807\u548c\u64cd\u4f5c\u63d0\u4f9b\u4e86\u989d\u5916\u7684\u7a7a\u95f4 ModalSheetLayout \u603b\u5171\u6709\u4e09\u79cd\u72b6\u6001\uff1a Hidden HalfExpanded Expanded \u4e00\u4e2a\u7b80\u5355\u7684 ModalBottomSheetLayout \u7684\u4f8b\u5b50\u662f\u8fd9\u6837\u7684\uff1a val state = rememberModalBottomSheetState ( ModalBottomSheetValue . Hidden ) val scope = rememberCoroutineScope () ModalBottomSheetLayout ( sheetState = state , sheetContent = { Column { ListItem ( text = { Text ( \"\u9009\u62e9\u5206\u4eab\u5230\u54ea\u91cc\u5427~\" )}) ListItem ( text = { Text ( \"github\" )}, icon = { Surface ( shape = CircleShape , color = Color ( 0 xFF181717 ) ) { Icon ( painterResource ( R . drawable . github ), null , tint = Color . White , modifier = Modifier . padding ( 4. dp ) ) } }, modifier = Modifier . clickable { }) ListItem ( text = { Text ( \"\u5fae\u4fe1\" )}, icon = { Surface ( shape = CircleShape , color = Color ( 0 xFF07C160 ) ) { Icon ( painterResource ( R . drawable . wechat ), null , tint = Color . White , modifier = Modifier . padding ( 4. dp ) ) } }, modifier = Modifier . clickable { }) } } ) { Column ( modifier = Modifier . fillMaxSize () . padding ( 16. dp ), horizontalAlignment = Alignment . CenterHorizontally ) { Button ( onClick = { scope . launch { state . show () } }) { Text ( \"\u70b9\u6211\u5c55\u5f00\" ) } } } \u6ce8\u610f \u76ee\u524d\u4f7f\u7528 ModalBottomSheetLayout \u9700\u8981\u6807\u660e @ExperimentalMaterialApi","title":"1. ModalBottomSheetLayout \u6982\u8ff0"},{"location":"layout/modalbottomsheetlayout/#2-modalbottomsheet","text":"\u4e00\u822c\u60c5\u51b5\u4e0b\uff0c ModalBottomSheet \u65e0\u6cd5\u81ea\u52a8\u5904\u7406\u6309\u4e0b\u8fd4\u56de\u952e\u5c31\u6536\u8d77\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u7528 BackHandler \u6765\u5904\u7406 \u5728 ModalBottomSheet \u540e\u6dfb\u52a0\u4ee3\u7801\uff1a BackHandler ( enabled = ( state . currentValue == ModalBottomSheetValue . HalfExpanded || state . currentValue == ModalBottomSheetValue . Expanded ), onBack = { scope . launch { state . hide () } } )","title":"2. \u6536\u56de ModalBottomSheet"},{"location":"layout/modalbottomsheetlayout/#3","text":"ModalSheetLayout \u9ed8\u8ba4\u7528 state.show() \u6216\u8005 state.hidden() \u6765\u5f39\u51fa\u548c\u6536\u56de \u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u8fd9\u6837\u7684\u65b9\u5f0f\u6765\u81ea\u5b9a\u4e49\u52a8\u753b\u65f6\u95f4 state . animateTo ( ModalBottomSheetValue . Hidden , tween ( 1000 )) \u5f39\u51fa\u540c\u7406","title":"3. \u8bbe\u7f6e\u52a8\u753b\u65f6\u95f4"},{"location":"layout/modalbottomsheetlayout/#4","text":"ModalBottomSheet \u53c2\u6570\u8be6\u60c5","title":"4. \u66f4\u591a"},{"location":"layout/overview/","text":"Layouts in Compose \u672c\u7ae0\u8282\u4e2d\u7684 1-6.1 \u7ae0\u8282\u7ffb\u8bd1\u81ea \u5b98\u65b9\u6587\u6863 \u5e76\u52a0\u4e86\u4e00\u4e9b\u6ce8\u91ca\uff0c\u5176\u4f59\u90e8\u5206\u590d\u5236\u4e8e\u5b98\u65b9\u6587\u6863\u7684\u4e2d\u6587\u7ffb\u8bd1 \u5982\u6709\u7ffb\u8bd1\u4e0d\u51c6\u786e\u6b22\u8fce\u63d0\u4ea4 issue / pr Jetpack Compose \u8ba9\u8bbe\u8ba1\u548c\u6784\u5efa\u4f60\u7684 app UI \u53d8\u5f97\u66f4\u52a0\u5bb9\u6613\u3002 \u8fd9\u7bc7\u6587\u6863\u89e3\u91ca\u4e86 Compose \u63d0\u4f9b\u7684\u4e00\u4e9b\u6784\u5efa\u6a21\u5757\uff0c\u4ee5\u5e2e\u52a9\u4f60\u5e03\u7f6e\u4f60\u7684 UI \u5143\u7d20\uff0c\u5e76\u544a\u8bc9\u4f60\u5982\u4f55\u5728\u4f60\u9700\u8981\u7684\u65f6\u5019\u5efa\u7acb\u66f4\u4e13\u4e1a\u7684\u5e03\u5c40\u3002 Composable \u51fd\u6570\u662f Compose \u7684\u57fa\u672c\u6784\u5efa\u6a21\u5757\uff0c\u4e00\u4e2a Composable \u7684\u51fd\u6570\u662f\u4e00\u4e2a emitting Unit (\u901a\u8fc7\u58f0\u660e\u5f0f\u7684\u8bed\u6cd5\u53bb\u663e\u793a\u51fa\u4e00\u4e2a\u754c\u9762\u5143\u7d20\uff1f) \u7684\u51fd\u6570\uff0c\u63cf\u8ff0\u4f60\u7684\u7528\u6237\u754c\u9762\u7684\u67d0\u4e9b\u90e8\u5206\u3002\u8be5\u51fd\u6570\u63a5\u53d7\u4e00\u4e9b\u8f93\u5165\u5e76\u751f\u6210\u5c4f\u5e55\u4e0a\u663e\u793a\u7684\u5185\u5bb9\u3002 \u4e00\u4e2a Composable \u51fd\u6570\u53ef\u80fd\u4f1a\u5305\u542b\u591a\u4e2a UI \u5143\u7d20\u3002\u4f46\u662f\uff0c\u5982\u679c\u4f60\u4e0d\u544a\u8bc9\u5b83\u4eec\u5e94\u8be5\u5982\u4f55\u88ab\u6392\u5217\uff0c Compose \u53ef\u80fd\u4e0d\u4f1a\u6309\u7167\u4f60\u6240\u60f3\u7684\u65b9\u5f0f\u6765\u6392\u5217\u5b83\u4eec\u3002 \u4f8b\u5982\uff0c\u8fd9\u6bb5\u4ee3\u7801\u751f\u6210\u4e86\u4e24\u4e2a Text \u5143\u7d20 @Composable fun ArtistCard () { Text ( \"Alfred Sisley\" ) Text ( \"3 minutes ago\" ) } \u5728\u4f60\u6ca1\u6709\u6392\u5217\u5b83\u4eec\u7684\u60c5\u51b5\u4e0b\uff0c Compose \u4f1a\u5c06 Text \u5143\u7d20\u5806\u53e0\u5728\u4e00\u8d77\uff0c\u53d8\u5f97\u65e0\u6cd5\u9605\u8bfb\u3002 Compose \u63d0\u4f9b\u4e86\u4e00\u4e2a\u73b0\u6210\u7684\u5e03\u5c40\u96c6\u5408\uff0c\u4ee5\u5e2e\u52a9\u4f60\u5b89\u6392\u4f60\u7684 UI \u5143\u7d20\uff0c\u5e76\u4f7f\u4f60\u66f4\u5bb9\u6613\u5b9a\u4e49\u4f60\u81ea\u5df1\u7684\u3001\u66f4\u4e13\u4e1a\u7684\u5e03\u5c40\u3002 1. \u6807\u51c6\u5e03\u5c40\u7ec4\u4ef6 \u4f7f\u7528 Column \u5b83\u4f1a\u5c06\u91cc\u9762\u7684\u7ec4\u4ef6\u4ee5\u884c\u7684\u5f62\u5f0f\u5448\u73b0\u3002 @Composable fun ArtistCard () { Column { Text ( \"Alfred Sisley\" ) Text ( \"3 minutes ago\" ) } } \u540c\u6837\u5730\uff0c\u4f60\u4e5f\u53ef\u4ee5\u4f7f\u7528 Row , \u5b83\u4f1a\u5c06\u91cc\u9762\u7684\u7ec4\u4ef6\u4ee5\u5217\u7684\u5f62\u5f0f\u5448\u73b0\u3002 Column \u548c Row \u90fd\u652f\u6301\u914d\u7f6e\u5b83\u4eec\u6240\u5305\u542b\u7684\u5143\u7d20\u7684\u5bf9\u9f50\u65b9\u5f0f\u3002 @Composable fun ArtistCard ( artist : Artist ) { Row ( verticalAlignment = Alignment . CenterVertically ) { Image ( /*...*/ ) Column { Text ( artist . name ) Text ( artist . lastSeenOnline ) } } } \u6ce8\u610f \u56fe\u4e2d\u7684\u5706\u5f62\u56fe\u50cf\u7684\u6548\u679c\u53ef\u4ee5\u5728 \u57fa\u672c\u7ec4\u4ef6/Image \u4e2d\u5b9e\u73b0\u3002 \u56fe\u4e2d\u7684\u6587\u5b57\u6548\u679c\u53ef\u4ee5\u5728 \u57fa\u672c\u7ec4\u4ef6/Text \u4e2d\u5b9e\u73b0\u3002 \u5173\u4e8e Row \u7684\u8be6\u60c5\u53ef\u4ee5\u53c2\u8003 \u8fd9\u91cc \u3002 Tips \u6ce8\u610f\uff1aCompose \u6709\u6548\u5730\u5904\u7406\u5d4c\u5957\u5e03\u5c40\uff0c\u4f7f\u5176\u6210\u4e3a\u8bbe\u8ba1\u590d\u6742UI\u7684\u597d\u65b9\u6cd5\u3002\u8fd9\u662f\u5bf9 Android Views \u7684\u6539\u8fdb\uff0c\u5728 Android Views \u4e2d\uff0c\u51fa\u4e8e\u6027\u80fd\u539f\u56e0\uff0c\u60a8\u9700\u8981\u907f\u514d\u5d4c\u5957\u5e03\u5c40\u3002 \u5982\u679c\u60f3\u8981\u5728 Row \u4e2d\u8bbe\u7f6e\u5b50\u9879\u7684\u4f4d\u7f6e\uff0c\u53ef\u4ee5\u8bbe\u7f6e horizontalArrangement \u548c verticalAlignment \u53c2\u6570\uff0c \u5bf9\u4e8e Column \u6765\u8bf4\uff0c\u8bbe\u7f6e verticalArrangement \u548c horizontalAlignment \u3002 @Composable fun AlignInRow () { Row ( modifier = Modifier . size ( 150. dp ) . background ( Color . Yellow ), horizontalArrangement = Arrangement . End , // \u8bbe\u7f6e Row \u4e2d\u7684\u5b50\u9879\u6c34\u5e73\u5e03\u5c40\u4e3a\u6700\u53f3\u8fb9 verticalAlignment = Alignment . CenterVertically // \u8bbe\u7f6e Row \u4e2d\u7684\u5b50\u9879\u7ad6\u76f4\u5e03\u5c40\u4e3a\u4e2d\u5fc3 // start \u5de6\u8fb9 // end \u53f3\u8fb9 // top \u4e0a\u8fb9 // bottom \u4e0b\u8fb9 ) { Box ( Modifier . size ( 50. dp ). background ( Color . Red )) Box ( Modifier . size ( 50. dp ). background ( Color . Blue )) } } 2. Modifier Modifier \u5141\u8bb8\u4f60\u88c5\u9970\u6216\u589e\u5f3a\u4e00\u4e2a Composable \uff0c Modifier \u5141\u8bb8\u4f60\u505a\u4ee5\u4e0b\u7684\u4e8b\u60c5\u3002 \u6539\u53d8 Composable \u7684\u5927\u5c0f\u3001\u5e03\u5c40\u3001\u884c\u4e3a\u548c\u5916\u89c2\u3002 \u6dfb\u52a0\u4fe1\u606f\uff0c\u5982\u65e0\u969c\u788d\u6807\u7b7e\u3002 \u5904\u7406\u7528\u6237\u7684\u8f93\u5165\u3002 \u6dfb\u52a0\u9ad8\u5c42\u6b21\u7684\u4ea4\u4e92\uff0c\u6bd4\u5982\u8ba9\u4e00\u4e2a\u5143\u7d20\u53ef\u70b9\u51fb\u3001\u53ef\u6eda\u52a8\u3001\u53ef\u62d6\u52a8\u6216\u53ef\u7f29\u653e\u3002 \u4fee\u6539\u5668\u662f\u6807\u51c6\u7684 Kotlin \u5bf9\u8c61\u3002\u901a\u8fc7\u8c03\u7528 Modifier \u7c7b\u7684\u4e00\u4e2a\u51fd\u6570\u6765\u521b\u5efa\u4e00\u4e2a modifier \u3002\u4f60\u53ef\u4ee5\u628a\u8fd9\u4e9b\u51fd\u6570\u4e32\u8054\u8d77\u6765\uff0c\u7ec4\u6210\u5b83\u4eec\uff1a @Composable fun ArtistCard ( artist : Artist , onClick : () -> Unit ) { val padding = 16. dp Column ( Modifier . clickable ( onClick = onClick ) . padding ( padding ) . fillMaxWidth () ) { Row ( verticalAlignment = Alignment . CenterVertically ) { /*...*/ } Spacer ( Modifier . size ( padding )) Card ( elevation = 4. dp ) { /*...*/ } } } \u5728\u4e0a\u9762\u7684\u4ee3\u7801\u4e2d\uff0c\u4f60\u4f1a\u6ce8\u610f\u5230\u4e0d\u540c\u7684 modifier \u51fd\u6570\u4e00\u8d77\u4f7f\u7528\u3002 clickable \u4f7f\u4e00\u4e2a Composable \u5143\u7d20\u5bf9\u7528\u6237\u7684\u70b9\u51fb\u4f5c\u51fa\u53cd\u5e94\uff0c\u5e76\u663e\u793a\u4e00\u4e2a\u6ce2\u7eb9\u3002 padding \u5728\u4e00\u4e2a\u5143\u7d20\u7684\u5468\u56f4\u586b\u5145\u4e86\u7a7a\u95f4\u3002 fillMaxWidth \u8ba9 Composable \u5143\u7d20\u586b\u6ee1\u5176\u7236\u5143\u7d20\u7684\u6700\u5927\u5bbd\u5ea6\u3002 size() \u6765\u6307\u5b9a\u4e00\u4e2a\u5143\u7d20\u7684\u5bbd\u5ea6\u548c\u9ad8\u5ea6\u3002 \u6ce8\u610f \u5728\u5176\u4ed6\u65b9\u9762\uff0c Modifier \u7684\u4f5c\u7528\u7c7b\u4f3c\u4e8e\u57fa\u4e8e view \u5e03\u5c40\u4e2d\u7684\u5e03\u5c40\u53c2\u6570\u3002\u7136\u800c\uff0c\u7531\u4e8e Modifier \u6709\u65f6\u662f\u7279\u5b9a\u8303\u56f4\u7684\uff0c\u5b83\u4eec\u63d0\u4f9b\u4e86\u7c7b\u578b\u5b89\u5168\uff0c\u4e5f\u5e2e\u52a9\u4f60\u53d1\u73b0\u548c\u7406\u89e3\u4ec0\u4e48\u662f\u53ef\u7528\u7684\uff0c\u9002\u7528\u4e8e\u67d0\u4e2a\u5e03\u5c40\u3002\u5bf9\u4e8e XML \u5e03\u5c40\uff0c\u6709\u65f6\u5f88\u96be\u53d1\u73b0\u67d0\u4e2a\u7279\u5b9a\u7684\u5e03\u5c40\u5c5e\u6027\u662f\u5426\u9002\u7528\u4e8e\u67d0\u4e2a\u89c6\u56fe\u3002 Modifier \u51fd\u6570\u7684\u987a\u5e8f\u662f\u5f88 \u91cd\u8981 \u7684\u3002\u56e0\u4e3a\u6bcf\u4e2a\u51fd\u6570\u90fd\u4f1a\u5bf9\u524d\u4e00\u4e2a\u51fd\u6570\u8fd4\u56de\u7684\u4fee\u6539\u5668\u8fdb\u884c\u4fee\u6539\uff0c\u6240\u4ee5\u987a\u5e8f\u4f1a\u5f71\u54cd\u6700\u7ec8\u7684\u7ed3\u679c\u3002\u8ba9\u6211\u4eec\u6765\u770b\u770b\u8fd9\u4e2a\u4f8b\u5b50\uff1a @Composable fun ArtistCard ( /*...*/ ) { val padding = 16. dp Column ( Modifier . clickable ( onClick = onClick ) . padding ( padding ) . fillMaxWidth () ) { // rest of the implementation } } \u5728\u4e0a\u9762\u7684\u4ee3\u7801\u4e2d\uff0c\u6574\u4e2a\u533a\u57df\u90fd\u662f\u53ef\u70b9\u51fb\u7684\uff0c\u5305\u62ec\u5468\u56f4\u7684\u586b\u5145\u7269\uff0c\u56e0\u4e3a padding modifier \u88ab\u5e94\u7528\u5728 clickable \u4e4b\u540e\u3002\u5982\u679c modifier \u7684\u987a\u5e8f\u98a0\u5012\u4e86\uff0c\u90a3\u4e48\u7531 padding \u589e\u52a0\u7684\u7a7a\u95f4\u5c31\u4e0d\u4f1a\u5bf9\u7528\u6237\u7684\u8f93\u5165\u505a\u51fa\u53cd\u5e94\u3002 @Composable fun ArtistCard ( /*...*/ ) { val padding = 16. dp Column ( Modifier . padding ( padding ) . clickable ( onClick = onClick ) . fillMaxWidth () ) { // rest of the implementation } } \u6ce8\u610f \u660e\u786e\u987a\u5e8f\u6709\u52a9\u4e8e\u4f60\u63a8\u7406\u4e0d\u540c\u7684 Modifier \u5c06\u5982\u4f55\u76f8\u4e92\u4f5c\u7528\u3002\u4e0e\u57fa\u4e8e view \u7684\u7cfb\u7edf\u76f8\u6bd4\uff0c\u4f60\u5fc5\u987b\u5b66\u4e60\u76d2\u5b50\u6a21\u578b\uff0c\u5373\u5728\u5143\u7d20\u7684 \"\u5916\u9762\" \u5e94\u7528 margin \uff0c\u800c\u5728 \"\u91cc\u9762 \"\u5e94\u7528 pading \uff0c\u80cc\u666f\u5143\u7d20\u4f1a\u6709\u76f8\u5e94\u7684\u5927\u5c0f Modifier \u7684\u8bbe\u8ba1\u4f7f\u8fd9\u79cd\u884c\u4e3a\u53d8\u5f97\u660e\u786e\u548c\u53ef\u9884\u6d4b\uff0c\u5e76\u7ed9\u4f60\u66f4\u591a\u7684\u63a7\u5236\u6765\u5b9e\u73b0\u4f60\u60f3\u8981\u7684\u786e\u5207\u884c\u4e3a\u3002\u8fd9\u4e5f\u89e3\u91ca\u4e86\u4e3a\u4ec0\u4e48\u6ca1\u6709 margin \u4fee\u6539\u5668\u800c\u53ea\u6709 padding \u4fee\u6539\u5668 \u5185\u7f6e modifiers Jetpack Compose \u63d0\u4f9b\u4e86\u4e00\u4e2a\u5185\u7f6e modifiers \u7684\u5217\u8868\uff0c\u4ee5\u5e2e\u52a9\u4f60\u88c5\u9970\u6216\u589e\u5f3a\u4e00\u4e2a Composable \u3002\u4e0b\u9762\u662f\u4e00\u4e2a\u6db5\u76d6\u6700\u5e38\u89c1\u7684\u4f7f\u7528\u60c5\u51b5\u7684\u5217\u8868\uff1a 1. Padding \u548c size \u8981\u5728\u4e00\u4e2a Composable \u7684\u5468\u56f4\u8fdb\u884c\u586b\u5145\uff0c\u8bf7\u6dfb\u52a0 padding @Composable fun PaddedComposable () { Text ( text = \"Hello World\" , modifier = Modifier . background ( Color . Green ) . padding ( 20. dp ) ) } \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0cCompose \u4e2d\u63d0\u4f9b\u7684\u5e03\u5c40\u662f\u5305\u88f9\u5176\u5b50\u9879\u7684\u3002 \u7136\u9e45\uff0c\u4f60\u53ef\u4ee5\u901a\u8fc7\u4f7f\u7528 size \u6765\u8bbe\u7f6e\u4e00\u4e2a\u5c3a\u5bf8 @Composable fun SizedComposable () { Box ( Modifier . size ( 100. dp , 100. dp ). background ( Color . Red )) } \u6ce8\u610f \u5982\u679c\u60a8\u6307\u5b9a\u7684\u5c3a\u5bf8\u4e0d\u6ee1\u8db3\u6765\u81ea\u5e03\u5c40\u7236\u7ea7\u7684\u7ea6\u675f\uff0c\u5219\u53ef\u80fd\u65e0\u6cd5\u4f7f\u7528\u8be5\u5c3a\u5bf8\u3002\u5982\u679c\u4f60\u8981\u6c42\u7684 Composable \u7684\u5c3a\u5bf8\u662f\u56fa\u5b9a\u7684\uff0c\u4e0d\u7ba1\u4f20\u5165\u7684\u7ea6\u675f\u6761\u4ef6\u5982\u4f55\uff0c\u8bf7\u4f7f\u7528 requiredSize @Composable fun FixedSizeComposable () { Box ( Modifier . size ( 90. dp , 150. dp ) . background ( Color . Green ) ) { Box ( Modifier . requiredSize ( 100. dp , 100. dp ) . background ( Color . Red ) ) } } \u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u5373\u4f7f\u7236\u672c\u7684\u5bbd\u5ea6\u88ab\u8bbe\u7f6e\u4e3a 90.dp \uff0c\u5185\u76d2\u7684\u5bbd\u5ea6\u4e5f\u5c06\u662f 100.dp \u56e0\u4e3a\u5185\u76d2\u7684 requiredSize \u4f18\u5148 @Composable fun FillSizeComposable () { Box ( Modifier . background ( Color . Green ) . size ( 50. dp ) . padding ( 10. dp ) ) { Box ( Modifier . background ( Color . Blue ) . fillMaxSize () ) } } \u5982\u679c\u4f60\u60f3\u8ba9\u4e00\u4e2a\u5b50\u5e03\u5c40\u7684\u5c3a\u5bf8\u4e0e\u7236 Box \u7684\u5c3a\u5bf8\u76f8\u540c\u800c\u4e0d\u5f71\u54cd Box \u7684\u5c3a\u5bf8\uff0c\u8bf7\u4f7f\u7528 matchParentSize \u8bf7\u6ce8\u610f\uff0c matchParentSize \u53ea\u5728 Box \u8303\u56f4\u5185\u53ef\u7528\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u5b83\u53ea\u9002\u7528\u4e8e Box composables \u7684\u76f4\u63a5\u5b50\u4ee3 \u5728\u4e0b\u9762\u7684\u4f8b\u5b50\u4e2d\uff0c\u5185\u90e8\u7684 Spacer \u4ece\u5b83\u7684\u7236 Box \u4e2d\u83b7\u53d6\u5176\u5927\u5c0f\uff0c\u800c\u7236 Box \u53c8\u4ece\u5b83\u5305\u542b\u7684 Text \u4e2d\u83b7\u53d6\u5176\u5927\u5c0f @Composable fun MatchParentSizeComposable () { Box { Spacer ( Modifier . matchParentSize (). background ( Color . Green )) Text ( \"Hello World\" ) } } \u5982\u679c\u4f7f\u7528 fillMaxSize \u800c\u4e0d\u662f matchParentSize \uff0c\u90a3\u4e48 Spacer \u5c06\u5360\u7528\u5141\u8bb8\u7ed9\u7236\u4ee3\u7684\u6240\u6709\u53ef\u7528\u7a7a\u95f4\uff0c\u53cd\u8fc7\u6765\u5bfc\u81f4\u7236\u4ee3\u6269\u5c55\u5e76\u586b\u5145\u6240\u6709\u53ef\u7528\u7a7a\u95f4 \u5982\u679c\u4f60\u60f3\u5728\u6587\u672c\u57fa\u7ebf\u4e0a\u65b9\u6dfb\u52a0 padding \u4f7f\u4f60\u8fbe\u5230\u4ece\u5e03\u5c40\u9876\u90e8\u5230\u57fa\u7ebf\u7684\u7279\u5b9a\u8ddd\u79bb \u90a3\u4e48\u8bf7\u4f7f\u7528 paddingFromBaseline @Composable fun TextWithPaddingFromBaseline () { Box ( Modifier . background ( Color . Yellow )) { Text ( \"Hi there!\" , Modifier . paddingFromBaseline ( top = 32. dp )) } } 2. offset \u8981\u5c06\u4e00\u4e2a\u5e03\u5c40\u76f8\u5bf9\u4e8e\u5b83\u7684\u539f\u59cb\u4f4d\u7f6e\u8fdb\u884c\u5b9a\u4f4d\uff0c\u53ef\u4ee5\u6dfb\u52a0 offet \uff0c\u5e76\u5728 x \u548c y \u8f74\u4e0a\u8bbe\u7f6e\u504f\u79fb\u91cf \u504f\u79fb\u91cf\u53ef\u4ee5\u662f\u6b63\u7684\uff0c\u4e5f\u53ef\u4ee5\u662f\u8d1f\u7684\u3002 padding \u548c offset \u7684\u533a\u522b\u5728\u4e8e\uff0c\u7ed9\u4e00\u4e2a Composable \u6dfb\u52a0 offset \u5e76\u4e0d\u4f1a\u6539\u53d8\u5b83\u7684\u6d4b\u91cf @Composable fun OffsetComposable () { Box ( Modifier . background ( Color . Yellow ). size ( width = 150. dp , height = 70. dp )) { Text ( \"Layout offset modifier sample\" , Modifier . offset ( x = 15. dp , y = 20. dp ) ) } } padding modifier \u6839\u636e\u5e03\u5c40\u65b9\u5411\u5728\u6c34\u5e73\u65b9\u5411\u4e0a\u5e94\u7528\u3002\u5728\u4ece\u5de6\u5230\u53f3\u7684\u60c5\u51b5\u4e0b\uff0c\u6b63\u7684\u504f\u79fb\u503c\u4f1a\u5c06\u5143\u7d20\u5411\u53f3\u79fb\u52a8\uff0c\u800c\u5728\u4ece\u53f3\u5230\u5de6\u7684\u60c5\u51b5\u4e0b\uff0c\u5b83\u4f1a\u5c06\u5143\u7d20\u5411\u5de6\u79fb\u52a8\u3002\u5982\u679c\u4f60\u9700\u8981\u5728\u4e0d\u8003\u8651\u5e03\u5c40\u65b9\u5411\u7684\u60c5\u51b5\u4e0b\u8bbe\u7f6e\u4e00\u4e2a\u504f\u79fb\u91cf\uff0c\u8bf7\u53c2\u89c1 absoluteOffset \u4fee\u6539\u5668\uff0c\u5176\u4e2d\u4e00\u4e2a\u6b63\u7684\u504f\u79fb\u503c\u603b\u662f\u5c06\u5143\u7d20\u5411\u53f3\u79fb\u52a8 3. \u54cd\u5e94\u6027\u5e03\u5c40 \u8bbe\u8ba1\u5e03\u5c40\u65f6\u5e94\u8003\u8651\u5230\u4e0d\u540c\u7684\u5c4f\u5e55\u65b9\u5411\u548c\u5916\u5f62\u5c3a\u5bf8\u3002 Compose \u63d0\u4f9b\u4e86\u4e00\u4e9b\u673a\u5236\u6765\u4fc3\u8fdb\u4f60\u7684 Composable \u5e03\u5c40\u9002\u5e94\u5404\u79cd\u5c4f\u5e55\u914d\u7f6e Row \u548c Column \u4e2d\u7684 weight modifier \u6b63\u5982\u4f60\u5728\u524d\u9762\u5173\u4e8e\u586b\u5145\u548c\u5c3a\u5bf8\u7684\u7ae0\u8282\u4e2d\u6240\u770b\u5230\u7684\uff0c\u4e00\u4e2a Composable \u5c3a\u5bf8\u9ed8\u8ba4\u662f\u7531\u5b83\u6240\u5305\u88f9\u7684\u5185\u5bb9\u6765\u5b9a\u4e49\u7684\u3002\u4f60\u53ef\u4ee5\u5c06\u4e00\u4e2a Composable \u5c3a\u5bf8\u8bbe\u7f6e\u4e3a\u5728\u5176\u7236\u7ea7\u5185\u5bb9\u4e2d\u5177\u6709\u7075\u6d3b\u6027\u3002\u8ba9\u6211\u4eec\u6765\u770b\u770b\u4e00\u4e2a\u5305\u542b\u4e24\u4e2a\u76d2\u5b50\u7684\u884c\u7684\u53ef\u7ec4\u5408\u5c3a\u5bf8\u3002 \u7b2c\u4e00\u4e2a\u76d2\u5b50\u7684\u6743\u91cd\u662f\u7b2c\u4e8c\u4e2a\u76d2\u5b50\u7684\u4e24\u500d\uff0c\u6240\u4ee5\u5b83\u7684\u5bbd\u5ea6\u4e5f\u662f\u4e24\u500d\u3002\u56e0\u4e3a\u884c\u7684\u5bbd\u5ea6\u662f 210.dp \uff0c\u6240\u4ee5\u7b2c\u4e00\u4e2a\u76d2\u5b50\u7684\u5bbd\u5ea6\u662f 140.dp \uff0c\u800c\u7b2c\u4e8c\u4e2a\u662f 70.dp @Composable fun FlexibleComposable () { Row ( Modifier . width ( 210. dp )) { Box ( Modifier . weight ( 2f ). height ( 50. dp ). background ( Color . Blue )) Box ( Modifier . weight ( 1f ). height ( 50. dp ). background ( Color . Red )) } } 4. \u7ea6\u675f\u6761\u4ef6 \u4e3a\u4e86\u77e5\u9053\u6765\u81ea\u7236\u4f53\u7684\u7ea6\u675f\u5e76\u76f8\u5e94\u5730\u8bbe\u8ba1\u5e03\u5c40\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528 BoxWithConstraints \u3002\u6d4b\u91cf\u7ea6\u675f\u53ef\u4ee5\u5728 content lambda \u7684\u8303\u56f4\u5185\u627e\u5230\u3002\u4f60\u53ef\u4ee5\u4f7f\u7528\u8fd9\u4e9b\u6d4b\u91cf\u7ea6\u675f\u6765\u4e3a\u4e0d\u540c\u7684\u5c4f\u5e55\u914d\u7f6e\u7ec4\u6210\u4e0d\u540c\u7684\u5e03\u5c40 @Composable fun WithConstraintsComposable () { BoxWithConstraints { Text ( \"My minHeight is $ minHeight while my maxWidth is $ maxWidth \" ) } } \u57fa\u4e8e\u63d2\u69fd\u7684\u5e03\u5c40 Compose \u901a\u8fc7 androidx.compose.material:material \u4f9d\u8d56\u5173\u7cfb\uff08\u5728 Android Studio \u4e2d\u521b\u5efa Compose \u5de5\u7a0b\u65f6\u4f1a\u5305\u542b\u5728\u5185\uff09\u63d0\u4f9b\u4e86\u5927\u91cf\u57fa\u4e8e Material Design \u7684\u53ef\u7ec4\u5408\u5143\u7d20\uff0c\u4f7f UI \u6784\u5efa\u53d8\u5f97\u7b80\u5355\u3002\u50cf Drawer \u3001 FloatingActionButton \u548c TopAppBar \u8fd9\u6837\u7684\u5143\u7d20\u90fd\u88ab\u63d0\u4f9b\u3002 Material \u7ec4\u4ef6\u5927\u91cf\u4f7f\u7528\u63d2\u69fd API\uff0c\u8fd9\u662f Compose \u5f15\u5165\u7684\u4e00\u79cd\u6a21\u5f0f\uff0c\u5728\u53ef\u7ec4\u5408\u7684\u57fa\u7840\u4e0a\u5f15\u5165\u4e86\u4e00\u5c42\u5b9a\u5236\u3002\u8fd9\u79cd\u65b9\u6cd5\u4f7f\u7ec4\u4ef6\u66f4\u52a0\u7075\u6d3b\uff0c\u56e0\u4e3a\u5b83\u4eec\u63a5\u53d7\u4e00\u4e2a\u53ef\u4ee5\u81ea\u6211\u914d\u7f6e\u7684\u5b50\u5143\u7d20\uff0c\u800c\u4e0d\u662f\u5fc5\u987b\u66b4\u9732\u5b50\u5143\u7d20\u7684\u6bcf\u4e00\u4e2a\u914d\u7f6e\u53c2\u6570\u3002\u69fd\u5728\u7528\u6237\u754c\u9762\u4e2d\u7559\u4e0b\u4e86\u4e00\u4e2a\u7a7a\u4f4d\uff0c\u4f9b\u5f00\u53d1\u8005\u6309\u7167\u81ea\u5df1\u7684\u610f\u613f\u6765\u586b\u5145\u3002\u4f8b\u5982\uff0c\u8fd9\u4e9b\u662f\u4f60\u53ef\u4ee5\u5728 TopAppBar \u4e2d\u81ea\u5b9a\u4e49\u7684\u4f4d\u7f6e Composable \u901a\u5e38\u91c7\u53d6\u4e00\u4e2a content \u7684 Composable \uff0c lambda(content: @Composable () -> Unit) \u3002\u63d2\u69fd API \u4e3a\u7279\u5b9a\u7528\u9014\u516c\u5f00\u4e86\u591a\u4e2a\u5185\u5bb9\u53c2\u6570\u3002\u4f8b\u5982\uff0c TopAppBar \u5141\u8bb8\u4f60\u4e3a\u6807\u9898\u3001\u5bfc\u822a\u56fe\u6807\u548c\u884c\u4e3a\u63d0\u4f9b\u5185\u5bb9\u3002 \u4f8b\u5982\uff0c Scaffold \u5141\u8bb8\u4f60\u7528\u57fa\u672c\u7684 Material Design \u5e03\u5c40\u7ed3\u6784\u6765\u5b9e\u73b0\u4e00\u4e2a UI\u3002 Scaffold \u4e3a\u6700\u5e38\u89c1\u7684\u9876\u5c42 Material \u7ec4\u4ef6\u63d0\u4f9b\u4e86\u63d2\u69fd\uff0c\u5982 TopAppBar \u3001 BottomAppBar \u3001 FloatingActionButton \u548c Drawer \u3002\u901a\u8fc7\u4f7f\u7528 Scaffold \uff0c\u6211\u4eec\u53ef\u4ee5\u5f88\u5bb9\u6613\u5730\u786e\u4fdd\u8fd9\u4e9b\u7ec4\u4ef6\u88ab\u6b63\u786e\u5730\u5b9a\u4f4d\u5e76\u6b63\u786e\u5730\u534f\u540c\u5de5\u4f5c\u3002 Tips \u8981\u66f4\u597d\u7684\u4e86\u89e3 Scaffold \u53ef\u4ee5\u53c2\u8003 \u8fd9\u91cc @Composable fun HomeScreen ( /*...*/ ) { Scaffold ( drawerContent = { /*...*/ }, topBar = { /*...*/ }, bodyContent = { /*...*/ } ) } 5. ConstraintLayout ConstraintLayout \u53ef\u4ee5\u5e2e\u52a9\u5728\u5c4f\u5e55\u4e0a\u653e\u7f6e\u76f8\u5bf9\u4e8e\u5176\u4ed6\u7684\u5408\u6210\u7269\uff0c\u5e76\u4e14\u662f\u4f7f\u7528\u591a\u4e2a\u5d4c\u5957\u7684 Row , Column , Box \u81ea\u5b9a\u4e49\u5e03\u5c40\u5143\u7d20\u7684\u66ff\u4ee3\u65b9\u6848\u3002 ConstraintLayout \u5728\u5b9e\u73b0\u5177\u6709\u66f4\u590d\u6742\u5bf9\u9f50\u8981\u6c42\u7684\u5927\u578b\u5e03\u5c40\u65f6\u5f88\u6709\u7528\uff0c\u4f46\u5728\u521b\u5efa\u7b80\u5355\u7684\u5e03\u5c40\u65f6\uff0c\u6700\u597d\u4f7f\u7528 Columns \u548c Rows \u6765\u4ee3\u66ff\u3002 \u8981\u5728 Compose \u4e2d\u4f7f\u7528 ConstraintLayout \uff0c\u4f60\u9700\u8981\u5728 build.gradle \u4e2d\u6dfb\u52a0\u8fd9\u4e2a\u4f9d\u8d56\u9879 implementation \"androidx.constraintlayout:constraintlayout-compose:1.0.0-alpha05\" \u6ce8\u610f \u6ce8\u610f\uff1a\u5728 View \u7cfb\u7edf\u4e2d\uff0c ConstraintLayout \u662f\u521b\u5efa\u5927\u578b\u590d\u6742\u5e03\u5c40\u7684\u63a8\u8350\u65b9\u5f0f\uff0c\u56e0\u4e3a\u6241\u5e73\u7684\u89c6\u56fe\u5c42\u6b21\u7ed3\u6784\u6bd4\u5d4c\u5957\u7684\u89c6\u56fe\u66f4\u6709\u5229\u4e8e\u6027\u80fd\u3002\u7136\u800c\uff0c\u8fd9\u5728 Compose \u4e2d\u5e76\u4e0d\u662f\u4e00\u4e2a\u95ee\u9898\uff0c\u5b83\u80fd\u591f\u6709\u6548\u5730\u5904\u7406\u6df1\u5c42\u6b21\u7684\u5e03\u5c40\u5c42\u6b21\u7ed3\u6784 Compose \u4e2d\u7684 ConstraintLayout \u4ee5 DSL \u65b9\u5f0f\u5de5\u4f5c\u3002 \u5f15\u7528\u662f\u7528 createRefs() \u6216 createRefFor() \u521b\u5efa\u7684\uff0c ConstraintLayout \u4e2d\u7684\u6bcf\u4e00\u4e2a Composable \u90fd\u9700\u8981\u6709\u4e00\u4e2a\u4e0e\u4e4b\u76f8\u5173\u7684\u5f15\u7528\u3002 \u7ea6\u675f\u6761\u4ef6\u4f7f\u7528 constrainAs() modifier \u63d0\u4f9b\uff0c\u5b83\u5c06\u5f15\u7528\u4f5c\u4e3a\u4e00\u4e2a\u53c2\u6570\uff0c\u8ba9\u4f60\u5728\u4e3b\u4f53 lambda \u4e2d\u6307\u5b9a\u5176\u7ea6\u675f\u3002 \u7ea6\u675f\u6761\u4ef6\u4f7f\u7528 linkTo() \u6216\u5176\u4ed6\u6709\u7528\u7684\u65b9\u6cd5\u6765\u6307\u5b9a\u3002 paren t\u662f\u4e00\u4e2a\u73b0\u6709\u7684\u5f15\u7528\uff0c\u53ef\u4ee5\u7528\u6765\u6307\u5b9a\u5bf9 ConstraintLayout composable \u672c\u8eab\u7684\u7ea6\u675f \u4e0b\u9762\u662f\u4e00\u4e2a\u4f7f\u7528 ConstraintLayout \u7684 Composable \u4f8b\u5b50\uff1a @Composable fun ConstraintLayoutContent () { ConstraintLayout { // \u7ed9\u9700\u8981\u7ea6\u675f\u7684 Composable \u5143\u7d20\u521b\u5efa\u5f15\u7528 val ( button , text ) = createRefs () Button ( onClick = { /* Do something */ }, // \u5c06 button \u7684\u5f15\u7528\u7ed9 Button \u63a7\u4ef6 // \u5e76\u4e14\u8bbe\u7f6e\u7ea6\u675f modifier = Modifier . constrainAs ( button ) { top . linkTo ( parent . top , margin = 16. dp ) } ) { Text ( \"Button\" ) } // \u5c06 Text \u7684\u5f15\u7528\u7ed9 Text \u63a7\u4ef6 // \u5e76\u4e14\u8bbe\u7f6e\u7ea6\u675f Text ( \"Text\" , Modifier . constrainAs ( text ) { top . linkTo ( button . bottom , margin = 16. dp ) }) } } \u8fd9\u6bb5\u4ee3\u7801\u5c06 Button \u7684\u9876\u90e8\u7ea6\u675f\u5230\u7236\u7ea7\uff0c\u8fb9\u8ddd\u4e3a 16.dp \uff0c\u5c06 Text \u7ea6\u675f\u5230 Button \u7684\u5e95\u90e8\uff0c\u8fb9\u8ddd\u4e5f\u4e3a 16.dp \u5173\u4e8e\u5982\u4f55\u4f7f\u7528 ConstraintLayout \u7684\u66f4\u591a\u4f8b\u5b50\uff0c\u8bf7\u53c2\u9605 layout codelab \u89e3\u8026\u7684 API \u5728 ConstraintLayout \u7684\u4f8b\u5b50\u4e2d\uff0c\u7ea6\u675f\u6761\u4ef6\u662f\u5185\u8054\u6307\u5b9a\u7684\uff0c\u5728\u5b83\u4eec\u6240\u5e94\u7528\u7684 composable \u4e2d\u5e26\u6709\u4e00\u4e2a modifier\u3002\u7136\u800c\uff0c\u5728\u6709\u4e9b\u60c5\u51b5\u4e0b\uff0c\u6700\u597d\u5c06\u7ea6\u675f\u4e0e\u5b83\u4eec\u6240\u5e94\u7528\u7684\u5e03\u5c40\u89e3\u8026\u3002\u4f8b\u5982\uff0c\u4f60\u53ef\u80fd\u60f3\u6839\u636e\u5c4f\u5e55\u914d\u7f6e\u6765\u6539\u53d8\u7ea6\u675f\uff0c\u6216\u8005\u5728\u4e24\u4e2a\u7ea6\u675f\u96c6\u4e4b\u95f4\u5236\u4f5c\u52a8\u753b\u3002 \u5bf9\u4e8e\u8fd9\u6837\u7684\u60c5\u51b5\uff0c\u4f60\u53ef\u4ee5\u7528\u4e0d\u540c\u7684\u65b9\u5f0f\u6765\u4f7f\u7528 ConstraintLayout \uff1a \u4f20\u5165\u4e00\u4e2a ConstraintSet \u4f5c\u4e3a ConstraintLayout \u7684\u53c2\u6570\u3002 \u4f7f\u7528 layoutId \u4fee\u6539\u5668\u5c06 ConstraintSet \u4e2d\u521b\u5efa\u7684\u5f15\u7528\u5206\u914d\u7ed9 Composable @Composable fun DecoupledConstraintLayout () { BoxWithConstraints { val constraints = if ( minWidth < 600. dp ) { decoupledConstraints ( margin = 16. dp ) // \u7ad6\u5c4f\u7ea6\u675f } else { decoupledConstraints ( margin = 32. dp ) // \u6a2a\u5c4f\u7ea6\u675f } ConstraintLayout ( constraints ) { Button ( onClick = { /* Do something */ }, modifier = Modifier . layoutId ( \"button\" ) ) { Text ( \"Button\" ) } Text ( \"Text\" , Modifier . layoutId ( \"text\" )) } } } private fun decoupledConstraints ( margin : Dp ): ConstraintSet { return ConstraintSet { val button = createRefFor ( \"button\" ) val text = createRefFor ( \"text\" ) constrain ( button ) { top . linkTo ( parent . top , margin = margin ) } constrain ( text ) { top . linkTo ( button . bottom , margin ) } } } \u7136\u540e\uff0c\u5f53\u4f60\u9700\u8981\u6539\u53d8\u7ea6\u675f\u65f6\uff0c\u4f60\u53ef\u4ee5\u53ea\u4f20\u9012\u4e00\u4e2a\u4e0d\u540c\u7684 ConstraintSet 6. \u81ea\u5b9a\u4e49\u5e03\u5c40 \u5728 Compose \u4e2d\uff0cUI \u5143\u7d20\u7531 composable \u51fd\u6570\u8868\u793a\uff0c\u8fd9\u4e9b\u51fd\u6570\u5728\u88ab\u8c03\u7528\u65f6\u53d1\u51fa\u4e00\u6bb5 UI\uff0c\u7136\u540e\u88ab\u6dfb\u52a0\u5230\u4e00\u4e2a UI \u6811\u4e2d\uff0c\u5728\u5c4f\u5e55\u4e0a\u5448\u73b0\u3002\u6bcf\u4e2a UI \u5143\u7d20\u90fd\u6709\u4e00\u4e2a\u7236\u5143\u7d20\u548c\u53ef\u80fd\u7684\u8bb8\u591a\u5b50\u5143\u7d20\u3002\u6bcf\u4e2a\u5143\u7d20\u90fd\u4f4d\u4e8e\u5b83\u7684\u7236\u5143\u7d20\u4e2d\uff0c\u88ab\u6307\u5b9a\u4e3a\u4e00\u4e2a\uff08x\uff0cy\uff09\u4f4d\u7f6e\uff0c\u4ee5\u53ca\u4e00\u4e2a\u5c3a\u5bf8\uff0c\u88ab\u6307\u5b9a\u4e3a\u4e00\u4e2a\u5bbd\u5ea6\u548c\u4e00\u4e2a\u9ad8\u5ea6\u3002 \u7236\u5143\u7d20\u4e3a\u4ed6\u4eec\u7684\u5b50\u5143\u7d20\u5b9a\u4e49\u7ea6\u675f\u6761\u4ef6\u3002\u4e00\u4e2a\u5143\u7d20\u88ab\u8981\u6c42\u5728\u8fd9\u4e9b\u7ea6\u675f\u4e2d\u5b9a\u4e49\u5b83\u7684\u5c3a\u5bf8\u3002\u7ea6\u675f\u6761\u4ef6\u9650\u5236\u4e86\u4e00\u4e2a\u5143\u7d20\u7684\u6700\u5c0f\u548c\u6700\u5927\u5bbd\u5ea6\u548c\u9ad8\u5ea6\u3002\u5982\u679c\u4e00\u4e2a\u5143\u7d20\u6709\u5b50\u5143\u7d20\uff0c\u5b83\u53ef\u4ee5\u6d4b\u91cf\u6bcf\u4e2a\u5b50\u5143\u7d20\u4ee5\u5e2e\u52a9\u786e\u5b9a\u5176\u5c3a\u5bf8\u3002\u4e00\u65e6\u4e00\u4e2a\u5143\u7d20\u786e\u5b9a\u5e76\u544a\u77e5\u4e86\u5b83\u81ea\u5df1\u7684\u5c3a\u5bf8\uff0c\u5b83\u6709\u673a\u4f1a\u5b9a\u4e49\u5982\u4f55\u76f8\u5bf9\u4e8e\u81ea\u8eab\u653e\u7f6e\u5b50\u5143\u7d20\uff0c\u5c31\u50cf\u5728\u521b\u5efa\u81ea\u5b9a\u4e49\u5e03\u5c40\u4e2d\u8be6\u7ec6\u63cf\u8ff0\u7684\u3002 \u6ce8\u610f\uff1aCompose UI \u4e0d\u5141\u8bb8\u591a\u901a\u9053\u6d4b\u91cf\u3002\u8fd9\u610f\u5473\u7740\u4e00\u4e2a\u5e03\u5c40\u5143\u7d20\u4e0d\u80fd\u591a\u6b21\u6d4b\u91cf\u5b83\u7684\u4efb\u4f55\u5b50\u5143\u7d20\uff0c\u4ee5\u5c1d\u8bd5\u4e0d\u540c\u7684\u6d4b\u91cf\u914d\u7f6e\u3002 \u5355\u904d\u6d4b\u91cf\u6709\u52a9\u4e8e\u63d0\u9ad8\u6027\u80fd\uff0c\u4f7f Compose \u53ef\u4ee5\u6709\u6548\u5904\u7406\u6df1\u5c42 UI \u6811\u3002\u5982\u679c\u4e00\u4e2a\u5143\u7d20\u6d4b\u91cf\u4e86\u5b83\u7684\u5b50\u5143\u7d20\u4e24\u6b21\uff0c\u800c\u8fd9\u4e2a\u5b50\u5143\u7d20\u53c8\u6d4b\u91cf\u4e86\u5b83\u7684\u4e00\u4e2a\u5b50\u5143\u7d20\u4e24\u6b21\uff0c\u4ee5\u6b64\u7c7b\u63a8\uff0c\u90a3\u4e48\u4e00\u6b21\u5c1d\u8bd5\u5e03\u5c40\u6574\u4e2a UI \u5c31\u5fc5\u987b\u505a\u5f88\u591a\u5de5\u4f5c\uff0c\u8fd9\u5c31\u5f88\u96be\u8ba9\u4f60\u7684\u5e94\u7528\u7a0b\u5e8f\u4fdd\u6301\u826f\u597d\u7684\u6027\u80fd\u3002\u7136\u800c\uff0c\u6709\u4e9b\u65f6\u5019\uff0c\u4f60\u771f\u7684\u9700\u8981\u5728\u5355\u4e2a\u5b50\u9879\u6d4b\u91cf\u6240\u80fd\u544a\u8bc9\u4f60\u7684\u4fe1\u606f\u4e4b\u4e0a\u7684\u989d\u5916\u4fe1\u606f\u3002\u6709\u4e00\u4e9b\u65b9\u6cd5\u53ef\u4ee5\u6709\u6548\u5730\u5e94\u5bf9\u8fd9\u6837\u7684\u60c5\u51b5\uff0c\u8fd9\u4e9b\u65b9\u6cd5\u5c06\u5728\u5185\u5728\u7684\u6d4b\u91cf\u90e8\u5206\u8ba8\u8bba \u4f7f\u7528 layout modifier \u4f60\u53ef\u4ee5\u4f7f\u7528 layout modifier \u6765\u4fee\u6539\u4e00\u4e2a\u5143\u7d20\u7684\u6d4b\u91cf\u548c\u5e03\u5c40\u65b9\u5f0f\u3002 Layout \u662f\u4e00\u4e2a lambda \uff1b\u5b83\u7684\u53c2\u6570\u5305\u62ec\u4f60\u53ef\u4ee5\u6d4b\u91cf\u7684\u5143\u7d20\uff0c\u4ee5\u53ef\u6d4b\u91cf\u7684\u65b9\u5f0f\u4f20\u9012\uff0c\u800c\u8fd9\u4e2a Composable \u7684\u4f20\u5165\u7ea6\u675f\u5219\u4ee5\u7ea6\u675f\u7684\u65b9\u5f0f\u4f20\u9012\u3002\u4e00\u4e2a\u81ea\u5b9a\u4e49\u7684 layout modifier \u53ef\u4ee5\u662f\u8fd9\u6837\u7684 fun Modifier . customLayoutModifier (...) = this . layout { measurable , constraints -> ... }) \u8ba9\u6211\u4eec\u5728\u5c4f\u5e55\u4e0a\u663e\u793a\u4e00\u4e2a\u6587\u672c\uff0c\u5e76\u63a7\u5236\u7b2c\u4e00\u884c\u6587\u672c\u4ece\u9876\u90e8\u5230\u57fa\u7ebf\u7684\u8ddd\u79bb\u3002\u8fd9\u6b63\u662f paddingFromBaseline \u7684\u4f5c\u7528\uff0c\u6211\u4eec\u5728\u8fd9\u91cc\u4f5c\u4e3a\u4e00\u4e2a\u4f8b\u5b50\u6765\u5b9e\u73b0\u5b83\u3002\u8981\u505a\u5230\u8fd9\u4e00\u70b9\uff0c\u8bf7\u4f7f\u7528 layout modifier \u6765\u624b\u52a8\u5c06 Composable \u7684\u4e1c\u897f\u653e\u5728\u5c4f\u5e55\u4e0a\u3002 \u4e0b\u9762\u662f\u671f\u671b\u7684\u884c\u4e3a\uff0c\u6587\u672c\u9876\u90e8\u7684 padding \u88ab\u8bbe\u7f6e\u4e3a 24.dp \u4e0b\u9762\u662f\u4ea7\u751f\u8fd9\u79cd\u95f4\u8ddd\u7684\u4ee3\u7801\uff1a fun Modifier . firstBaselineToTop ( firstBaselineToTop : Dp ) = layout { measurable , constraints -> // Measure the composable val placeable = measurable . measure ( constraints ) // Check the composable has a first baseline check ( placeable [ FirstBaseline ] != AlignmentLine . Unspecified ) val firstBaseline = placeable [ FirstBaseline ] // Height of the composable with padding - first baseline val placeableY = firstBaselineToTop . roundToPx () - firstBaseline val height = placeable . height + placeableY layout ( placeable . width , height ) { // Where the composable gets placed placeable . placeRelative ( 0 , placeableY ) } } \u4ee5\u4e0b\u662f\u90a3\u6bb5\u4ee3\u7801\u4e2d\u7684\u5185\u5bb9\uff1a \u5728 measurablelambda \u53c2\u6570\u4e2d\uff0c\u4f60\u901a\u8fc7\u8c03\u7528 measurable.measure(constraints) \u6765\u6d4b\u91cf\u7531 measurabl \u53c2\u6570\u4ee3\u8868\u7684 Text \u3002 \u4f60\u901a\u8fc7\u8c03\u7528 layout(width, height) \u65b9\u6cd5\u6765\u6307\u5b9a Composable \u7684\u5c3a\u5bf8\uff0c\u8be5\u65b9\u6cd5\u4e5f\u7ed9\u51fa\u4e86\u4e00\u4e2a\u7528\u4e8e\u653e\u7f6e\u5305\u88c5\u5143\u7d20\u7684 lambda \u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u5b83\u662f\u6700\u540e\u4e00\u4e2a baseline \u548c\u589e\u52a0\u7684 top padding \u4e4b\u95f4\u7684\u9ad8\u5ea6\u3002 \u4f60\u53ef\u4ee5\u901a\u8fc7\u8c03\u7528 placeable.place(x, y) \u5c06\u88ab\u5305\u88c5\u597d\u7684\u5143\u7d20\u653e\u7f6e\u5728\u5c4f\u5e55\u4e0a\u3002\u5982\u679c\u88ab\u5305\u88c5\u7684\u5143\u7d20\u6ca1\u6709\u88ab\u653e\u7f6e\uff0c\u5b83\u4eec\u5c06\u4e0d\u53ef\u89c1\u3002 y position \u5bf9\u5e94\u7684\u662f top padding -- \u6587\u672c\u7684\u7b2c\u4e00\u6761 baseline \u7684\u4f4d\u7f6e\u3002 \u4e3a\u4e86\u9a8c\u8bc1\u8fd9\u662f\u5426\u5982\u9884\u671f\u7684\u90a3\u6837\u5de5\u4f5c\uff0c\u8bf7\u5728 Text \u4e0a\u4f7f\u7528\u8fd9\u4e2a modifier \u3002 @Preview @Composable fun TextWithPaddingToBaselinePreview () { MyApplicationTheme { Text ( \"Hi there!\" , Modifier . firstBaselineToTop ( 32. dp )) } } @Preview @Composable fun TextWithNormalPaddingPreview () { MyApplicationTheme { Text ( \"Hi there!\" , Modifier . padding ( top = 32. dp )) } } \u521b\u5efa\u81ea\u5b9a\u4e49\u5e03\u5c40 layout \u4fee\u9970\u7b26\u4ec5\u66f4\u6539\u8c03\u7528\u53ef\u7ec4\u5408\u9879\u3002\u5982\u9700\u6d4b\u91cf\u548c\u5e03\u7f6e\u591a\u4e2a\u53ef\u7ec4\u5408\u9879\uff0c\u8bf7\u6539\u7528 Layout \u53ef\u7ec4\u5408\u9879\u3002\u6b64\u53ef\u7ec4\u5408\u9879\u5141\u8bb8\u60a8\u624b\u52a8\u6d4b\u91cf\u548c\u5e03\u7f6e\u5b50\u9879\u3002 Column \u548c Row \u7b49\u6240\u6709\u8f83\u9ad8\u7ea7\u522b\u7684\u5e03\u5c40\u90fd\u4f7f\u7528 Layout \u53ef\u7ec4\u5408\u9879\u6784\u5efa\u800c\u6210\u3002 \u6ce8\u610f \u5728 View \u7cfb\u7edf\u4e2d\uff0c\u521b\u5efa\u81ea\u5b9a\u4e49\u5e03\u5c40\u5fc5\u987b\u6269\u5c55 ViewGroup \u5e76\u5b9e\u73b0\u6d4b\u91cf\u548c\u5e03\u5c40\u51fd\u6570\u3002\u5728 Compose \u4e2d\uff0c\u60a8\u53ea\u9700\u4f7f\u7528 Layout \u53ef\u7ec4\u5408\u9879\u7f16\u5199\u4e00\u4e2a\u51fd\u6570\u5373\u53ef \u6211\u4eec\u6765\u6784\u5efa\u4e00\u4e2a\u975e\u5e38\u57fa\u672c\u7684 Column\u3002\u5927\u591a\u6570\u81ea\u5b9a\u4e49\u5e03\u5c40\u90fd\u9075\u5faa\u4ee5\u4e0b\u6a21\u5f0f\uff1a @Composable fun MyBasicColumn ( modifier : Modifier = Modifier , content : @Composable () () -> Unit ) { Layout ( modifier = modifier , children = content ) { measurables , constraints -> // measure and position children given constraints logic here } } \u4e0e layout \u4fee\u9970\u7b26\u7c7b\u4f3c\uff0c measurables \u662f\u9700\u8981\u6d4b\u91cf\u7684\u5b50\u9879\u7684\u5217\u8868\uff0c\u800c constraints \u662f\u6765\u81ea\u7236\u9879\u7684\u7ea6\u675f\u6761\u4ef6\u3002\u6309\u7167\u4e0e\u524d\u9762\u76f8\u540c\u7684\u903b\u8f91\uff0c\u53ef\u6309\u5982\u4e0b\u65b9\u5f0f\u5b9e\u73b0 MyBasicColumn \uff1a @Composable fun MyBasicColumn ( modifier : Modifier = Modifier , content : @Composable () () -> Unit ) { Layout ( modifier = modifier , content = content ) { measurables , constraints -> // Don't constrain child views further, measure them with given constraints // List of measured children val placeables = measurables . map { measurable -> // Measure each children measurable . measure ( constraints ) } // Set the size of the layout as big as it can layout ( constraints . maxWidth , constraints . maxHeight ) { // Track the y co-ord we have placed children up to var yPosition = 0 // Place children in the parent layout placeables . forEach { placeable -> // Position item on the screen placeable . placeRelative ( x = 0 , y = yPosition ) // Record the y co-ord placed up to yPosition += placeable . height } } } } \u53ef\u7ec4\u5408\u5b50\u9879\u53d7 Layout \u7ea6\u675f\u6761\u4ef6\uff08\u6ca1\u6709 minHeight \u7ea6\u675f\u6761\u4ef6\uff09\u7684\u7ea6\u675f\uff0c\u5b83\u4eec\u7684\u653e\u7f6e\u57fa\u4e8e\u524d\u4e00\u4e2a\u53ef\u7ec4\u5408\u9879\u7684 yPosition \u3002 \u8be5\u81ea\u5b9a\u4e49\u53ef\u7ec4\u5408\u9879\u7684\u4f7f\u7528\u65b9\u5f0f\u5982\u4e0b\uff1a @Composable fun CallingComposable ( modifier : Modifier = Modifier ) { MyBasicColumn ( modifier . padding ( 8. dp )) { Text ( \"MyBasicColumn\" ) Text ( \"places items\" ) Text ( \"vertically.\" ) Text ( \"We've done it by hand!\" ) } } 7. \u5e03\u5c40\u65b9\u5411 \u60a8\u53ef\u4ee5\u901a\u8fc7\u66f4\u6539 LocalLayoutDirection composeLocal \u6765\u66f4\u6539\u53ef\u7ec4\u5408\u9879\u7684\u5e03\u5c40\u65b9\u5411\u3002 \u5982\u679c\u60a8\u8981\u5c06\u53ef\u7ec4\u5408\u9879\u624b\u52a8\u653e\u7f6e\u5728\u5c4f\u5e55\u4e0a\uff0c\u5219 LayoutDirection \u662f layout \u4fee\u9970\u7b26\u6216 Layout \u53ef\u7ec4\u5408\u9879\u7684 LayoutScope \u7684\u4e00\u90e8\u5206\u3002 \u4f7f\u7528 layoutDirection \u65f6\uff0c\u5e94\u4f7f\u7528 place \u653e\u7f6e\u53ef\u7ec4\u5408\u9879\u3002\u4e0e place \u65b9\u6cd5\u4e0d\u540c\uff0c place \u4e0d\u4f1a\u6839\u636e\u9605\u8bfb\u65b9\u5411\uff08\u4ece\u5de6\u5230\u53f3\u4e0e\u4ece\u53f3\u5230\u5de6\uff09\u53d1\u751f\u53d8\u5316\u3002 8. \u56fa\u6709\u7279\u6027\u6d4b\u91cf Compose \u6709\u4e00\u9879\u89c4\u5219\uff0c\u5373\uff0c\u5b50\u9879\u53ea\u80fd\u6d4b\u91cf\u4e00\u6b21\uff0c\u6d4b\u91cf\u4e24\u6b21\u5c31\u4f1a\u5f15\u53d1\u8fd0\u884c\u65f6\u5f02\u5e38\u3002\u4f46\u662f\uff0c\u6709\u65f6\u9700\u8981\u5148\u6536\u96c6\u4e00\u4e9b\u5173\u4e8e\u5b50\u9879\u7684\u4fe1\u606f\uff0c\u7136\u540e\u518d\u6d4b\u91cf\u5b50\u9879\u3002 \u501f\u52a9\u56fa\u6709\u7279\u6027\uff0c\u60a8\u53ef\u4ee5\u5148\u67e5\u8be2\u5b50\u9879\uff0c\u7136\u540e\u518d\u8fdb\u884c\u5b9e\u9645\u6d4b\u91cf\u3002 \u5bf9\u4e8e\u53ef\u7ec4\u5408\u9879\uff0c\u60a8\u53ef\u4ee5\u67e5\u8be2\u5176 intrinsicWidth \u6216 intrinsicHeight \uff1a (min|max)IntrinsicWidth \uff1a\u7ed9\u5b9a\u6b64\u9ad8\u5ea6\uff0c\u53ef\u4ee5\u6b63\u786e\u7ed8\u5236\u5185\u5bb9\u7684\u6700\u5c0f/\u6700\u5927\u5bbd\u5ea6\u662f\u591a\u5c11\uff1f (min|max)IntrinsicHeight \uff1a\u7ed9\u5b9a\u6b64\u5bbd\u5ea6\uff0c\u53ef\u4ee5\u6b63\u786e\u7ed8\u5236\u5185\u5bb9\u7684\u6700\u5c0f/\u6700\u5927\u9ad8\u5ea6\u662f\u591a\u5c11\uff1f \u4f8b\u5982\uff0c\u5982\u679c\u60a8\u67e5\u8be2\u5177\u6709\u65e0\u9650 width \u7684 Text \u7684 minIntrinsicHeight \uff0c\u5b83\u5c06\u8fd4\u56de Text \u7684 height \uff0c\u5c31\u597d\u50cf\u8be5\u6587\u672c\u662f\u5728\u5355\u884c\u4e2d\u7ed8\u5236\u7684\u4e00\u6837\u3002 \u56fa\u6709\u7279\u6027\u7684\u5b9e\u9645\u8fd0\u7528 \u5047\u8bbe\u6211\u4eec\u9700\u8981\u521b\u5efa\u4e00\u4e2a\u53ef\u7ec4\u5408\u9879\uff0c\u8be5\u53ef\u7ec4\u5408\u9879\u5728\u5c4f\u5e55\u4e0a\u663e\u793a\u4e24\u4e2a\u7528\u5206\u9694\u7ebf\u9694\u5f00\u7684\u6587\u672c\uff0c\u5982\u4e0b\u6240\u793a\uff1a \u6211\u4eec\u8be5\u600e\u4e48\u505a\uff1f\u6211\u4eec\u53ef\u4ee5\u5c06\u4e24\u4e2a Text \u653e\u5728\u540c\u4e00 Row\uff0c\u5e76\u5728\u5176\u4e2d\u6700\u5927\u7a0b\u5ea6\u5730\u6269\u5c55\uff0c\u53e6\u5916\u5728\u4e2d\u95f4\u653e\u7f6e\u4e00\u4e2a Divider\u3002\u6211\u4eec\u9700\u8981\u5c06\u5206\u9694\u7ebf\u7684\u9ad8\u5ea6\u8bbe\u7f6e\u4e3a\u4e0e\u6700\u9ad8\u7684 Text \u76f8\u540c\uff0c\u7c97\u7ec6\u8bbe\u7f6e\u4e3a width = 1.dp\u3002 @Composable fun TwoTexts ( modifier : Modifier = Modifier , text1 : String , text2 : String ) { Row ( modifier = modifier ) { Text ( modifier = Modifier . weight ( 1f ) . padding ( start = 4. dp ) . wrapContentWidth ( Alignment . Start ), text = text1 ) Divider ( color = Color . Black , modifier = Modifier . fillMaxHeight (). width ( 1. dp )) Text ( modifier = Modifier . weight ( 1f ) . padding ( end = 4. dp ) . wrapContentWidth ( Alignment . End ), text = text2 ) } } @Preview @Composable fun TwoTextsPreview () { LayoutsCodelabTheme { Surface { TwoTexts ( text1 = \"Hi\" , text2 = \"there\" ) } } } \u9884\u89c8\u65f6\uff0c\u6211\u4eec\u53d1\u73b0\u5206\u9694\u7ebf\u6269\u5c55\u5230\u6574\u4e2a\u5c4f\u5e55\uff0c\u8fd9\u5e76\u4e0d\u662f\u6211\u4eec\u60f3\u8981\u7684\u6548\u679c\uff1a \u4e4b\u6240\u4ee5\u51fa\u73b0\u8fd9\u79cd\u60c5\u51b5\uff0c\u662f\u56e0\u4e3a Row \u4f1a\u9010\u4e2a\u6d4b\u91cf\u6bcf\u4e2a\u5b50\u9879\uff0c\u5e76\u4e14 Text \u7684\u9ad8\u5ea6\u4e0d\u80fd\u7528\u4e8e\u9650\u5236 Divider \u3002\u6211\u4eec\u5e0c\u671b Divider \u4ee5\u4e00\u4e2a\u7ed9\u5b9a\u7684\u9ad8\u5ea6\u6765\u586b\u5145\u53ef\u7528\u7a7a\u95f4\u3002\u4e3a\u6b64\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 height(IntrinsicSize.Min) \u4fee\u9970\u7b26\u3002 height(IntrinsicSize.Min) \u53ef\u5c06\u5176\u5b50\u9879\u7684\u9ad8\u5ea6\u5f3a\u884c\u8c03\u6574\u4e3a\u6700\u5c0f\u56fa\u6709\u9ad8\u5ea6\u3002\u7531\u4e8e\u8be5\u4fee\u9970\u7b26\u5177\u6709\u9012\u5f52\u6027\uff0c\u56e0\u6b64\u5b83\u5c06\u67e5\u8be2 Row \u53ca\u5176\u5b50\u9879 minIntrinsicHeight \u3002 \u5c06\u5176\u5e94\u7528\u5230\u4ee3\u7801\u4e2d\uff0c\u5c31\u80fd\u8fbe\u5230\u9884\u671f\u7684\u6548\u679c\uff1a Row \u53ef\u7ec4\u5408\u9879\u7684 minIntrinsicHeight \u5c06\u4f5c\u4e3a\u5176\u5b50\u9879\u7684\u6700\u5927 minIntrinsicHeight \u3002 Divider \u5143\u7d20\u7684 minIntrinsicHeight \u4e3a 0 \uff0c\u56e0\u4e3a\u5982\u679c\u6ca1\u6709\u7ed9\u51fa\u7ea6\u675f\u6761\u4ef6\uff0c\u5b83\u4e0d\u4f1a\u5360\u7528\u4efb\u4f55\u7a7a\u95f4\uff1b\u5982\u679c\u7ed9\u51fa\u7279\u5b9a width \uff0c Text minIntrinsicHeight \u5c06\u4e3a\u6587\u672c\u7684\u9ad8\u5ea6\u3002\u56e0\u6b64\uff0c Row \u5143\u7d20\u7684 height \u7ea6\u675f\u6761\u4ef6\u5c06\u4e3a Text \u7684\u6700\u5927 m inIntrinsicHeight \u3002\u800c Divider \u4f1a\u5c06\u5176 height \u6269\u5c55\u4e3a Row \u7ed9\u5b9a\u7684 height \u7ea6\u675f\u6761\u4ef6\u3002","title":"\u6982\u8ff0"},{"location":"layout/overview/#layouts-in-compose","text":"\u672c\u7ae0\u8282\u4e2d\u7684 1-6.1 \u7ae0\u8282\u7ffb\u8bd1\u81ea \u5b98\u65b9\u6587\u6863 \u5e76\u52a0\u4e86\u4e00\u4e9b\u6ce8\u91ca\uff0c\u5176\u4f59\u90e8\u5206\u590d\u5236\u4e8e\u5b98\u65b9\u6587\u6863\u7684\u4e2d\u6587\u7ffb\u8bd1 \u5982\u6709\u7ffb\u8bd1\u4e0d\u51c6\u786e\u6b22\u8fce\u63d0\u4ea4 issue / pr Jetpack Compose \u8ba9\u8bbe\u8ba1\u548c\u6784\u5efa\u4f60\u7684 app UI \u53d8\u5f97\u66f4\u52a0\u5bb9\u6613\u3002 \u8fd9\u7bc7\u6587\u6863\u89e3\u91ca\u4e86 Compose \u63d0\u4f9b\u7684\u4e00\u4e9b\u6784\u5efa\u6a21\u5757\uff0c\u4ee5\u5e2e\u52a9\u4f60\u5e03\u7f6e\u4f60\u7684 UI \u5143\u7d20\uff0c\u5e76\u544a\u8bc9\u4f60\u5982\u4f55\u5728\u4f60\u9700\u8981\u7684\u65f6\u5019\u5efa\u7acb\u66f4\u4e13\u4e1a\u7684\u5e03\u5c40\u3002 Composable \u51fd\u6570\u662f Compose \u7684\u57fa\u672c\u6784\u5efa\u6a21\u5757\uff0c\u4e00\u4e2a Composable \u7684\u51fd\u6570\u662f\u4e00\u4e2a emitting Unit (\u901a\u8fc7\u58f0\u660e\u5f0f\u7684\u8bed\u6cd5\u53bb\u663e\u793a\u51fa\u4e00\u4e2a\u754c\u9762\u5143\u7d20\uff1f) \u7684\u51fd\u6570\uff0c\u63cf\u8ff0\u4f60\u7684\u7528\u6237\u754c\u9762\u7684\u67d0\u4e9b\u90e8\u5206\u3002\u8be5\u51fd\u6570\u63a5\u53d7\u4e00\u4e9b\u8f93\u5165\u5e76\u751f\u6210\u5c4f\u5e55\u4e0a\u663e\u793a\u7684\u5185\u5bb9\u3002 \u4e00\u4e2a Composable \u51fd\u6570\u53ef\u80fd\u4f1a\u5305\u542b\u591a\u4e2a UI \u5143\u7d20\u3002\u4f46\u662f\uff0c\u5982\u679c\u4f60\u4e0d\u544a\u8bc9\u5b83\u4eec\u5e94\u8be5\u5982\u4f55\u88ab\u6392\u5217\uff0c Compose \u53ef\u80fd\u4e0d\u4f1a\u6309\u7167\u4f60\u6240\u60f3\u7684\u65b9\u5f0f\u6765\u6392\u5217\u5b83\u4eec\u3002 \u4f8b\u5982\uff0c\u8fd9\u6bb5\u4ee3\u7801\u751f\u6210\u4e86\u4e24\u4e2a Text \u5143\u7d20 @Composable fun ArtistCard () { Text ( \"Alfred Sisley\" ) Text ( \"3 minutes ago\" ) } \u5728\u4f60\u6ca1\u6709\u6392\u5217\u5b83\u4eec\u7684\u60c5\u51b5\u4e0b\uff0c Compose \u4f1a\u5c06 Text \u5143\u7d20\u5806\u53e0\u5728\u4e00\u8d77\uff0c\u53d8\u5f97\u65e0\u6cd5\u9605\u8bfb\u3002 Compose \u63d0\u4f9b\u4e86\u4e00\u4e2a\u73b0\u6210\u7684\u5e03\u5c40\u96c6\u5408\uff0c\u4ee5\u5e2e\u52a9\u4f60\u5b89\u6392\u4f60\u7684 UI \u5143\u7d20\uff0c\u5e76\u4f7f\u4f60\u66f4\u5bb9\u6613\u5b9a\u4e49\u4f60\u81ea\u5df1\u7684\u3001\u66f4\u4e13\u4e1a\u7684\u5e03\u5c40\u3002","title":"Layouts in Compose"},{"location":"layout/overview/#1","text":"\u4f7f\u7528 Column \u5b83\u4f1a\u5c06\u91cc\u9762\u7684\u7ec4\u4ef6\u4ee5\u884c\u7684\u5f62\u5f0f\u5448\u73b0\u3002 @Composable fun ArtistCard () { Column { Text ( \"Alfred Sisley\" ) Text ( \"3 minutes ago\" ) } } \u540c\u6837\u5730\uff0c\u4f60\u4e5f\u53ef\u4ee5\u4f7f\u7528 Row , \u5b83\u4f1a\u5c06\u91cc\u9762\u7684\u7ec4\u4ef6\u4ee5\u5217\u7684\u5f62\u5f0f\u5448\u73b0\u3002 Column \u548c Row \u90fd\u652f\u6301\u914d\u7f6e\u5b83\u4eec\u6240\u5305\u542b\u7684\u5143\u7d20\u7684\u5bf9\u9f50\u65b9\u5f0f\u3002 @Composable fun ArtistCard ( artist : Artist ) { Row ( verticalAlignment = Alignment . CenterVertically ) { Image ( /*...*/ ) Column { Text ( artist . name ) Text ( artist . lastSeenOnline ) } } } \u6ce8\u610f \u56fe\u4e2d\u7684\u5706\u5f62\u56fe\u50cf\u7684\u6548\u679c\u53ef\u4ee5\u5728 \u57fa\u672c\u7ec4\u4ef6/Image \u4e2d\u5b9e\u73b0\u3002 \u56fe\u4e2d\u7684\u6587\u5b57\u6548\u679c\u53ef\u4ee5\u5728 \u57fa\u672c\u7ec4\u4ef6/Text \u4e2d\u5b9e\u73b0\u3002 \u5173\u4e8e Row \u7684\u8be6\u60c5\u53ef\u4ee5\u53c2\u8003 \u8fd9\u91cc \u3002 Tips \u6ce8\u610f\uff1aCompose \u6709\u6548\u5730\u5904\u7406\u5d4c\u5957\u5e03\u5c40\uff0c\u4f7f\u5176\u6210\u4e3a\u8bbe\u8ba1\u590d\u6742UI\u7684\u597d\u65b9\u6cd5\u3002\u8fd9\u662f\u5bf9 Android Views \u7684\u6539\u8fdb\uff0c\u5728 Android Views \u4e2d\uff0c\u51fa\u4e8e\u6027\u80fd\u539f\u56e0\uff0c\u60a8\u9700\u8981\u907f\u514d\u5d4c\u5957\u5e03\u5c40\u3002 \u5982\u679c\u60f3\u8981\u5728 Row \u4e2d\u8bbe\u7f6e\u5b50\u9879\u7684\u4f4d\u7f6e\uff0c\u53ef\u4ee5\u8bbe\u7f6e horizontalArrangement \u548c verticalAlignment \u53c2\u6570\uff0c \u5bf9\u4e8e Column \u6765\u8bf4\uff0c\u8bbe\u7f6e verticalArrangement \u548c horizontalAlignment \u3002 @Composable fun AlignInRow () { Row ( modifier = Modifier . size ( 150. dp ) . background ( Color . Yellow ), horizontalArrangement = Arrangement . End , // \u8bbe\u7f6e Row \u4e2d\u7684\u5b50\u9879\u6c34\u5e73\u5e03\u5c40\u4e3a\u6700\u53f3\u8fb9 verticalAlignment = Alignment . CenterVertically // \u8bbe\u7f6e Row \u4e2d\u7684\u5b50\u9879\u7ad6\u76f4\u5e03\u5c40\u4e3a\u4e2d\u5fc3 // start \u5de6\u8fb9 // end \u53f3\u8fb9 // top \u4e0a\u8fb9 // bottom \u4e0b\u8fb9 ) { Box ( Modifier . size ( 50. dp ). background ( Color . Red )) Box ( Modifier . size ( 50. dp ). background ( Color . Blue )) } }","title":"1. \u6807\u51c6\u5e03\u5c40\u7ec4\u4ef6"},{"location":"layout/overview/#2-modifier","text":"Modifier \u5141\u8bb8\u4f60\u88c5\u9970\u6216\u589e\u5f3a\u4e00\u4e2a Composable \uff0c Modifier \u5141\u8bb8\u4f60\u505a\u4ee5\u4e0b\u7684\u4e8b\u60c5\u3002 \u6539\u53d8 Composable \u7684\u5927\u5c0f\u3001\u5e03\u5c40\u3001\u884c\u4e3a\u548c\u5916\u89c2\u3002 \u6dfb\u52a0\u4fe1\u606f\uff0c\u5982\u65e0\u969c\u788d\u6807\u7b7e\u3002 \u5904\u7406\u7528\u6237\u7684\u8f93\u5165\u3002 \u6dfb\u52a0\u9ad8\u5c42\u6b21\u7684\u4ea4\u4e92\uff0c\u6bd4\u5982\u8ba9\u4e00\u4e2a\u5143\u7d20\u53ef\u70b9\u51fb\u3001\u53ef\u6eda\u52a8\u3001\u53ef\u62d6\u52a8\u6216\u53ef\u7f29\u653e\u3002 \u4fee\u6539\u5668\u662f\u6807\u51c6\u7684 Kotlin \u5bf9\u8c61\u3002\u901a\u8fc7\u8c03\u7528 Modifier \u7c7b\u7684\u4e00\u4e2a\u51fd\u6570\u6765\u521b\u5efa\u4e00\u4e2a modifier \u3002\u4f60\u53ef\u4ee5\u628a\u8fd9\u4e9b\u51fd\u6570\u4e32\u8054\u8d77\u6765\uff0c\u7ec4\u6210\u5b83\u4eec\uff1a @Composable fun ArtistCard ( artist : Artist , onClick : () -> Unit ) { val padding = 16. dp Column ( Modifier . clickable ( onClick = onClick ) . padding ( padding ) . fillMaxWidth () ) { Row ( verticalAlignment = Alignment . CenterVertically ) { /*...*/ } Spacer ( Modifier . size ( padding )) Card ( elevation = 4. dp ) { /*...*/ } } } \u5728\u4e0a\u9762\u7684\u4ee3\u7801\u4e2d\uff0c\u4f60\u4f1a\u6ce8\u610f\u5230\u4e0d\u540c\u7684 modifier \u51fd\u6570\u4e00\u8d77\u4f7f\u7528\u3002 clickable \u4f7f\u4e00\u4e2a Composable \u5143\u7d20\u5bf9\u7528\u6237\u7684\u70b9\u51fb\u4f5c\u51fa\u53cd\u5e94\uff0c\u5e76\u663e\u793a\u4e00\u4e2a\u6ce2\u7eb9\u3002 padding \u5728\u4e00\u4e2a\u5143\u7d20\u7684\u5468\u56f4\u586b\u5145\u4e86\u7a7a\u95f4\u3002 fillMaxWidth \u8ba9 Composable \u5143\u7d20\u586b\u6ee1\u5176\u7236\u5143\u7d20\u7684\u6700\u5927\u5bbd\u5ea6\u3002 size() \u6765\u6307\u5b9a\u4e00\u4e2a\u5143\u7d20\u7684\u5bbd\u5ea6\u548c\u9ad8\u5ea6\u3002 \u6ce8\u610f \u5728\u5176\u4ed6\u65b9\u9762\uff0c Modifier \u7684\u4f5c\u7528\u7c7b\u4f3c\u4e8e\u57fa\u4e8e view \u5e03\u5c40\u4e2d\u7684\u5e03\u5c40\u53c2\u6570\u3002\u7136\u800c\uff0c\u7531\u4e8e Modifier \u6709\u65f6\u662f\u7279\u5b9a\u8303\u56f4\u7684\uff0c\u5b83\u4eec\u63d0\u4f9b\u4e86\u7c7b\u578b\u5b89\u5168\uff0c\u4e5f\u5e2e\u52a9\u4f60\u53d1\u73b0\u548c\u7406\u89e3\u4ec0\u4e48\u662f\u53ef\u7528\u7684\uff0c\u9002\u7528\u4e8e\u67d0\u4e2a\u5e03\u5c40\u3002\u5bf9\u4e8e XML \u5e03\u5c40\uff0c\u6709\u65f6\u5f88\u96be\u53d1\u73b0\u67d0\u4e2a\u7279\u5b9a\u7684\u5e03\u5c40\u5c5e\u6027\u662f\u5426\u9002\u7528\u4e8e\u67d0\u4e2a\u89c6\u56fe\u3002 Modifier \u51fd\u6570\u7684\u987a\u5e8f\u662f\u5f88 \u91cd\u8981 \u7684\u3002\u56e0\u4e3a\u6bcf\u4e2a\u51fd\u6570\u90fd\u4f1a\u5bf9\u524d\u4e00\u4e2a\u51fd\u6570\u8fd4\u56de\u7684\u4fee\u6539\u5668\u8fdb\u884c\u4fee\u6539\uff0c\u6240\u4ee5\u987a\u5e8f\u4f1a\u5f71\u54cd\u6700\u7ec8\u7684\u7ed3\u679c\u3002\u8ba9\u6211\u4eec\u6765\u770b\u770b\u8fd9\u4e2a\u4f8b\u5b50\uff1a @Composable fun ArtistCard ( /*...*/ ) { val padding = 16. dp Column ( Modifier . clickable ( onClick = onClick ) . padding ( padding ) . fillMaxWidth () ) { // rest of the implementation } } \u5728\u4e0a\u9762\u7684\u4ee3\u7801\u4e2d\uff0c\u6574\u4e2a\u533a\u57df\u90fd\u662f\u53ef\u70b9\u51fb\u7684\uff0c\u5305\u62ec\u5468\u56f4\u7684\u586b\u5145\u7269\uff0c\u56e0\u4e3a padding modifier \u88ab\u5e94\u7528\u5728 clickable \u4e4b\u540e\u3002\u5982\u679c modifier \u7684\u987a\u5e8f\u98a0\u5012\u4e86\uff0c\u90a3\u4e48\u7531 padding \u589e\u52a0\u7684\u7a7a\u95f4\u5c31\u4e0d\u4f1a\u5bf9\u7528\u6237\u7684\u8f93\u5165\u505a\u51fa\u53cd\u5e94\u3002 @Composable fun ArtistCard ( /*...*/ ) { val padding = 16. dp Column ( Modifier . padding ( padding ) . clickable ( onClick = onClick ) . fillMaxWidth () ) { // rest of the implementation } } \u6ce8\u610f \u660e\u786e\u987a\u5e8f\u6709\u52a9\u4e8e\u4f60\u63a8\u7406\u4e0d\u540c\u7684 Modifier \u5c06\u5982\u4f55\u76f8\u4e92\u4f5c\u7528\u3002\u4e0e\u57fa\u4e8e view \u7684\u7cfb\u7edf\u76f8\u6bd4\uff0c\u4f60\u5fc5\u987b\u5b66\u4e60\u76d2\u5b50\u6a21\u578b\uff0c\u5373\u5728\u5143\u7d20\u7684 \"\u5916\u9762\" \u5e94\u7528 margin \uff0c\u800c\u5728 \"\u91cc\u9762 \"\u5e94\u7528 pading \uff0c\u80cc\u666f\u5143\u7d20\u4f1a\u6709\u76f8\u5e94\u7684\u5927\u5c0f Modifier \u7684\u8bbe\u8ba1\u4f7f\u8fd9\u79cd\u884c\u4e3a\u53d8\u5f97\u660e\u786e\u548c\u53ef\u9884\u6d4b\uff0c\u5e76\u7ed9\u4f60\u66f4\u591a\u7684\u63a7\u5236\u6765\u5b9e\u73b0\u4f60\u60f3\u8981\u7684\u786e\u5207\u884c\u4e3a\u3002\u8fd9\u4e5f\u89e3\u91ca\u4e86\u4e3a\u4ec0\u4e48\u6ca1\u6709 margin \u4fee\u6539\u5668\u800c\u53ea\u6709 padding \u4fee\u6539\u5668","title":"2. Modifier"},{"location":"layout/overview/#modifiers","text":"Jetpack Compose \u63d0\u4f9b\u4e86\u4e00\u4e2a\u5185\u7f6e modifiers \u7684\u5217\u8868\uff0c\u4ee5\u5e2e\u52a9\u4f60\u88c5\u9970\u6216\u589e\u5f3a\u4e00\u4e2a Composable \u3002\u4e0b\u9762\u662f\u4e00\u4e2a\u6db5\u76d6\u6700\u5e38\u89c1\u7684\u4f7f\u7528\u60c5\u51b5\u7684\u5217\u8868\uff1a","title":"\u5185\u7f6e modifiers"},{"location":"layout/overview/#1-padding-size","text":"\u8981\u5728\u4e00\u4e2a Composable \u7684\u5468\u56f4\u8fdb\u884c\u586b\u5145\uff0c\u8bf7\u6dfb\u52a0 padding @Composable fun PaddedComposable () { Text ( text = \"Hello World\" , modifier = Modifier . background ( Color . Green ) . padding ( 20. dp ) ) } \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0cCompose \u4e2d\u63d0\u4f9b\u7684\u5e03\u5c40\u662f\u5305\u88f9\u5176\u5b50\u9879\u7684\u3002 \u7136\u9e45\uff0c\u4f60\u53ef\u4ee5\u901a\u8fc7\u4f7f\u7528 size \u6765\u8bbe\u7f6e\u4e00\u4e2a\u5c3a\u5bf8 @Composable fun SizedComposable () { Box ( Modifier . size ( 100. dp , 100. dp ). background ( Color . Red )) } \u6ce8\u610f \u5982\u679c\u60a8\u6307\u5b9a\u7684\u5c3a\u5bf8\u4e0d\u6ee1\u8db3\u6765\u81ea\u5e03\u5c40\u7236\u7ea7\u7684\u7ea6\u675f\uff0c\u5219\u53ef\u80fd\u65e0\u6cd5\u4f7f\u7528\u8be5\u5c3a\u5bf8\u3002\u5982\u679c\u4f60\u8981\u6c42\u7684 Composable \u7684\u5c3a\u5bf8\u662f\u56fa\u5b9a\u7684\uff0c\u4e0d\u7ba1\u4f20\u5165\u7684\u7ea6\u675f\u6761\u4ef6\u5982\u4f55\uff0c\u8bf7\u4f7f\u7528 requiredSize @Composable fun FixedSizeComposable () { Box ( Modifier . size ( 90. dp , 150. dp ) . background ( Color . Green ) ) { Box ( Modifier . requiredSize ( 100. dp , 100. dp ) . background ( Color . Red ) ) } } \u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u5373\u4f7f\u7236\u672c\u7684\u5bbd\u5ea6\u88ab\u8bbe\u7f6e\u4e3a 90.dp \uff0c\u5185\u76d2\u7684\u5bbd\u5ea6\u4e5f\u5c06\u662f 100.dp \u56e0\u4e3a\u5185\u76d2\u7684 requiredSize \u4f18\u5148 @Composable fun FillSizeComposable () { Box ( Modifier . background ( Color . Green ) . size ( 50. dp ) . padding ( 10. dp ) ) { Box ( Modifier . background ( Color . Blue ) . fillMaxSize () ) } } \u5982\u679c\u4f60\u60f3\u8ba9\u4e00\u4e2a\u5b50\u5e03\u5c40\u7684\u5c3a\u5bf8\u4e0e\u7236 Box \u7684\u5c3a\u5bf8\u76f8\u540c\u800c\u4e0d\u5f71\u54cd Box \u7684\u5c3a\u5bf8\uff0c\u8bf7\u4f7f\u7528 matchParentSize \u8bf7\u6ce8\u610f\uff0c matchParentSize \u53ea\u5728 Box \u8303\u56f4\u5185\u53ef\u7528\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u5b83\u53ea\u9002\u7528\u4e8e Box composables \u7684\u76f4\u63a5\u5b50\u4ee3 \u5728\u4e0b\u9762\u7684\u4f8b\u5b50\u4e2d\uff0c\u5185\u90e8\u7684 Spacer \u4ece\u5b83\u7684\u7236 Box \u4e2d\u83b7\u53d6\u5176\u5927\u5c0f\uff0c\u800c\u7236 Box \u53c8\u4ece\u5b83\u5305\u542b\u7684 Text \u4e2d\u83b7\u53d6\u5176\u5927\u5c0f @Composable fun MatchParentSizeComposable () { Box { Spacer ( Modifier . matchParentSize (). background ( Color . Green )) Text ( \"Hello World\" ) } } \u5982\u679c\u4f7f\u7528 fillMaxSize \u800c\u4e0d\u662f matchParentSize \uff0c\u90a3\u4e48 Spacer \u5c06\u5360\u7528\u5141\u8bb8\u7ed9\u7236\u4ee3\u7684\u6240\u6709\u53ef\u7528\u7a7a\u95f4\uff0c\u53cd\u8fc7\u6765\u5bfc\u81f4\u7236\u4ee3\u6269\u5c55\u5e76\u586b\u5145\u6240\u6709\u53ef\u7528\u7a7a\u95f4 \u5982\u679c\u4f60\u60f3\u5728\u6587\u672c\u57fa\u7ebf\u4e0a\u65b9\u6dfb\u52a0 padding \u4f7f\u4f60\u8fbe\u5230\u4ece\u5e03\u5c40\u9876\u90e8\u5230\u57fa\u7ebf\u7684\u7279\u5b9a\u8ddd\u79bb \u90a3\u4e48\u8bf7\u4f7f\u7528 paddingFromBaseline @Composable fun TextWithPaddingFromBaseline () { Box ( Modifier . background ( Color . Yellow )) { Text ( \"Hi there!\" , Modifier . paddingFromBaseline ( top = 32. dp )) } }","title":"1. Padding \u548c size"},{"location":"layout/overview/#2-offset","text":"\u8981\u5c06\u4e00\u4e2a\u5e03\u5c40\u76f8\u5bf9\u4e8e\u5b83\u7684\u539f\u59cb\u4f4d\u7f6e\u8fdb\u884c\u5b9a\u4f4d\uff0c\u53ef\u4ee5\u6dfb\u52a0 offet \uff0c\u5e76\u5728 x \u548c y \u8f74\u4e0a\u8bbe\u7f6e\u504f\u79fb\u91cf \u504f\u79fb\u91cf\u53ef\u4ee5\u662f\u6b63\u7684\uff0c\u4e5f\u53ef\u4ee5\u662f\u8d1f\u7684\u3002 padding \u548c offset \u7684\u533a\u522b\u5728\u4e8e\uff0c\u7ed9\u4e00\u4e2a Composable \u6dfb\u52a0 offset \u5e76\u4e0d\u4f1a\u6539\u53d8\u5b83\u7684\u6d4b\u91cf @Composable fun OffsetComposable () { Box ( Modifier . background ( Color . Yellow ). size ( width = 150. dp , height = 70. dp )) { Text ( \"Layout offset modifier sample\" , Modifier . offset ( x = 15. dp , y = 20. dp ) ) } } padding modifier \u6839\u636e\u5e03\u5c40\u65b9\u5411\u5728\u6c34\u5e73\u65b9\u5411\u4e0a\u5e94\u7528\u3002\u5728\u4ece\u5de6\u5230\u53f3\u7684\u60c5\u51b5\u4e0b\uff0c\u6b63\u7684\u504f\u79fb\u503c\u4f1a\u5c06\u5143\u7d20\u5411\u53f3\u79fb\u52a8\uff0c\u800c\u5728\u4ece\u53f3\u5230\u5de6\u7684\u60c5\u51b5\u4e0b\uff0c\u5b83\u4f1a\u5c06\u5143\u7d20\u5411\u5de6\u79fb\u52a8\u3002\u5982\u679c\u4f60\u9700\u8981\u5728\u4e0d\u8003\u8651\u5e03\u5c40\u65b9\u5411\u7684\u60c5\u51b5\u4e0b\u8bbe\u7f6e\u4e00\u4e2a\u504f\u79fb\u91cf\uff0c\u8bf7\u53c2\u89c1 absoluteOffset \u4fee\u6539\u5668\uff0c\u5176\u4e2d\u4e00\u4e2a\u6b63\u7684\u504f\u79fb\u503c\u603b\u662f\u5c06\u5143\u7d20\u5411\u53f3\u79fb\u52a8","title":"2. offset"},{"location":"layout/overview/#3","text":"\u8bbe\u8ba1\u5e03\u5c40\u65f6\u5e94\u8003\u8651\u5230\u4e0d\u540c\u7684\u5c4f\u5e55\u65b9\u5411\u548c\u5916\u5f62\u5c3a\u5bf8\u3002 Compose \u63d0\u4f9b\u4e86\u4e00\u4e9b\u673a\u5236\u6765\u4fc3\u8fdb\u4f60\u7684 Composable \u5e03\u5c40\u9002\u5e94\u5404\u79cd\u5c4f\u5e55\u914d\u7f6e","title":"3. \u54cd\u5e94\u6027\u5e03\u5c40"},{"location":"layout/overview/#row-column-weight-modifier","text":"\u6b63\u5982\u4f60\u5728\u524d\u9762\u5173\u4e8e\u586b\u5145\u548c\u5c3a\u5bf8\u7684\u7ae0\u8282\u4e2d\u6240\u770b\u5230\u7684\uff0c\u4e00\u4e2a Composable \u5c3a\u5bf8\u9ed8\u8ba4\u662f\u7531\u5b83\u6240\u5305\u88f9\u7684\u5185\u5bb9\u6765\u5b9a\u4e49\u7684\u3002\u4f60\u53ef\u4ee5\u5c06\u4e00\u4e2a Composable \u5c3a\u5bf8\u8bbe\u7f6e\u4e3a\u5728\u5176\u7236\u7ea7\u5185\u5bb9\u4e2d\u5177\u6709\u7075\u6d3b\u6027\u3002\u8ba9\u6211\u4eec\u6765\u770b\u770b\u4e00\u4e2a\u5305\u542b\u4e24\u4e2a\u76d2\u5b50\u7684\u884c\u7684\u53ef\u7ec4\u5408\u5c3a\u5bf8\u3002 \u7b2c\u4e00\u4e2a\u76d2\u5b50\u7684\u6743\u91cd\u662f\u7b2c\u4e8c\u4e2a\u76d2\u5b50\u7684\u4e24\u500d\uff0c\u6240\u4ee5\u5b83\u7684\u5bbd\u5ea6\u4e5f\u662f\u4e24\u500d\u3002\u56e0\u4e3a\u884c\u7684\u5bbd\u5ea6\u662f 210.dp \uff0c\u6240\u4ee5\u7b2c\u4e00\u4e2a\u76d2\u5b50\u7684\u5bbd\u5ea6\u662f 140.dp \uff0c\u800c\u7b2c\u4e8c\u4e2a\u662f 70.dp @Composable fun FlexibleComposable () { Row ( Modifier . width ( 210. dp )) { Box ( Modifier . weight ( 2f ). height ( 50. dp ). background ( Color . Blue )) Box ( Modifier . weight ( 1f ). height ( 50. dp ). background ( Color . Red )) } }","title":"Row \u548c Column \u4e2d\u7684 weight modifier"},{"location":"layout/overview/#4","text":"\u4e3a\u4e86\u77e5\u9053\u6765\u81ea\u7236\u4f53\u7684\u7ea6\u675f\u5e76\u76f8\u5e94\u5730\u8bbe\u8ba1\u5e03\u5c40\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528 BoxWithConstraints \u3002\u6d4b\u91cf\u7ea6\u675f\u53ef\u4ee5\u5728 content lambda \u7684\u8303\u56f4\u5185\u627e\u5230\u3002\u4f60\u53ef\u4ee5\u4f7f\u7528\u8fd9\u4e9b\u6d4b\u91cf\u7ea6\u675f\u6765\u4e3a\u4e0d\u540c\u7684\u5c4f\u5e55\u914d\u7f6e\u7ec4\u6210\u4e0d\u540c\u7684\u5e03\u5c40 @Composable fun WithConstraintsComposable () { BoxWithConstraints { Text ( \"My minHeight is $ minHeight while my maxWidth is $ maxWidth \" ) } }","title":"4. \u7ea6\u675f\u6761\u4ef6"},{"location":"layout/overview/#_1","text":"Compose \u901a\u8fc7 androidx.compose.material:material \u4f9d\u8d56\u5173\u7cfb\uff08\u5728 Android Studio \u4e2d\u521b\u5efa Compose \u5de5\u7a0b\u65f6\u4f1a\u5305\u542b\u5728\u5185\uff09\u63d0\u4f9b\u4e86\u5927\u91cf\u57fa\u4e8e Material Design \u7684\u53ef\u7ec4\u5408\u5143\u7d20\uff0c\u4f7f UI \u6784\u5efa\u53d8\u5f97\u7b80\u5355\u3002\u50cf Drawer \u3001 FloatingActionButton \u548c TopAppBar \u8fd9\u6837\u7684\u5143\u7d20\u90fd\u88ab\u63d0\u4f9b\u3002 Material \u7ec4\u4ef6\u5927\u91cf\u4f7f\u7528\u63d2\u69fd API\uff0c\u8fd9\u662f Compose \u5f15\u5165\u7684\u4e00\u79cd\u6a21\u5f0f\uff0c\u5728\u53ef\u7ec4\u5408\u7684\u57fa\u7840\u4e0a\u5f15\u5165\u4e86\u4e00\u5c42\u5b9a\u5236\u3002\u8fd9\u79cd\u65b9\u6cd5\u4f7f\u7ec4\u4ef6\u66f4\u52a0\u7075\u6d3b\uff0c\u56e0\u4e3a\u5b83\u4eec\u63a5\u53d7\u4e00\u4e2a\u53ef\u4ee5\u81ea\u6211\u914d\u7f6e\u7684\u5b50\u5143\u7d20\uff0c\u800c\u4e0d\u662f\u5fc5\u987b\u66b4\u9732\u5b50\u5143\u7d20\u7684\u6bcf\u4e00\u4e2a\u914d\u7f6e\u53c2\u6570\u3002\u69fd\u5728\u7528\u6237\u754c\u9762\u4e2d\u7559\u4e0b\u4e86\u4e00\u4e2a\u7a7a\u4f4d\uff0c\u4f9b\u5f00\u53d1\u8005\u6309\u7167\u81ea\u5df1\u7684\u610f\u613f\u6765\u586b\u5145\u3002\u4f8b\u5982\uff0c\u8fd9\u4e9b\u662f\u4f60\u53ef\u4ee5\u5728 TopAppBar \u4e2d\u81ea\u5b9a\u4e49\u7684\u4f4d\u7f6e Composable \u901a\u5e38\u91c7\u53d6\u4e00\u4e2a content \u7684 Composable \uff0c lambda(content: @Composable () -> Unit) \u3002\u63d2\u69fd API \u4e3a\u7279\u5b9a\u7528\u9014\u516c\u5f00\u4e86\u591a\u4e2a\u5185\u5bb9\u53c2\u6570\u3002\u4f8b\u5982\uff0c TopAppBar \u5141\u8bb8\u4f60\u4e3a\u6807\u9898\u3001\u5bfc\u822a\u56fe\u6807\u548c\u884c\u4e3a\u63d0\u4f9b\u5185\u5bb9\u3002 \u4f8b\u5982\uff0c Scaffold \u5141\u8bb8\u4f60\u7528\u57fa\u672c\u7684 Material Design \u5e03\u5c40\u7ed3\u6784\u6765\u5b9e\u73b0\u4e00\u4e2a UI\u3002 Scaffold \u4e3a\u6700\u5e38\u89c1\u7684\u9876\u5c42 Material \u7ec4\u4ef6\u63d0\u4f9b\u4e86\u63d2\u69fd\uff0c\u5982 TopAppBar \u3001 BottomAppBar \u3001 FloatingActionButton \u548c Drawer \u3002\u901a\u8fc7\u4f7f\u7528 Scaffold \uff0c\u6211\u4eec\u53ef\u4ee5\u5f88\u5bb9\u6613\u5730\u786e\u4fdd\u8fd9\u4e9b\u7ec4\u4ef6\u88ab\u6b63\u786e\u5730\u5b9a\u4f4d\u5e76\u6b63\u786e\u5730\u534f\u540c\u5de5\u4f5c\u3002 Tips \u8981\u66f4\u597d\u7684\u4e86\u89e3 Scaffold \u53ef\u4ee5\u53c2\u8003 \u8fd9\u91cc @Composable fun HomeScreen ( /*...*/ ) { Scaffold ( drawerContent = { /*...*/ }, topBar = { /*...*/ }, bodyContent = { /*...*/ } ) }","title":"\u57fa\u4e8e\u63d2\u69fd\u7684\u5e03\u5c40"},{"location":"layout/overview/#5-constraintlayout","text":"ConstraintLayout \u53ef\u4ee5\u5e2e\u52a9\u5728\u5c4f\u5e55\u4e0a\u653e\u7f6e\u76f8\u5bf9\u4e8e\u5176\u4ed6\u7684\u5408\u6210\u7269\uff0c\u5e76\u4e14\u662f\u4f7f\u7528\u591a\u4e2a\u5d4c\u5957\u7684 Row , Column , Box \u81ea\u5b9a\u4e49\u5e03\u5c40\u5143\u7d20\u7684\u66ff\u4ee3\u65b9\u6848\u3002 ConstraintLayout \u5728\u5b9e\u73b0\u5177\u6709\u66f4\u590d\u6742\u5bf9\u9f50\u8981\u6c42\u7684\u5927\u578b\u5e03\u5c40\u65f6\u5f88\u6709\u7528\uff0c\u4f46\u5728\u521b\u5efa\u7b80\u5355\u7684\u5e03\u5c40\u65f6\uff0c\u6700\u597d\u4f7f\u7528 Columns \u548c Rows \u6765\u4ee3\u66ff\u3002 \u8981\u5728 Compose \u4e2d\u4f7f\u7528 ConstraintLayout \uff0c\u4f60\u9700\u8981\u5728 build.gradle \u4e2d\u6dfb\u52a0\u8fd9\u4e2a\u4f9d\u8d56\u9879 implementation \"androidx.constraintlayout:constraintlayout-compose:1.0.0-alpha05\" \u6ce8\u610f \u6ce8\u610f\uff1a\u5728 View \u7cfb\u7edf\u4e2d\uff0c ConstraintLayout \u662f\u521b\u5efa\u5927\u578b\u590d\u6742\u5e03\u5c40\u7684\u63a8\u8350\u65b9\u5f0f\uff0c\u56e0\u4e3a\u6241\u5e73\u7684\u89c6\u56fe\u5c42\u6b21\u7ed3\u6784\u6bd4\u5d4c\u5957\u7684\u89c6\u56fe\u66f4\u6709\u5229\u4e8e\u6027\u80fd\u3002\u7136\u800c\uff0c\u8fd9\u5728 Compose \u4e2d\u5e76\u4e0d\u662f\u4e00\u4e2a\u95ee\u9898\uff0c\u5b83\u80fd\u591f\u6709\u6548\u5730\u5904\u7406\u6df1\u5c42\u6b21\u7684\u5e03\u5c40\u5c42\u6b21\u7ed3\u6784 Compose \u4e2d\u7684 ConstraintLayout \u4ee5 DSL \u65b9\u5f0f\u5de5\u4f5c\u3002 \u5f15\u7528\u662f\u7528 createRefs() \u6216 createRefFor() \u521b\u5efa\u7684\uff0c ConstraintLayout \u4e2d\u7684\u6bcf\u4e00\u4e2a Composable \u90fd\u9700\u8981\u6709\u4e00\u4e2a\u4e0e\u4e4b\u76f8\u5173\u7684\u5f15\u7528\u3002 \u7ea6\u675f\u6761\u4ef6\u4f7f\u7528 constrainAs() modifier \u63d0\u4f9b\uff0c\u5b83\u5c06\u5f15\u7528\u4f5c\u4e3a\u4e00\u4e2a\u53c2\u6570\uff0c\u8ba9\u4f60\u5728\u4e3b\u4f53 lambda \u4e2d\u6307\u5b9a\u5176\u7ea6\u675f\u3002 \u7ea6\u675f\u6761\u4ef6\u4f7f\u7528 linkTo() \u6216\u5176\u4ed6\u6709\u7528\u7684\u65b9\u6cd5\u6765\u6307\u5b9a\u3002 paren t\u662f\u4e00\u4e2a\u73b0\u6709\u7684\u5f15\u7528\uff0c\u53ef\u4ee5\u7528\u6765\u6307\u5b9a\u5bf9 ConstraintLayout composable \u672c\u8eab\u7684\u7ea6\u675f \u4e0b\u9762\u662f\u4e00\u4e2a\u4f7f\u7528 ConstraintLayout \u7684 Composable \u4f8b\u5b50\uff1a @Composable fun ConstraintLayoutContent () { ConstraintLayout { // \u7ed9\u9700\u8981\u7ea6\u675f\u7684 Composable \u5143\u7d20\u521b\u5efa\u5f15\u7528 val ( button , text ) = createRefs () Button ( onClick = { /* Do something */ }, // \u5c06 button \u7684\u5f15\u7528\u7ed9 Button \u63a7\u4ef6 // \u5e76\u4e14\u8bbe\u7f6e\u7ea6\u675f modifier = Modifier . constrainAs ( button ) { top . linkTo ( parent . top , margin = 16. dp ) } ) { Text ( \"Button\" ) } // \u5c06 Text \u7684\u5f15\u7528\u7ed9 Text \u63a7\u4ef6 // \u5e76\u4e14\u8bbe\u7f6e\u7ea6\u675f Text ( \"Text\" , Modifier . constrainAs ( text ) { top . linkTo ( button . bottom , margin = 16. dp ) }) } } \u8fd9\u6bb5\u4ee3\u7801\u5c06 Button \u7684\u9876\u90e8\u7ea6\u675f\u5230\u7236\u7ea7\uff0c\u8fb9\u8ddd\u4e3a 16.dp \uff0c\u5c06 Text \u7ea6\u675f\u5230 Button \u7684\u5e95\u90e8\uff0c\u8fb9\u8ddd\u4e5f\u4e3a 16.dp \u5173\u4e8e\u5982\u4f55\u4f7f\u7528 ConstraintLayout \u7684\u66f4\u591a\u4f8b\u5b50\uff0c\u8bf7\u53c2\u9605 layout codelab","title":"5. ConstraintLayout"},{"location":"layout/overview/#api","text":"\u5728 ConstraintLayout \u7684\u4f8b\u5b50\u4e2d\uff0c\u7ea6\u675f\u6761\u4ef6\u662f\u5185\u8054\u6307\u5b9a\u7684\uff0c\u5728\u5b83\u4eec\u6240\u5e94\u7528\u7684 composable \u4e2d\u5e26\u6709\u4e00\u4e2a modifier\u3002\u7136\u800c\uff0c\u5728\u6709\u4e9b\u60c5\u51b5\u4e0b\uff0c\u6700\u597d\u5c06\u7ea6\u675f\u4e0e\u5b83\u4eec\u6240\u5e94\u7528\u7684\u5e03\u5c40\u89e3\u8026\u3002\u4f8b\u5982\uff0c\u4f60\u53ef\u80fd\u60f3\u6839\u636e\u5c4f\u5e55\u914d\u7f6e\u6765\u6539\u53d8\u7ea6\u675f\uff0c\u6216\u8005\u5728\u4e24\u4e2a\u7ea6\u675f\u96c6\u4e4b\u95f4\u5236\u4f5c\u52a8\u753b\u3002 \u5bf9\u4e8e\u8fd9\u6837\u7684\u60c5\u51b5\uff0c\u4f60\u53ef\u4ee5\u7528\u4e0d\u540c\u7684\u65b9\u5f0f\u6765\u4f7f\u7528 ConstraintLayout \uff1a \u4f20\u5165\u4e00\u4e2a ConstraintSet \u4f5c\u4e3a ConstraintLayout \u7684\u53c2\u6570\u3002 \u4f7f\u7528 layoutId \u4fee\u6539\u5668\u5c06 ConstraintSet \u4e2d\u521b\u5efa\u7684\u5f15\u7528\u5206\u914d\u7ed9 Composable @Composable fun DecoupledConstraintLayout () { BoxWithConstraints { val constraints = if ( minWidth < 600. dp ) { decoupledConstraints ( margin = 16. dp ) // \u7ad6\u5c4f\u7ea6\u675f } else { decoupledConstraints ( margin = 32. dp ) // \u6a2a\u5c4f\u7ea6\u675f } ConstraintLayout ( constraints ) { Button ( onClick = { /* Do something */ }, modifier = Modifier . layoutId ( \"button\" ) ) { Text ( \"Button\" ) } Text ( \"Text\" , Modifier . layoutId ( \"text\" )) } } } private fun decoupledConstraints ( margin : Dp ): ConstraintSet { return ConstraintSet { val button = createRefFor ( \"button\" ) val text = createRefFor ( \"text\" ) constrain ( button ) { top . linkTo ( parent . top , margin = margin ) } constrain ( text ) { top . linkTo ( button . bottom , margin ) } } } \u7136\u540e\uff0c\u5f53\u4f60\u9700\u8981\u6539\u53d8\u7ea6\u675f\u65f6\uff0c\u4f60\u53ef\u4ee5\u53ea\u4f20\u9012\u4e00\u4e2a\u4e0d\u540c\u7684 ConstraintSet","title":"\u89e3\u8026\u7684 API"},{"location":"layout/overview/#6","text":"\u5728 Compose \u4e2d\uff0cUI \u5143\u7d20\u7531 composable \u51fd\u6570\u8868\u793a\uff0c\u8fd9\u4e9b\u51fd\u6570\u5728\u88ab\u8c03\u7528\u65f6\u53d1\u51fa\u4e00\u6bb5 UI\uff0c\u7136\u540e\u88ab\u6dfb\u52a0\u5230\u4e00\u4e2a UI \u6811\u4e2d\uff0c\u5728\u5c4f\u5e55\u4e0a\u5448\u73b0\u3002\u6bcf\u4e2a UI \u5143\u7d20\u90fd\u6709\u4e00\u4e2a\u7236\u5143\u7d20\u548c\u53ef\u80fd\u7684\u8bb8\u591a\u5b50\u5143\u7d20\u3002\u6bcf\u4e2a\u5143\u7d20\u90fd\u4f4d\u4e8e\u5b83\u7684\u7236\u5143\u7d20\u4e2d\uff0c\u88ab\u6307\u5b9a\u4e3a\u4e00\u4e2a\uff08x\uff0cy\uff09\u4f4d\u7f6e\uff0c\u4ee5\u53ca\u4e00\u4e2a\u5c3a\u5bf8\uff0c\u88ab\u6307\u5b9a\u4e3a\u4e00\u4e2a\u5bbd\u5ea6\u548c\u4e00\u4e2a\u9ad8\u5ea6\u3002 \u7236\u5143\u7d20\u4e3a\u4ed6\u4eec\u7684\u5b50\u5143\u7d20\u5b9a\u4e49\u7ea6\u675f\u6761\u4ef6\u3002\u4e00\u4e2a\u5143\u7d20\u88ab\u8981\u6c42\u5728\u8fd9\u4e9b\u7ea6\u675f\u4e2d\u5b9a\u4e49\u5b83\u7684\u5c3a\u5bf8\u3002\u7ea6\u675f\u6761\u4ef6\u9650\u5236\u4e86\u4e00\u4e2a\u5143\u7d20\u7684\u6700\u5c0f\u548c\u6700\u5927\u5bbd\u5ea6\u548c\u9ad8\u5ea6\u3002\u5982\u679c\u4e00\u4e2a\u5143\u7d20\u6709\u5b50\u5143\u7d20\uff0c\u5b83\u53ef\u4ee5\u6d4b\u91cf\u6bcf\u4e2a\u5b50\u5143\u7d20\u4ee5\u5e2e\u52a9\u786e\u5b9a\u5176\u5c3a\u5bf8\u3002\u4e00\u65e6\u4e00\u4e2a\u5143\u7d20\u786e\u5b9a\u5e76\u544a\u77e5\u4e86\u5b83\u81ea\u5df1\u7684\u5c3a\u5bf8\uff0c\u5b83\u6709\u673a\u4f1a\u5b9a\u4e49\u5982\u4f55\u76f8\u5bf9\u4e8e\u81ea\u8eab\u653e\u7f6e\u5b50\u5143\u7d20\uff0c\u5c31\u50cf\u5728\u521b\u5efa\u81ea\u5b9a\u4e49\u5e03\u5c40\u4e2d\u8be6\u7ec6\u63cf\u8ff0\u7684\u3002 \u6ce8\u610f\uff1aCompose UI \u4e0d\u5141\u8bb8\u591a\u901a\u9053\u6d4b\u91cf\u3002\u8fd9\u610f\u5473\u7740\u4e00\u4e2a\u5e03\u5c40\u5143\u7d20\u4e0d\u80fd\u591a\u6b21\u6d4b\u91cf\u5b83\u7684\u4efb\u4f55\u5b50\u5143\u7d20\uff0c\u4ee5\u5c1d\u8bd5\u4e0d\u540c\u7684\u6d4b\u91cf\u914d\u7f6e\u3002 \u5355\u904d\u6d4b\u91cf\u6709\u52a9\u4e8e\u63d0\u9ad8\u6027\u80fd\uff0c\u4f7f Compose \u53ef\u4ee5\u6709\u6548\u5904\u7406\u6df1\u5c42 UI \u6811\u3002\u5982\u679c\u4e00\u4e2a\u5143\u7d20\u6d4b\u91cf\u4e86\u5b83\u7684\u5b50\u5143\u7d20\u4e24\u6b21\uff0c\u800c\u8fd9\u4e2a\u5b50\u5143\u7d20\u53c8\u6d4b\u91cf\u4e86\u5b83\u7684\u4e00\u4e2a\u5b50\u5143\u7d20\u4e24\u6b21\uff0c\u4ee5\u6b64\u7c7b\u63a8\uff0c\u90a3\u4e48\u4e00\u6b21\u5c1d\u8bd5\u5e03\u5c40\u6574\u4e2a UI \u5c31\u5fc5\u987b\u505a\u5f88\u591a\u5de5\u4f5c\uff0c\u8fd9\u5c31\u5f88\u96be\u8ba9\u4f60\u7684\u5e94\u7528\u7a0b\u5e8f\u4fdd\u6301\u826f\u597d\u7684\u6027\u80fd\u3002\u7136\u800c\uff0c\u6709\u4e9b\u65f6\u5019\uff0c\u4f60\u771f\u7684\u9700\u8981\u5728\u5355\u4e2a\u5b50\u9879\u6d4b\u91cf\u6240\u80fd\u544a\u8bc9\u4f60\u7684\u4fe1\u606f\u4e4b\u4e0a\u7684\u989d\u5916\u4fe1\u606f\u3002\u6709\u4e00\u4e9b\u65b9\u6cd5\u53ef\u4ee5\u6709\u6548\u5730\u5e94\u5bf9\u8fd9\u6837\u7684\u60c5\u51b5\uff0c\u8fd9\u4e9b\u65b9\u6cd5\u5c06\u5728\u5185\u5728\u7684\u6d4b\u91cf\u90e8\u5206\u8ba8\u8bba","title":"6. \u81ea\u5b9a\u4e49\u5e03\u5c40"},{"location":"layout/overview/#layout-modifier","text":"\u4f60\u53ef\u4ee5\u4f7f\u7528 layout modifier \u6765\u4fee\u6539\u4e00\u4e2a\u5143\u7d20\u7684\u6d4b\u91cf\u548c\u5e03\u5c40\u65b9\u5f0f\u3002 Layout \u662f\u4e00\u4e2a lambda \uff1b\u5b83\u7684\u53c2\u6570\u5305\u62ec\u4f60\u53ef\u4ee5\u6d4b\u91cf\u7684\u5143\u7d20\uff0c\u4ee5\u53ef\u6d4b\u91cf\u7684\u65b9\u5f0f\u4f20\u9012\uff0c\u800c\u8fd9\u4e2a Composable \u7684\u4f20\u5165\u7ea6\u675f\u5219\u4ee5\u7ea6\u675f\u7684\u65b9\u5f0f\u4f20\u9012\u3002\u4e00\u4e2a\u81ea\u5b9a\u4e49\u7684 layout modifier \u53ef\u4ee5\u662f\u8fd9\u6837\u7684 fun Modifier . customLayoutModifier (...) = this . layout { measurable , constraints -> ... }) \u8ba9\u6211\u4eec\u5728\u5c4f\u5e55\u4e0a\u663e\u793a\u4e00\u4e2a\u6587\u672c\uff0c\u5e76\u63a7\u5236\u7b2c\u4e00\u884c\u6587\u672c\u4ece\u9876\u90e8\u5230\u57fa\u7ebf\u7684\u8ddd\u79bb\u3002\u8fd9\u6b63\u662f paddingFromBaseline \u7684\u4f5c\u7528\uff0c\u6211\u4eec\u5728\u8fd9\u91cc\u4f5c\u4e3a\u4e00\u4e2a\u4f8b\u5b50\u6765\u5b9e\u73b0\u5b83\u3002\u8981\u505a\u5230\u8fd9\u4e00\u70b9\uff0c\u8bf7\u4f7f\u7528 layout modifier \u6765\u624b\u52a8\u5c06 Composable \u7684\u4e1c\u897f\u653e\u5728\u5c4f\u5e55\u4e0a\u3002 \u4e0b\u9762\u662f\u671f\u671b\u7684\u884c\u4e3a\uff0c\u6587\u672c\u9876\u90e8\u7684 padding \u88ab\u8bbe\u7f6e\u4e3a 24.dp \u4e0b\u9762\u662f\u4ea7\u751f\u8fd9\u79cd\u95f4\u8ddd\u7684\u4ee3\u7801\uff1a fun Modifier . firstBaselineToTop ( firstBaselineToTop : Dp ) = layout { measurable , constraints -> // Measure the composable val placeable = measurable . measure ( constraints ) // Check the composable has a first baseline check ( placeable [ FirstBaseline ] != AlignmentLine . Unspecified ) val firstBaseline = placeable [ FirstBaseline ] // Height of the composable with padding - first baseline val placeableY = firstBaselineToTop . roundToPx () - firstBaseline val height = placeable . height + placeableY layout ( placeable . width , height ) { // Where the composable gets placed placeable . placeRelative ( 0 , placeableY ) } } \u4ee5\u4e0b\u662f\u90a3\u6bb5\u4ee3\u7801\u4e2d\u7684\u5185\u5bb9\uff1a \u5728 measurablelambda \u53c2\u6570\u4e2d\uff0c\u4f60\u901a\u8fc7\u8c03\u7528 measurable.measure(constraints) \u6765\u6d4b\u91cf\u7531 measurabl \u53c2\u6570\u4ee3\u8868\u7684 Text \u3002 \u4f60\u901a\u8fc7\u8c03\u7528 layout(width, height) \u65b9\u6cd5\u6765\u6307\u5b9a Composable \u7684\u5c3a\u5bf8\uff0c\u8be5\u65b9\u6cd5\u4e5f\u7ed9\u51fa\u4e86\u4e00\u4e2a\u7528\u4e8e\u653e\u7f6e\u5305\u88c5\u5143\u7d20\u7684 lambda \u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u5b83\u662f\u6700\u540e\u4e00\u4e2a baseline \u548c\u589e\u52a0\u7684 top padding \u4e4b\u95f4\u7684\u9ad8\u5ea6\u3002 \u4f60\u53ef\u4ee5\u901a\u8fc7\u8c03\u7528 placeable.place(x, y) \u5c06\u88ab\u5305\u88c5\u597d\u7684\u5143\u7d20\u653e\u7f6e\u5728\u5c4f\u5e55\u4e0a\u3002\u5982\u679c\u88ab\u5305\u88c5\u7684\u5143\u7d20\u6ca1\u6709\u88ab\u653e\u7f6e\uff0c\u5b83\u4eec\u5c06\u4e0d\u53ef\u89c1\u3002 y position \u5bf9\u5e94\u7684\u662f top padding -- \u6587\u672c\u7684\u7b2c\u4e00\u6761 baseline \u7684\u4f4d\u7f6e\u3002 \u4e3a\u4e86\u9a8c\u8bc1\u8fd9\u662f\u5426\u5982\u9884\u671f\u7684\u90a3\u6837\u5de5\u4f5c\uff0c\u8bf7\u5728 Text \u4e0a\u4f7f\u7528\u8fd9\u4e2a modifier \u3002 @Preview @Composable fun TextWithPaddingToBaselinePreview () { MyApplicationTheme { Text ( \"Hi there!\" , Modifier . firstBaselineToTop ( 32. dp )) } } @Preview @Composable fun TextWithNormalPaddingPreview () { MyApplicationTheme { Text ( \"Hi there!\" , Modifier . padding ( top = 32. dp )) } }","title":"\u4f7f\u7528 layout modifier"},{"location":"layout/overview/#_2","text":"layout \u4fee\u9970\u7b26\u4ec5\u66f4\u6539\u8c03\u7528\u53ef\u7ec4\u5408\u9879\u3002\u5982\u9700\u6d4b\u91cf\u548c\u5e03\u7f6e\u591a\u4e2a\u53ef\u7ec4\u5408\u9879\uff0c\u8bf7\u6539\u7528 Layout \u53ef\u7ec4\u5408\u9879\u3002\u6b64\u53ef\u7ec4\u5408\u9879\u5141\u8bb8\u60a8\u624b\u52a8\u6d4b\u91cf\u548c\u5e03\u7f6e\u5b50\u9879\u3002 Column \u548c Row \u7b49\u6240\u6709\u8f83\u9ad8\u7ea7\u522b\u7684\u5e03\u5c40\u90fd\u4f7f\u7528 Layout \u53ef\u7ec4\u5408\u9879\u6784\u5efa\u800c\u6210\u3002 \u6ce8\u610f \u5728 View \u7cfb\u7edf\u4e2d\uff0c\u521b\u5efa\u81ea\u5b9a\u4e49\u5e03\u5c40\u5fc5\u987b\u6269\u5c55 ViewGroup \u5e76\u5b9e\u73b0\u6d4b\u91cf\u548c\u5e03\u5c40\u51fd\u6570\u3002\u5728 Compose \u4e2d\uff0c\u60a8\u53ea\u9700\u4f7f\u7528 Layout \u53ef\u7ec4\u5408\u9879\u7f16\u5199\u4e00\u4e2a\u51fd\u6570\u5373\u53ef \u6211\u4eec\u6765\u6784\u5efa\u4e00\u4e2a\u975e\u5e38\u57fa\u672c\u7684 Column\u3002\u5927\u591a\u6570\u81ea\u5b9a\u4e49\u5e03\u5c40\u90fd\u9075\u5faa\u4ee5\u4e0b\u6a21\u5f0f\uff1a @Composable fun MyBasicColumn ( modifier : Modifier = Modifier , content : @Composable () () -> Unit ) { Layout ( modifier = modifier , children = content ) { measurables , constraints -> // measure and position children given constraints logic here } } \u4e0e layout \u4fee\u9970\u7b26\u7c7b\u4f3c\uff0c measurables \u662f\u9700\u8981\u6d4b\u91cf\u7684\u5b50\u9879\u7684\u5217\u8868\uff0c\u800c constraints \u662f\u6765\u81ea\u7236\u9879\u7684\u7ea6\u675f\u6761\u4ef6\u3002\u6309\u7167\u4e0e\u524d\u9762\u76f8\u540c\u7684\u903b\u8f91\uff0c\u53ef\u6309\u5982\u4e0b\u65b9\u5f0f\u5b9e\u73b0 MyBasicColumn \uff1a @Composable fun MyBasicColumn ( modifier : Modifier = Modifier , content : @Composable () () -> Unit ) { Layout ( modifier = modifier , content = content ) { measurables , constraints -> // Don't constrain child views further, measure them with given constraints // List of measured children val placeables = measurables . map { measurable -> // Measure each children measurable . measure ( constraints ) } // Set the size of the layout as big as it can layout ( constraints . maxWidth , constraints . maxHeight ) { // Track the y co-ord we have placed children up to var yPosition = 0 // Place children in the parent layout placeables . forEach { placeable -> // Position item on the screen placeable . placeRelative ( x = 0 , y = yPosition ) // Record the y co-ord placed up to yPosition += placeable . height } } } } \u53ef\u7ec4\u5408\u5b50\u9879\u53d7 Layout \u7ea6\u675f\u6761\u4ef6\uff08\u6ca1\u6709 minHeight \u7ea6\u675f\u6761\u4ef6\uff09\u7684\u7ea6\u675f\uff0c\u5b83\u4eec\u7684\u653e\u7f6e\u57fa\u4e8e\u524d\u4e00\u4e2a\u53ef\u7ec4\u5408\u9879\u7684 yPosition \u3002 \u8be5\u81ea\u5b9a\u4e49\u53ef\u7ec4\u5408\u9879\u7684\u4f7f\u7528\u65b9\u5f0f\u5982\u4e0b\uff1a @Composable fun CallingComposable ( modifier : Modifier = Modifier ) { MyBasicColumn ( modifier . padding ( 8. dp )) { Text ( \"MyBasicColumn\" ) Text ( \"places items\" ) Text ( \"vertically.\" ) Text ( \"We've done it by hand!\" ) } }","title":"\u521b\u5efa\u81ea\u5b9a\u4e49\u5e03\u5c40"},{"location":"layout/overview/#7","text":"\u60a8\u53ef\u4ee5\u901a\u8fc7\u66f4\u6539 LocalLayoutDirection composeLocal \u6765\u66f4\u6539\u53ef\u7ec4\u5408\u9879\u7684\u5e03\u5c40\u65b9\u5411\u3002 \u5982\u679c\u60a8\u8981\u5c06\u53ef\u7ec4\u5408\u9879\u624b\u52a8\u653e\u7f6e\u5728\u5c4f\u5e55\u4e0a\uff0c\u5219 LayoutDirection \u662f layout \u4fee\u9970\u7b26\u6216 Layout \u53ef\u7ec4\u5408\u9879\u7684 LayoutScope \u7684\u4e00\u90e8\u5206\u3002 \u4f7f\u7528 layoutDirection \u65f6\uff0c\u5e94\u4f7f\u7528 place \u653e\u7f6e\u53ef\u7ec4\u5408\u9879\u3002\u4e0e place \u65b9\u6cd5\u4e0d\u540c\uff0c place \u4e0d\u4f1a\u6839\u636e\u9605\u8bfb\u65b9\u5411\uff08\u4ece\u5de6\u5230\u53f3\u4e0e\u4ece\u53f3\u5230\u5de6\uff09\u53d1\u751f\u53d8\u5316\u3002","title":"7. \u5e03\u5c40\u65b9\u5411"},{"location":"layout/overview/#8","text":"Compose \u6709\u4e00\u9879\u89c4\u5219\uff0c\u5373\uff0c\u5b50\u9879\u53ea\u80fd\u6d4b\u91cf\u4e00\u6b21\uff0c\u6d4b\u91cf\u4e24\u6b21\u5c31\u4f1a\u5f15\u53d1\u8fd0\u884c\u65f6\u5f02\u5e38\u3002\u4f46\u662f\uff0c\u6709\u65f6\u9700\u8981\u5148\u6536\u96c6\u4e00\u4e9b\u5173\u4e8e\u5b50\u9879\u7684\u4fe1\u606f\uff0c\u7136\u540e\u518d\u6d4b\u91cf\u5b50\u9879\u3002 \u501f\u52a9\u56fa\u6709\u7279\u6027\uff0c\u60a8\u53ef\u4ee5\u5148\u67e5\u8be2\u5b50\u9879\uff0c\u7136\u540e\u518d\u8fdb\u884c\u5b9e\u9645\u6d4b\u91cf\u3002 \u5bf9\u4e8e\u53ef\u7ec4\u5408\u9879\uff0c\u60a8\u53ef\u4ee5\u67e5\u8be2\u5176 intrinsicWidth \u6216 intrinsicHeight \uff1a (min|max)IntrinsicWidth \uff1a\u7ed9\u5b9a\u6b64\u9ad8\u5ea6\uff0c\u53ef\u4ee5\u6b63\u786e\u7ed8\u5236\u5185\u5bb9\u7684\u6700\u5c0f/\u6700\u5927\u5bbd\u5ea6\u662f\u591a\u5c11\uff1f (min|max)IntrinsicHeight \uff1a\u7ed9\u5b9a\u6b64\u5bbd\u5ea6\uff0c\u53ef\u4ee5\u6b63\u786e\u7ed8\u5236\u5185\u5bb9\u7684\u6700\u5c0f/\u6700\u5927\u9ad8\u5ea6\u662f\u591a\u5c11\uff1f \u4f8b\u5982\uff0c\u5982\u679c\u60a8\u67e5\u8be2\u5177\u6709\u65e0\u9650 width \u7684 Text \u7684 minIntrinsicHeight \uff0c\u5b83\u5c06\u8fd4\u56de Text \u7684 height \uff0c\u5c31\u597d\u50cf\u8be5\u6587\u672c\u662f\u5728\u5355\u884c\u4e2d\u7ed8\u5236\u7684\u4e00\u6837\u3002 \u56fa\u6709\u7279\u6027\u7684\u5b9e\u9645\u8fd0\u7528 \u5047\u8bbe\u6211\u4eec\u9700\u8981\u521b\u5efa\u4e00\u4e2a\u53ef\u7ec4\u5408\u9879\uff0c\u8be5\u53ef\u7ec4\u5408\u9879\u5728\u5c4f\u5e55\u4e0a\u663e\u793a\u4e24\u4e2a\u7528\u5206\u9694\u7ebf\u9694\u5f00\u7684\u6587\u672c\uff0c\u5982\u4e0b\u6240\u793a\uff1a \u6211\u4eec\u8be5\u600e\u4e48\u505a\uff1f\u6211\u4eec\u53ef\u4ee5\u5c06\u4e24\u4e2a Text \u653e\u5728\u540c\u4e00 Row\uff0c\u5e76\u5728\u5176\u4e2d\u6700\u5927\u7a0b\u5ea6\u5730\u6269\u5c55\uff0c\u53e6\u5916\u5728\u4e2d\u95f4\u653e\u7f6e\u4e00\u4e2a Divider\u3002\u6211\u4eec\u9700\u8981\u5c06\u5206\u9694\u7ebf\u7684\u9ad8\u5ea6\u8bbe\u7f6e\u4e3a\u4e0e\u6700\u9ad8\u7684 Text \u76f8\u540c\uff0c\u7c97\u7ec6\u8bbe\u7f6e\u4e3a width = 1.dp\u3002 @Composable fun TwoTexts ( modifier : Modifier = Modifier , text1 : String , text2 : String ) { Row ( modifier = modifier ) { Text ( modifier = Modifier . weight ( 1f ) . padding ( start = 4. dp ) . wrapContentWidth ( Alignment . Start ), text = text1 ) Divider ( color = Color . Black , modifier = Modifier . fillMaxHeight (). width ( 1. dp )) Text ( modifier = Modifier . weight ( 1f ) . padding ( end = 4. dp ) . wrapContentWidth ( Alignment . End ), text = text2 ) } } @Preview @Composable fun TwoTextsPreview () { LayoutsCodelabTheme { Surface { TwoTexts ( text1 = \"Hi\" , text2 = \"there\" ) } } } \u9884\u89c8\u65f6\uff0c\u6211\u4eec\u53d1\u73b0\u5206\u9694\u7ebf\u6269\u5c55\u5230\u6574\u4e2a\u5c4f\u5e55\uff0c\u8fd9\u5e76\u4e0d\u662f\u6211\u4eec\u60f3\u8981\u7684\u6548\u679c\uff1a \u4e4b\u6240\u4ee5\u51fa\u73b0\u8fd9\u79cd\u60c5\u51b5\uff0c\u662f\u56e0\u4e3a Row \u4f1a\u9010\u4e2a\u6d4b\u91cf\u6bcf\u4e2a\u5b50\u9879\uff0c\u5e76\u4e14 Text \u7684\u9ad8\u5ea6\u4e0d\u80fd\u7528\u4e8e\u9650\u5236 Divider \u3002\u6211\u4eec\u5e0c\u671b Divider \u4ee5\u4e00\u4e2a\u7ed9\u5b9a\u7684\u9ad8\u5ea6\u6765\u586b\u5145\u53ef\u7528\u7a7a\u95f4\u3002\u4e3a\u6b64\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 height(IntrinsicSize.Min) \u4fee\u9970\u7b26\u3002 height(IntrinsicSize.Min) \u53ef\u5c06\u5176\u5b50\u9879\u7684\u9ad8\u5ea6\u5f3a\u884c\u8c03\u6574\u4e3a\u6700\u5c0f\u56fa\u6709\u9ad8\u5ea6\u3002\u7531\u4e8e\u8be5\u4fee\u9970\u7b26\u5177\u6709\u9012\u5f52\u6027\uff0c\u56e0\u6b64\u5b83\u5c06\u67e5\u8be2 Row \u53ca\u5176\u5b50\u9879 minIntrinsicHeight \u3002 \u5c06\u5176\u5e94\u7528\u5230\u4ee3\u7801\u4e2d\uff0c\u5c31\u80fd\u8fbe\u5230\u9884\u671f\u7684\u6548\u679c\uff1a Row \u53ef\u7ec4\u5408\u9879\u7684 minIntrinsicHeight \u5c06\u4f5c\u4e3a\u5176\u5b50\u9879\u7684\u6700\u5927 minIntrinsicHeight \u3002 Divider \u5143\u7d20\u7684 minIntrinsicHeight \u4e3a 0 \uff0c\u56e0\u4e3a\u5982\u679c\u6ca1\u6709\u7ed9\u51fa\u7ea6\u675f\u6761\u4ef6\uff0c\u5b83\u4e0d\u4f1a\u5360\u7528\u4efb\u4f55\u7a7a\u95f4\uff1b\u5982\u679c\u7ed9\u51fa\u7279\u5b9a width \uff0c Text minIntrinsicHeight \u5c06\u4e3a\u6587\u672c\u7684\u9ad8\u5ea6\u3002\u56e0\u6b64\uff0c Row \u5143\u7d20\u7684 height \u7ea6\u675f\u6761\u4ef6\u5c06\u4e3a Text \u7684\u6700\u5927 m inIntrinsicHeight \u3002\u800c Divider \u4f1a\u5c06\u5176 height \u6269\u5c55\u4e3a Row \u7ed9\u5b9a\u7684 height \u7ea6\u675f\u6761\u4ef6\u3002","title":"8. \u56fa\u6709\u7279\u6027\u6d4b\u91cf"},{"location":"layout/row/","text":"@Composable inline fun Row ( modifier : Modifier = Modifier , horizontalArrangement : Arrangement . Horizontal = Arrangement . Start , verticalAlignment : Alignment . Vertical = Alignment . Top , content : RowScope .() -> Unit ): Unit Row \u4f1a\u5c06\u91cc\u9762\u7684\u5b50\u9879\u653e\u5728\u4e00\u4e2a\u6c34\u5e73\u7684\u5e8f\u5217\u4e2d Row \u5e03\u5c40\u80fd\u591f\u6839\u636e\u4f7f\u7528 RowScope.weight \u4fee\u6539\u5668\u63d0\u4f9b\u7684\u6743\u91cd\u6765\u5206\u914d\u91cc\u9762\u5b50\u9879\u7684\u5bbd\u5ea6 \u5982\u679c\u4e00\u4e2a\u5b50\u9879\u6ca1\u6709\u63d0\u4f9b\u6743\u91cd\u7684\u8bdd\uff0c\u4f1a\u4f7f\u7528\u8fd9\u4e2a\u5b50\u9879\u9ed8\u8ba4\u7684\u5bbd\u5ea6\uff0c\u518d\u6839\u636e\u5176\u4ed6\u5269\u4f59\u6709\u6743\u91cd\u7684\u5b50\u9879\u8ba1\u7b97\u5269\u4f59\u7684\u7a7a\u95f4 @Composable fun RowDemo () { Row { Box ( Modifier . size ( 40. dp ). background ( Color . Magenta )) Box ( Modifier . size ( 40. dp ). weight ( 1f ). background ( Color . Yellow )) Box ( Modifier . size ( 40. dp ) . weight ( 1f ) . background ( Color . Green ) ) } } Row { Box ( Modifier . size ( 40. dp ). background ( Color . Magenta )) Box ( Modifier . size ( 40. dp ). background ( Color . Yellow )) Box ( Modifier . size ( 40. dp ). background ( Color . Green )) } \u800c\u5982\u679c Row \u91cc\u9762\u7684\u5b50\u9879\u90fd\u6ca1\u6709\u8bbe\u7f6e weight \u7684\u8bdd\uff0c\u5c06\u4f1a\u5c3d\u53ef\u80fd\u7684\u5c0f\uff0c\u4f7f\u91cc\u9762\u7684\u5b50\u9879\u7d27\u8d34\u5728\u4e00\u8d77 \u4e5f\u5c31\u662f\u6709\u70b9\u50cf xml \u4e2d\u7684 wrap_content \u5c5e\u6027","title":"Row"},{"location":"layout/scaffold/","text":"1. \u6982\u8ff0 Scaffold \u5b9e\u73b0\u4e86 Material Design \u7684\u57fa\u672c\u89c6\u56fe\u754c\u9762\u7ed3\u6784 \u5982\u4ee5\u4e0b\u7684\u4fa7\u8fb9\u5e94\u7528\u680f\u3001\u5e95\u90e8\u5bfc\u822a\u680f\u3001\u5bfc\u822a\u680f\u7b49\u6548\u679c Scaffold \u4e2d\u7684 topBar \u3001 bottomBar \u53c2\u6570\u4ec5\u4ec5\u53ea\u662f\u5e2e\u52a9\u6211\u4eec\u5b9a\u4f4d\u5e03\u5c40\u7684\u4f4d\u7f6e\uff0c\u4f60\u53ef\u4ee5\u7ecf\u5e38\u770b\u5230\u5b83\u4eec\u548c TopAppBar \u3001 BottomNavigation \u3001 BottomAppBar \u6765\u4e00\u8d77\u642d\u914d\u4f7f\u7528 2. \u5e38\u7528\u7684\u5b9e\u73b0 \u65b9\u6cd5 TopAppBar BottomNavigation \u9664\u6b64\u4e4b\u5916\uff0c\u4f60\u5f53\u7136\u4e5f\u80fd\u81ea\u5df1\u5199\u4e00\u4e2a Composable \u51fd\u6570\u6765\u4f20\u9012\u7ed9 Scaffold \u4e2d\u7684 topBar \u3001 bottomBar \u7b49","title":"Scaffold"},{"location":"layout/scaffold/#1","text":"Scaffold \u5b9e\u73b0\u4e86 Material Design \u7684\u57fa\u672c\u89c6\u56fe\u754c\u9762\u7ed3\u6784 \u5982\u4ee5\u4e0b\u7684\u4fa7\u8fb9\u5e94\u7528\u680f\u3001\u5e95\u90e8\u5bfc\u822a\u680f\u3001\u5bfc\u822a\u680f\u7b49\u6548\u679c Scaffold \u4e2d\u7684 topBar \u3001 bottomBar \u53c2\u6570\u4ec5\u4ec5\u53ea\u662f\u5e2e\u52a9\u6211\u4eec\u5b9a\u4f4d\u5e03\u5c40\u7684\u4f4d\u7f6e\uff0c\u4f60\u53ef\u4ee5\u7ecf\u5e38\u770b\u5230\u5b83\u4eec\u548c TopAppBar \u3001 BottomNavigation \u3001 BottomAppBar \u6765\u4e00\u8d77\u642d\u914d\u4f7f\u7528","title":"1. \u6982\u8ff0"},{"location":"layout/scaffold/#2","text":"\u65b9\u6cd5 TopAppBar BottomNavigation \u9664\u6b64\u4e4b\u5916\uff0c\u4f60\u5f53\u7136\u4e5f\u80fd\u81ea\u5df1\u5199\u4e00\u4e2a Composable \u51fd\u6570\u6765\u4f20\u9012\u7ed9 Scaffold \u4e2d\u7684 topBar \u3001 bottomBar \u7b49","title":"2. \u5e38\u7528\u7684\u5b9e\u73b0"},{"location":"layout/spacer/","text":"@Composable fun Spacer ( modifier : Modifier ): @Composable Unit Spacer \u80fd\u591f\u63d0\u4f9b\u4e00\u4e2a\u7a7a\u767d\u7684\u5e03\u5c40\uff0c\u53ef\u4ee5\u4f7f\u7528 Modifier.width , Modifier.height \u548c Modifier.size \u6765\u586b\u5145 import androidx.compose.foundation.layout.Box import androidx.compose.foundation.background import androidx.compose.foundation.layout.Row import androidx.compose.foundation.layout.Spacer import androidx.compose.foundation.layout.size import androidx.compose.foundation.layout.width Row { Box ( Modifier . size ( 100. dp ). background ( Color . Red )) Spacer ( Modifier . width ( 20. dp )) Box ( Modifier . size ( 100. dp ). background ( Color . Magenta )) Spacer ( Modifier . weight ( 1f )) Box ( Modifier . size ( 100. dp ). background ( Color . Black )) }","title":"Spacer"},{"location":"layout/topappbar/","text":"@Composable fun TopAppBar ( title : @Composable () -> Unit , modifier : Modifier = Modifier , navigationIcon : @Composable (() -> Unit ) ? = null , actions : @Composable RowScope .() -> Unit = {}, backgroundColor : Color = MaterialTheme . colors . primarySurface , contentColor : Color = contentColorFor ( backgroundColor ), elevation : Dp = AppBarDefaults . TopAppBarElevation ) \u7b80\u5355\u4f7f\u7528\uff1a @Composable fun ScaffoldDemo (){ Scaffold ( topBar = { TopAppBar ( title = { Text ( \"\u4e3b\u9875\" ) }, navigationIcon = { IconButton ( onClick = { }) { Icon ( Icons . Filled . ArrowBack , null ) } } ) }, ){ } } \u8fd8\u53ef\u4ee5\u8bbe\u7f6e TopAppBar \u4e2d\u7684 actions \u53c2\u6570 @Composable fun ScaffoldDemo (){ Scaffold ( topBar = { TopAppBar ( title = { Text ( \"\u4e3b\u9875\" ) }, navigationIcon = { IconButton ( onClick = { }) { Icon ( Icons . Filled . ArrowBack , null ) } }, actions = { IconButton ( onClick = { }) { Icon ( Icons . Filled . Search , null ) } IconButton ( onClick = { }) { Icon ( Icons . Filled . MoreVert , null ) } } ) }, ){ } } \u5b83\u4f1a\u5c06\u91cc\u9762\u7684\u5185\u5bb9\u4ee5 Row \u7684\u65b9\u5f0f\u6765\u6392\u5217","title":"TopAppBar"},{"location":"parameters/modifier/","text":"Modifier Modifier , \u987e\u540d\u601d\u4e49\u5c31\u662f\u4e00\u4e2a\u4fee\u9970\u5668\uff0c\u7528\u4e8e\u4fee\u6539\u7ec4\u4ef6\u7684\u6837\u5f0f\u3002\u6bcf\u4e2a Compose \u7ec4\u4ef6\u90fd\u4f1a\u63d0\u4f9b\u4e00\u4e2a Modifier \u53c2\u6570\u7528\u4e8e\u4fee\u6539\u6837\u5f0f\u3002 \u57fa\u7840\u7528\u6cd5 Modifier \u672c\u8eab\u53ea\u5b9e\u73b0\u4e86\u51e0\u4e2a\u51fd\u6570\u7528\u4e8e\u8fde\u63a5\u591a\u4e2a\u4fee\u9970\u5668\uff0c\u5927\u591a\u6570\u4fee\u9970\u65b9\u6cd5\u90fd\u662f\u901a\u8fc7 Kotlin \u6269\u5c55\u51fd\u6570 \u5b9e\u73b0\u7684\u3002 \u4f8b\u5982 size() \u8fd9\u4e2a\u4fee\u9970\u51fd\u6570\uff0c\u5176\u5b9e\u6765\u81ea androidx.compose.foundation.layout \u5305\u4e0b\u7684 Size.kt \u3002\u540c\u6837\uff0c\u4f60\u4e5f\u53ef\u4ee5\u4f7f\u7528\u6269\u5c55\u51fd\u6570\u6765\u5411 Modifier \u6dfb\u52a0\u4f60\u81ea\u5df1\u7684\u4fee\u9970\u65b9\u6cd5\u3002 \u4ee5\u4e0b\u4e3a\u5e38\u7528\u7684\u4fee\u9970\u65b9\u6cd5: // \u4fee\u6539\u63a7\u4ef6\u5927\u5c0f\uff0c\u7b2c\u4e00\u4e2a\u53c2\u6570\u4e3a\u5bbd\u5ea6\uff0c\u7b2c\u4e8c\u4e2a\u53c2\u6570\u4e3a\u9ad8\u5ea6 size ( width : Dp , height : Dp ) // \u5355\u72ec\u4fee\u6539\u63a7\u4ef6\u5bbd\u5ea6 width ( width : Dp ) // \u5355\u72ec\u4fee\u6539\u63a7\u4ef6\u9ad8\u5ea6 height ( height : Dp ) // \u9650\u5236\u63a7\u4ef6\u7684\u5bbd\u5ea6\u5728\u4e00\u5b9a\u8303\u56f4\u5185 widthIn ( min : Dp , max : Dp ) // \u9650\u5236\u63a7\u4ef6\u9ad8\u5ea6\u5728\u4e00\u5b9a\u8303\u56f4\u5185 heightIn ( min : Dp , max : Dp ) // \u4f7f\u5f97\u63a7\u4ef6\u7684\u5bbd\u5ea6\u9002\u5e94\u7236\u5e03\u5c40\u5927\u5c0f fillMaxWidth () // \u4f7f\u5f97\u63a7\u4ef6\u7684\u9ad8\u5ea6\u9002\u5e94\u7236\u5e03\u5c40\u5927\u5c0f fillMaxHeight () // \u4f7f\u5f97\u63a7\u4ef6\u6839\u636e\u5185\u90e8\u7684\u7ec4\u4ef6\u81ea\u9002\u5e94\u5185\u5bb9\u5927\u5c0f wrapContentSize () \u4fee\u9970\u65b9\u6cd5\u8fd8\u6709\u5f88\u591a\uff0c\u8fd9\u91cc\u5c31\u4e0d\u4e00\u4e00\u5217\u4e3e\u4e86\u3002 \u53ef\u4ee5\u4f7f\u7528 Android Studio \u81ea\u52a8\u8865\u5168\u6216\u8005\u67e5\u770b\u5b98\u65b9\u6587\u6863\u6765\u67e5\u627e\u66f4\u591a\u4fee\u9970\u51fd\u6570\u3002 \u4fee\u9970\u4f18\u5148\u7ea7 \u4fee\u9970\u65b9\u6cd5\u76f4\u63a5\u662f\u5b58\u5728\u5148\u540e\u987a\u5e8f\u7684\uff0c\u4e0d\u540c\u7684\u8c03\u7528\u987a\u5e8f\u4f1a\u5bfc\u81f4\u4e0d\u4e00\u6837\u7684\u6548\u679c\u3002\u6211\u4eec\u5148\u6765\u770b\u4e00\u4e2a\u4f8b\u5b50\uff1a @Composable fun UI (){ Card ( modifier = Modifier . clickable { } . padding ( 16. dp ) ) { Box ( modifier = Modifier . padding ( 20. dp )){ Text ( text = \"\u6211\u5df2\u7ecf\u6012\u4e0d\u53ef\u904f\u4e86\" ) } } } \u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c clickable{} \u5728 padding() \u4e4b\u524d \u8c03\u7528\uff0c\u56e0\u6b64 Card \u5916\u95f4\u8ddd\u7684\u90e8\u5206\u4e5f\u662f\u53ef\u4ee5\u88ab\u70b9\u51fb\u5230\u7684\u3002 \u53cd\u8f6c\u4e00\u4e0b\uff0c\u5982\u679c clickable{} \u5728 padding() \u4e4b\u540e \u88ab\u8c03\u7528\uff0c\u90a3\u4e48 Card \u7684\u5916\u95f4\u8ddd\u90e8\u5206\u5c31\u4e0d\u80fd\u70b9\u51fb\u4e86\uff0c\u53ea\u80fd\u70b9\u51fb Card \u672c\u8eab\u3002 \u4e3a\u4ec0\u4e48\u5462? (\u6316\u6e90\u7801\u65f6\u95f4~) \u76f4\u63a5\u67e5\u770b\u8fd9\u4e9b \u4fee\u9970\u65b9\u6cd5 \u7684\u6e90\u4ee3\u7801\uff0c\u53ef\u4ee5\u770b\u89c1\u4ed6\u4eec\u662f\u8fd9\u6837\u5b9e\u73b0\u7684: fun Modifier . padding ( all : Dp ) = this . then ( PaddingModifier ( start = all , top = all , end = all , bottom = all , rtlAware = true , inspectorInfo = debugInspectorInfo { name = \"padding\" value = all } ) ) \u663e\u800c\u6613\u89c1\uff0c\u8fd9\u662f\u4e00\u4e2aModifier\u7684\u6269\u5c55\u51fd\u6570\u3002 \u5b83\u8c03\u7528\u4e86 Modifier \u7684 then() \u51fd\u6570\uff0c\u800c\u8fd9\u4e2a then() \u9700\u8981\u63a5\u6536\u4e00\u4e2aModifier\u5bf9\u8c61\uff0c\u800c\u8fd9\u4e2aPaddingModifier\u7684\u6700\u7ec8\u7236\u7c7b\uff0c\u5c31\u662f Modifier \u3002 \u90a3 then() \u51fd\u6570\u5e72\u4e86\u4ec0\u4e48\u5462? \u7ee7\u7eed\u770b\u6e90\u7801: infix fun then ( other : Modifier ): Modifier = if ( other === Modifier ) this else CombinedModifier ( this , other ) \u5f88\u663e\u7136\uff0c\u5b83\u521b\u5efa\u4e86\u4e00\u4e2a CombinedModifier \u5bf9\u8c61\uff0c\u800c CombinedModifier \u4e5f\u662f\u7ee7\u627f\u81ea Modifier \u7c7b\u7684: class CombinedModifier ( private val outer : Modifier , private val inner : Modifier ) : Modifier { override fun < R > foldIn ( initial : R , operation : ( R , Modifier . Element ) -> R ): R = inner . foldIn ( outer . foldIn ( initial , operation ), operation ) override fun < R > foldOut ( initial : R , operation : ( Modifier . Element , R ) -> R ): R = outer . foldOut ( inner . foldOut ( initial , operation ), operation ) override fun any ( predicate : ( Modifier . Element ) -> Boolean ): Boolean = outer . any ( predicate ) || inner . any ( predicate ) override fun all ( predicate : ( Modifier . Element ) -> Boolean ): Boolean = outer . all ( predicate ) && inner . all ( predicate ) override fun equals ( other : Any? ): Boolean = other is CombinedModifier && outer == other . outer && inner == other . inner override fun hashCode (): Int = outer . hashCode () + 31 * inner . hashCode () override fun toString () = \"[\" + foldIn ( \"\" ) { acc , element -> if ( acc . isEmpty ()) element . toString () else \" $ acc , $ element \" } + \"]\" } \u8fd9\u4e2a CombinedModifier \u6301\u6709\u4e86\u6211\u4eec\u65b0\u589e\u7684\u4fee\u9970\u5668\u548c\u539f\u6709\u7684\u4fee\u9970\u5668\uff0c\u5e76\u4e14\u5c06\u5176\u7ec4\u5408\u4e3a\u4e00\u4e2a\u65b0\u7684 Modifier \u3002 \u53ef\u4ee5\u770b\u5230\uff0c Modifier \u7684\u5b9e\u73b0\u975e\u5e38\u7c7b\u4f3c\u4e8e\u4e00\u4e2a\u94fe\u8868\uff0c\u5f53\u6211\u4eec\u7ed9\u4e00\u4e2a\u7ec4\u4ef6\u6dfb\u52a0\u4e00\u4e2a\u4fee\u9970\u51fd\u6570\u65f6\uff0c\u5b83\u4f1a\u521b\u5efa\u4e00\u4e2a CombinedModifier \u5c06 \u65e7\u7684\u548c\u65b0\u7684Modifier\u7ec4\u5408\u5728\u4e00\u8d77 \uff0c\u5408\u6210\u4e3a\u4e00\u4e2a\u5355\u72ec\u7684 Modifier \u3002 \u8fd9\u4e5f\u89e3\u91ca\u4e86\u4e3a\u4ec0\u4e48\u8c03\u7528\u4fee\u9970\u51fd\u6570\u4e3a\u4ec0\u4e48\u4f1a\u6709\u987a\u5e8f\u95ee\u9898\uff0c\u4fee\u9970\u51fd\u6570\u5e76\u4e0d\u662f\u7b80\u5355\u4fee\u6539\u4e86\u67d0\u4e2a\u7ec4\u4ef6\u5185\u90e8\u7684\u53c2\u6570\uff0c\u800c\u662f\u7ed9\u8fd9\u4e2a\u7ec4\u4ef6 \u5957\u4e0a\u4e86\u4e00\u5c42\u53c8\u4e00\u5c42\u7684\u4fee\u9970\u5668 \u3002 \u7528\u6cd5\u793a\u8303 \u6765\u5199\u4e00\u4e2a\u53ef\u4ee5\u88ab\u70b9\u51fb\u7684\u5361\u7247\u5427, \u8ba9\u8fd9\u4e2a\u5361\u7247\u5bbd\u5ea6\u6700\u5927\uff0c\u9ad8\u5ea6100dp, \u5e76\u4e14\u5916\u8fb9\u8ddd16.dp\uff0c\u9634\u5f71\u6df1\u5ea68.dp\u5427 @Composable fun CardExample (){ Card ( modifier = Modifier . fillMaxWidth () . height ( 100. dp ) . padding ( 16. dp ) . clickable { /* \u4e0d\u505a\u4efb\u4f55\u4e8b */ }, elevation = 8. dp ) { // \u5185\u90e8\u6ca1\u6709\u7ec4\u4ef6 } } \u8fd0\u884c\u6548\u679c:","title":"Modifier"},{"location":"parameters/modifier/#modifier","text":"Modifier , \u987e\u540d\u601d\u4e49\u5c31\u662f\u4e00\u4e2a\u4fee\u9970\u5668\uff0c\u7528\u4e8e\u4fee\u6539\u7ec4\u4ef6\u7684\u6837\u5f0f\u3002\u6bcf\u4e2a Compose \u7ec4\u4ef6\u90fd\u4f1a\u63d0\u4f9b\u4e00\u4e2a Modifier \u53c2\u6570\u7528\u4e8e\u4fee\u6539\u6837\u5f0f\u3002","title":"Modifier"},{"location":"parameters/modifier/#_1","text":"Modifier \u672c\u8eab\u53ea\u5b9e\u73b0\u4e86\u51e0\u4e2a\u51fd\u6570\u7528\u4e8e\u8fde\u63a5\u591a\u4e2a\u4fee\u9970\u5668\uff0c\u5927\u591a\u6570\u4fee\u9970\u65b9\u6cd5\u90fd\u662f\u901a\u8fc7 Kotlin \u6269\u5c55\u51fd\u6570 \u5b9e\u73b0\u7684\u3002 \u4f8b\u5982 size() \u8fd9\u4e2a\u4fee\u9970\u51fd\u6570\uff0c\u5176\u5b9e\u6765\u81ea androidx.compose.foundation.layout \u5305\u4e0b\u7684 Size.kt \u3002\u540c\u6837\uff0c\u4f60\u4e5f\u53ef\u4ee5\u4f7f\u7528\u6269\u5c55\u51fd\u6570\u6765\u5411 Modifier \u6dfb\u52a0\u4f60\u81ea\u5df1\u7684\u4fee\u9970\u65b9\u6cd5\u3002 \u4ee5\u4e0b\u4e3a\u5e38\u7528\u7684\u4fee\u9970\u65b9\u6cd5: // \u4fee\u6539\u63a7\u4ef6\u5927\u5c0f\uff0c\u7b2c\u4e00\u4e2a\u53c2\u6570\u4e3a\u5bbd\u5ea6\uff0c\u7b2c\u4e8c\u4e2a\u53c2\u6570\u4e3a\u9ad8\u5ea6 size ( width : Dp , height : Dp ) // \u5355\u72ec\u4fee\u6539\u63a7\u4ef6\u5bbd\u5ea6 width ( width : Dp ) // \u5355\u72ec\u4fee\u6539\u63a7\u4ef6\u9ad8\u5ea6 height ( height : Dp ) // \u9650\u5236\u63a7\u4ef6\u7684\u5bbd\u5ea6\u5728\u4e00\u5b9a\u8303\u56f4\u5185 widthIn ( min : Dp , max : Dp ) // \u9650\u5236\u63a7\u4ef6\u9ad8\u5ea6\u5728\u4e00\u5b9a\u8303\u56f4\u5185 heightIn ( min : Dp , max : Dp ) // \u4f7f\u5f97\u63a7\u4ef6\u7684\u5bbd\u5ea6\u9002\u5e94\u7236\u5e03\u5c40\u5927\u5c0f fillMaxWidth () // \u4f7f\u5f97\u63a7\u4ef6\u7684\u9ad8\u5ea6\u9002\u5e94\u7236\u5e03\u5c40\u5927\u5c0f fillMaxHeight () // \u4f7f\u5f97\u63a7\u4ef6\u6839\u636e\u5185\u90e8\u7684\u7ec4\u4ef6\u81ea\u9002\u5e94\u5185\u5bb9\u5927\u5c0f wrapContentSize () \u4fee\u9970\u65b9\u6cd5\u8fd8\u6709\u5f88\u591a\uff0c\u8fd9\u91cc\u5c31\u4e0d\u4e00\u4e00\u5217\u4e3e\u4e86\u3002 \u53ef\u4ee5\u4f7f\u7528 Android Studio \u81ea\u52a8\u8865\u5168\u6216\u8005\u67e5\u770b\u5b98\u65b9\u6587\u6863\u6765\u67e5\u627e\u66f4\u591a\u4fee\u9970\u51fd\u6570\u3002","title":"\u57fa\u7840\u7528\u6cd5"},{"location":"parameters/modifier/#_2","text":"\u4fee\u9970\u65b9\u6cd5\u76f4\u63a5\u662f\u5b58\u5728\u5148\u540e\u987a\u5e8f\u7684\uff0c\u4e0d\u540c\u7684\u8c03\u7528\u987a\u5e8f\u4f1a\u5bfc\u81f4\u4e0d\u4e00\u6837\u7684\u6548\u679c\u3002\u6211\u4eec\u5148\u6765\u770b\u4e00\u4e2a\u4f8b\u5b50\uff1a @Composable fun UI (){ Card ( modifier = Modifier . clickable { } . padding ( 16. dp ) ) { Box ( modifier = Modifier . padding ( 20. dp )){ Text ( text = \"\u6211\u5df2\u7ecf\u6012\u4e0d\u53ef\u904f\u4e86\" ) } } } \u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c clickable{} \u5728 padding() \u4e4b\u524d \u8c03\u7528\uff0c\u56e0\u6b64 Card \u5916\u95f4\u8ddd\u7684\u90e8\u5206\u4e5f\u662f\u53ef\u4ee5\u88ab\u70b9\u51fb\u5230\u7684\u3002 \u53cd\u8f6c\u4e00\u4e0b\uff0c\u5982\u679c clickable{} \u5728 padding() \u4e4b\u540e \u88ab\u8c03\u7528\uff0c\u90a3\u4e48 Card \u7684\u5916\u95f4\u8ddd\u90e8\u5206\u5c31\u4e0d\u80fd\u70b9\u51fb\u4e86\uff0c\u53ea\u80fd\u70b9\u51fb Card \u672c\u8eab\u3002 \u4e3a\u4ec0\u4e48\u5462? (\u6316\u6e90\u7801\u65f6\u95f4~) \u76f4\u63a5\u67e5\u770b\u8fd9\u4e9b \u4fee\u9970\u65b9\u6cd5 \u7684\u6e90\u4ee3\u7801\uff0c\u53ef\u4ee5\u770b\u89c1\u4ed6\u4eec\u662f\u8fd9\u6837\u5b9e\u73b0\u7684: fun Modifier . padding ( all : Dp ) = this . then ( PaddingModifier ( start = all , top = all , end = all , bottom = all , rtlAware = true , inspectorInfo = debugInspectorInfo { name = \"padding\" value = all } ) ) \u663e\u800c\u6613\u89c1\uff0c\u8fd9\u662f\u4e00\u4e2aModifier\u7684\u6269\u5c55\u51fd\u6570\u3002 \u5b83\u8c03\u7528\u4e86 Modifier \u7684 then() \u51fd\u6570\uff0c\u800c\u8fd9\u4e2a then() \u9700\u8981\u63a5\u6536\u4e00\u4e2aModifier\u5bf9\u8c61\uff0c\u800c\u8fd9\u4e2aPaddingModifier\u7684\u6700\u7ec8\u7236\u7c7b\uff0c\u5c31\u662f Modifier \u3002 \u90a3 then() \u51fd\u6570\u5e72\u4e86\u4ec0\u4e48\u5462? \u7ee7\u7eed\u770b\u6e90\u7801: infix fun then ( other : Modifier ): Modifier = if ( other === Modifier ) this else CombinedModifier ( this , other ) \u5f88\u663e\u7136\uff0c\u5b83\u521b\u5efa\u4e86\u4e00\u4e2a CombinedModifier \u5bf9\u8c61\uff0c\u800c CombinedModifier \u4e5f\u662f\u7ee7\u627f\u81ea Modifier \u7c7b\u7684: class CombinedModifier ( private val outer : Modifier , private val inner : Modifier ) : Modifier { override fun < R > foldIn ( initial : R , operation : ( R , Modifier . Element ) -> R ): R = inner . foldIn ( outer . foldIn ( initial , operation ), operation ) override fun < R > foldOut ( initial : R , operation : ( Modifier . Element , R ) -> R ): R = outer . foldOut ( inner . foldOut ( initial , operation ), operation ) override fun any ( predicate : ( Modifier . Element ) -> Boolean ): Boolean = outer . any ( predicate ) || inner . any ( predicate ) override fun all ( predicate : ( Modifier . Element ) -> Boolean ): Boolean = outer . all ( predicate ) && inner . all ( predicate ) override fun equals ( other : Any? ): Boolean = other is CombinedModifier && outer == other . outer && inner == other . inner override fun hashCode (): Int = outer . hashCode () + 31 * inner . hashCode () override fun toString () = \"[\" + foldIn ( \"\" ) { acc , element -> if ( acc . isEmpty ()) element . toString () else \" $ acc , $ element \" } + \"]\" } \u8fd9\u4e2a CombinedModifier \u6301\u6709\u4e86\u6211\u4eec\u65b0\u589e\u7684\u4fee\u9970\u5668\u548c\u539f\u6709\u7684\u4fee\u9970\u5668\uff0c\u5e76\u4e14\u5c06\u5176\u7ec4\u5408\u4e3a\u4e00\u4e2a\u65b0\u7684 Modifier \u3002 \u53ef\u4ee5\u770b\u5230\uff0c Modifier \u7684\u5b9e\u73b0\u975e\u5e38\u7c7b\u4f3c\u4e8e\u4e00\u4e2a\u94fe\u8868\uff0c\u5f53\u6211\u4eec\u7ed9\u4e00\u4e2a\u7ec4\u4ef6\u6dfb\u52a0\u4e00\u4e2a\u4fee\u9970\u51fd\u6570\u65f6\uff0c\u5b83\u4f1a\u521b\u5efa\u4e00\u4e2a CombinedModifier \u5c06 \u65e7\u7684\u548c\u65b0\u7684Modifier\u7ec4\u5408\u5728\u4e00\u8d77 \uff0c\u5408\u6210\u4e3a\u4e00\u4e2a\u5355\u72ec\u7684 Modifier \u3002 \u8fd9\u4e5f\u89e3\u91ca\u4e86\u4e3a\u4ec0\u4e48\u8c03\u7528\u4fee\u9970\u51fd\u6570\u4e3a\u4ec0\u4e48\u4f1a\u6709\u987a\u5e8f\u95ee\u9898\uff0c\u4fee\u9970\u51fd\u6570\u5e76\u4e0d\u662f\u7b80\u5355\u4fee\u6539\u4e86\u67d0\u4e2a\u7ec4\u4ef6\u5185\u90e8\u7684\u53c2\u6570\uff0c\u800c\u662f\u7ed9\u8fd9\u4e2a\u7ec4\u4ef6 \u5957\u4e0a\u4e86\u4e00\u5c42\u53c8\u4e00\u5c42\u7684\u4fee\u9970\u5668 \u3002","title":"\u4fee\u9970\u4f18\u5148\u7ea7"},{"location":"parameters/modifier/#_3","text":"\u6765\u5199\u4e00\u4e2a\u53ef\u4ee5\u88ab\u70b9\u51fb\u7684\u5361\u7247\u5427, \u8ba9\u8fd9\u4e2a\u5361\u7247\u5bbd\u5ea6\u6700\u5927\uff0c\u9ad8\u5ea6100dp, \u5e76\u4e14\u5916\u8fb9\u8ddd16.dp\uff0c\u9634\u5f71\u6df1\u5ea68.dp\u5427 @Composable fun CardExample (){ Card ( modifier = Modifier . fillMaxWidth () . height ( 100. dp ) . padding ( 16. dp ) . clickable { /* \u4e0d\u505a\u4efb\u4f55\u4e8b */ }, elevation = 8. dp ) { // \u5185\u90e8\u6ca1\u6709\u7ec4\u4ef6 } } \u8fd0\u884c\u6548\u679c:","title":"\u7528\u6cd5\u793a\u8303"},{"location":"practice/practice1/","text":"asdasd","title":"Practice1"},{"location":"principle/recomposition_scope/","text":"\u4e0d\u5c11\u521d\u5b66 Compose \u7684\u540c\u5b66\u90fd\u4f1a\u5bf9 Composable \u7684 Recomposition\uff08\u5b98\u65b9\u6587\u6863\u8bd1\u4e3a\"\u91cd\u7ec4\"\uff09\u5fc3\u751f\u987e\u8651\uff0c\u62c5\u5fc3\u5927\u8303\u56f4\u7684\u91cd\u7ec4\u662f\u5426\u4f1a\u5f71\u54cd\u6027\u80fd\u3002 \u5176\u5b9e\u8fd9\u79cd\u62c5\u5fc3\u5927\u53ef\u4e0d\u5fc5\uff0c Compose \u7f16\u8bd1\u5668\u5728\u80cc\u540e\u505a\u4e86\u5927\u91cf\u5de5\u4f5c\u6765\u4fdd\u8bc1 recomposition \u8303\u56f4\u5c3d\u53ef\u80fd\u5c0f\uff0c\u4ece\u800c\u907f\u514d\u4e86\u65e0\u6548\u5f00\u9500\uff1a Recomposition skips as much as possible When portions of your UI are invalid, Compose does its best to recompose just the portions that need to be updated. https://developer.android.com/jetpack/compose/mental-model#skips \u90a3\u4e48\u5f53\u91cd\u7ec4\u53d1\u751f\u65f6\uff0c\u5176\u4ee3\u7801\u6267\u884c\u7684\u8303\u56f4\u7a76\u7adf\u662f\u600e\u6837\u7684\u5462\uff1f\u6211\u4eec\u901a\u8fc7\u4e00\u4e2a\u4f8b\u5b50\u6765\u6d4b\u8bd5\u4e00\u4e0b\uff1a @Composable fun Foo () { var text by remember { mutableStateOf ( \"\" ) } Log . d ( TAG , \"Foo\" ) Button ( onClick = { text = \" $ text $ text \" }. also { Log . d ( TAG , \"Button\" ) }) { Log . d ( TAG , \"Button content lambda\" ) Text ( text ). also { Log . d ( TAG , \"Text\" ) } } } \u5982\u4e0a\uff0c\u5f53\u70b9\u51fb button \u65f6\uff0cState \u7684\u53d8\u5316\u4f1a\u89e6\u53d1 recomposition\u3002 \u8bf7\u5927\u5bb6\u601d\u8003\u4e00\u4e0b\u6b64\u65f6\u7684\u65e5\u5fd7\u8f93\u51fa\u662f\u600e\u6837\u7684\uff1f \u3002\u3002\u3002 \u4f60\u53ef\u4ee5\u5728\u6587\u7ae0\u672b\u5c3e\u627e\u5230\u7b54\u6848\u3002 Compose \u5982\u4f55\u786e\u5b9a\u91cd\u7ec4\u8303\u56f4\uff1f Compose \u5728\u7f16\u8bd1\u671f\u5206\u6790\u51fa\u4f1a\u53d7\u5230\u67d0 state \u53d8\u5316\u5f71\u54cd\u7684\u4ee3\u7801\u5757\uff0c\u5e76\u8bb0\u5f55\u5176\u5f15\u7528\uff0c\u5f53\u6b64 state \u53d8\u5316\u65f6\uff0c\u4f1a\u6839\u636e\u5f15\u7528\u627e\u5230\u8fd9\u4e9b\u4ee3\u7801\u5757\u5e76\u6807\u8bb0\u4e3a Invalid \u3002\u5728\u4e0b\u4e00\u6e32\u67d3\u5e27\u5230\u6765\u4e4b\u524d Compose \u4f1a\u89e6\u53d1 recomposition\uff0c\u5e76\u5728\u91cd\u7ec4\u8fc7\u7a0b\u4e2d\u6267\u884c invalid \u4ee3\u7801\u5757\u3002 Invalid \u4ee3\u7801\u5757\u5373\u7f16\u8bd1\u5668\u627e\u51fa\u7684\u4e0b\u6b21\u91cd\u7ec4\u8303\u56f4\u3002\u80fd\u591f\u88ab\u6807\u8bb0\u4e3a Invalid \u7684\u4ee3\u7801\u5fc5\u987b\u662f \u975e inline \u4e14\u65e0\u8fd4\u56de\u503c \u7684 @Composalbe function/lambda \uff0c\u5fc5\u987b\u9075\u5faa \u91cd\u7ec4\u8303\u56f4\u6700\u5c0f\u5316 \u539f\u5219\u3002 \u4e3a\u4f55\u662f \u975e inline \u4e14\u65e0\u8fd4\u56de\u503c\uff08\u8fd4\u56de Unit\uff09\uff1f \u5bf9\u4e8e inline \u51fd\u6570\uff0c\u7531\u4e8e\u5728\u7f16\u8bd1\u671f\u4f1a\u5728\u8c03\u7528\u5904\u4e2d\u5c55\u5f00\uff0c\u56e0\u6b64\u65e0\u6cd5\u5728\u4e0b\u6b21\u91cd\u7ec4\u65f6\u627e\u5230\u5408\u9002\u7684\u8c03\u7528\u5165\u53e3\uff0c\u53ea\u80fd\u5171\u4eab\u8c03\u7528\u65b9\u7684\u91cd\u7ec4\u8303\u56f4\u3002 \u800c\u5bf9\u4e8e\u6709\u8fd4\u56de\u503c\u7684\u51fd\u6570\uff0c\u7531\u4e8e\u8fd4\u56de\u503c\u7684\u53d8\u5316\u4f1a\u5f71\u54cd\u8c03\u7528\u65b9\uff0c\u56e0\u6b64\u65e0\u6cd5\u5355\u72ec\u91cd\u7ec4\uff0c\u800c\u5fc5\u987b\u8fde\u540c\u8c03\u7528\u65b9\u4e00\u540c\u53c2\u4e0e\u91cd\u7ec4\uff0c\u56e0\u6b64\u5b83\u4e0d\u80fd\u4f5c\u4e3a\u5165\u53e3\u88ab\u6807\u8bb0\u4e3a invalid \u8303\u56f4\u6700\u5c0f\u5316\u539f\u5219 \u53ea\u6709\u4f1a\u53d7\u5230 state \u53d8\u5316\u5f71\u54cd\u7684\u4ee3\u7801\u5757\u624d\u4f1a\u53c2\u4e0e\u5230\u91cd\u7ec4\uff0c\u4e0d\u4f9d\u8d56 state \u7684\u4ee3\u7801\u4e0d\u53c2\u4e0e\u91cd\u7ec4\u3002 \u5728\u4e86\u89e3 Compose \u91cd\u7ed8\u8303\u56f4\u7684\u57fa\u672c\u89c4\u5219\u4e4b\u540e\uff0c\u6211\u4eec\u518d\u56de\u770b\u6587\u7ae0\u5f00\u5934\u7684\u4f8b\u5b50\uff0c\u5e76\u5c1d\u8bd5\u56de\u7b54\u4e0b\u9762\u7684\u95ee\u9898\uff1a \u4e3a\u4ec0\u4e48\u4e0d\u53ea\u662f Text \u53c2\u4e0e\u91cd\u7ec4\uff1f \u5f53\u70b9\u51fb button \u540e\uff0cMutableState \u53d1\u751f\u53d8\u5316\uff0c\u4ee3\u7801\u4e2d\u552f\u4e00\u8bbf\u95ee\u8fd9\u4e2a state \u7684\u5730\u65b9\u662f Text(...) \uff0c\u4e3a\u4ec0\u4e48\u91cd\u7ec4\u8303\u56f4\u4e0d\u53ea\u662f Text(...) \uff0c\u800c\u662f Button {...} \u7684\u6574\u4e2a\u82b1\u62ec\u53f7\uff1f \u9996\u5148\u8981\u7406\u89e3\u51fa\u73b0\u5728 Text(...) \u53c2\u6570\u4e2d\u7684 text \u5b9e\u9645\u4e0a\u662f\u4e00\u4e2a \u8868\u8fbe\u5f0f \u4e0b\u9762\u4e24\u4e2d\u5199\u6cd5\u5728\u6267\u884c\u987a\u5e8f\u4e0a\u662f\u7b49\u4ef7\u7684 println ( \u201c hello \u201d + \u201c world \u201d ) val arg = \u201c hello \u201d + \u201c world \u201d println ( arg ) \u603b\u662f \u201chello\u201d + \u201cworld\u201d \u4f5c\u4e3a\u8868\u8fbe\u5f0f\u5148\u6267\u884c\uff0c\u7136\u540e\u624d\u662f println \u65b9\u6cd5\u7684\u8c03\u7528\u3002 \u56de\u5230\u524d\u9762\u7684\u4f8b\u5b50\uff0c\u53c2\u6570 text \u4f5c\u4e3a\u8868\u8fbe\u5f0f\u6267\u884c\u7684\u8c03\u7528\u5904\u662f Button \u7684\u5c3elambda\uff0c\u800c\u540e\u624d\u4f5c\u4e3a\u53c2\u6570\u4f20\u5165 Text() \u3002 \u6240\u4ee5\u6b64\u65f6\u6700\u5c0f\u91cd\u7ec4\u8303\u56f4\u662f Button \u7684 \u5c3elambda \u800c\u975e Text() Foo \u662f\u5426\u53c2\u52a0\u91cd\u7ec4 \uff1f \u6309\u7167\u8303\u56f4\u6700\u5c0f\u5316\u539f\u5219\uff0c Foo \u4e2d\u6ca1\u6709\u4efb\u4f55\u5bf9 state \u7684\u8bbf\u95ee\uff0c\u6240\u4ee5\u5f88\u5bb9\u6613\u77e5\u9053 Foo \u4e0d\u5e94\u8be5\u53c2\u4e0e\u91cd\u7ec4\u3002 \u6709\u4e00\u70b9\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u4f8b\u5b50\u4e2d Foo \u901a\u8fc7 by \u7684\u4ee3\u7406\u65b9\u5f0f\u58f0\u660e text \uff0c\u5982\u679c\u6539\u4e3a = \u76f4\u63a5\u4e3a text \u8d4b\u503c\u5462\uff1f @Composable fun Foo () { val text : MutableState < String > = remember { mutableStateOf ( \"\" ) } Button ( onClick = { text = \" $ text $ text \" }) { Text ( text . value ) } } \u7b54\u6848\u662f\u4e00\u6837\u7684\uff0c\u4ecd\u7136\u4e0d\u4f1a\u53c2\u4e0e\u91cd\u7ec4\u3002 \u7b2c\u4e00\uff0cCompose \u5173\u5fc3\u7684\u662f\u4ee3\u7801\u5757\u4e2d\u662f\u5426\u6709\u5bf9 state \u7684 read \uff0c\u800c\u4e0d\u662f write \u3002 \u7b2c\u4e8c\uff0c\u8fd9\u91cc\u7684 = \u5e76\u4e0d\u610f\u5473\u7740 text \u4f1a\u88ab\u8d4b\u503c\u65b0\u7684\u5bf9\u8c61\uff0c\u56e0\u4e3a text \u6307\u5411\u7684 MutableState \u5b9e\u4f8b\u662f\u6c38\u8fdc\u4e0d\u4f1a\u53d8\u7684\uff0c\u53d8\u7684\u53ea\u662f\u5185\u90e8\u7684 value \u4e3a\u4ec0\u4e48 Button \u4e0d\u53c2\u4e0e\u91cd\u7ec4\uff1f \u8fd9\u4e2a\u5f88\u597d\u89e3\u91ca\uff0cButton \u7684\u8c03\u7528\u65b9 Foo \u4e0d\u53c2\u4e0e\u91cd\u7ec4\uff0cButton \u81ea\u7136\u4e5f\u4e0d\u4f1a\u53c2\u4e0e\u91cd\u7ec4\uff0c\u53ea\u6709\u5c3e lambda \u53c2\u4e0e\u91cd\u7ec4\u5373\u53ef\u3002 \u6ce8\u610f\uff01\u91cd\u7ec4\u4e2d\u7684 Inline \u9677\u9631\uff01 \u524d\u9762\u8bb2\u4e86\uff0c\u53ea\u6709 \u975einline\u51fd\u6570 \u624d\u6709\u8d44\u683c\u6210\u4e3a\u91cd\u7ec4\u7684\u6700\u5c0f\u8303\u56f4\uff0c\u7406\u89e3\u8fd9\u70b9\u7279\u522b\u91cd\u8981\uff01 \u6211\u4eec\u5c06\u4ee3\u7801\u7a0d\u4f5c\u6539\u52a8\uff0c\u4e3a Text() \u5305\u88f9\u4e00\u4e2a Box{...} @Composable fun Foo () { var text by remember { mutableStateOf ( \"\" ) } Button ( onClick = { text = \" $ text $ text \" }) { Log . d ( TAG , \"Button content lambda\" ) Box { Log . d ( TAG , \"Box\" ) Text ( text ). also { Log . d ( TAG , \"Text\" ) } } } } \u65e5\u5fd7\u5982\u4e0b\uff1a D/Compose: Button content lambda D/Compose: Boxt D/Compose: Text \u4e3a\u4ec0\u4e48\u91cd\u7ec4\u8303\u56f4\u4e0d\u662f\u4eceBox\u5f00\u59cb\uff1f Column \u3001 Row \u3001 Box \u4e43\u81f3 Layout \u8fd9\u79cd\u5bb9\u5668\u7c7b Composable \u90fd\u662f inline \u51fd\u6570\uff0c\u56e0\u6b64\u5b83\u4eec\u53ea\u80fd\u5171\u4eab\u8c03\u7528\u65b9\u7684\u91cd\u7ec4\u8303\u56f4\uff0c\u4e5f\u5c31\u662f Button \u7684 \u5c3elambda \u5982\u679c\u4f60\u5e0c\u671b\u901a\u8fc7\u7f29\u5c0f\u91cd\u7ec4\u8303\u56f4\u63d0\u9ad8\u6027\u80fd\u600e\u4e48\u529e\uff1f @Composable fun Foo () { var text by remember { mutableStateOf ( \"\" ) } Button ( onClick = { text = \" $ text $ text \" }) { Log . d ( TAG , \"Button content lambda\" ) Wrapper { Text ( text ). also { Log . d ( TAG , \"Text\" ) } } } } @Composable fun Wrapper ( content : @Composable () -> Unit ) { Log . d ( TAG , \"Wrapper recomposing\" ) Box { Log . d ( TAG , \"Box\" ) content () } } \u5982\u4e0a\uff0c\u81ea\u5b9a\u4e49\u975e inline \u51fd\u6570\uff0c\u4f7f\u4e4b\u6ee1\u8db3 Compose \u91cd\u7ec4\u8303\u56f4\u6700\u5c0f\u5316\u6761\u4ef6\u3002 \u7ed3\u8bba Just don't rely on side effects from recomposition and compose will do the right thing -- Compose Team \u5173\u4e8e\u91cd\u7ec4\u8303\u56f4\u7684\u5177\u4f53\u89c4\u5219\uff0c\u5b98\u65b9\u6587\u6863\u4e2d\u6ca1\u6709\u505a\u8be6\u7ec6\u8bf4\u660e\u3002\u56e0\u4e3a\u5f00\u53d1\u8005\u53ea\u9700\u8981\u7262\u8bb0 Compose \u901a\u8fc7\u7f16\u8bd1\u671f\u4f18\u5316\u4fdd\u8bc1\u4e86recomposition \u6c38\u8fdc\u6309\u7167\u6700\u5408\u7406\u7684\u65b9\u5f0f\u8fd0\u884c\uff0c\u4ee5\u6700\u81ea\u7136\u7684\u65b9\u5f0f\u5f00\u53d1\u5c31\u597d\u4e86\uff0c\u65e0\u9700\u9488\u5bf9\u8fd9\u4e9b\u5177\u4f53\u89c4\u5219\u4ed8\u51fa\u989d\u5916\u7684\u5b66\u4e60\u6210\u672c\u3002 \u5c3d\u7ba1\u5982\u6b64\uff0c\u4f5c\u4e3a\u5f00\u53d1\u8005\u4ecd\u8981\u8c28\u8bb0\u4e00\u70b9\uff1a \u4e0d\u8981\u76f4\u63a5\u5728 Composable \u4e2d\u5199\u5305\u542b\u526f\u4f5c\u7528\uff08SideEffect\uff09\u7684\u903b\u8f91\uff01 \u526f\u4f5c\u7528\u4e0d\u80fd\u8ddf\u968f recomposition \u53cd\u590d\u6267\u884c\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u4fdd\u8bc1 Composable \u7684\u201c\u7eaf\u6d01\u6027\u201d\u3002 \u4f60\u4e0d\u80fd\u9884\u8bbe\u67d0\u4e2a function/lambda \u4e00\u5b9a\u4e0d\u53c2\u4e0e\u91cd\u7ec4\uff0c\u56e0\u800c\u5728\u91cc\u9762\u4fa5\u5e78\u7684\u57cb\u4e86\u4e00\u4e9b\u526f\u4f5c\u7528\u4ee3\u7801\uff0c\u4f7f\u5176\u53d8\u5f97\u4e0d\u7eaf\u6d01\u3002\u56e0\u4e3a\u6211\u4eec\u65e0\u6cd5\u786e\u5b9a\u8fd9\u91cc\u662f\u5426\u5b58\u5728 \u201cinline\u9677\u9631\u201d\uff0c\u5373\u4f7f\u80fd\u786e\u5b9a\u4e5f\u4e0d\u4fdd\u8bc1\u73b0\u5728\u7684\u4f18\u5316\u89c4\u5219\u5728\u672a\u6765\u4e0d\u4f1a\u6539\u53d8\u3002 \u6240\u4ee5\u6700\u5b89\u5168\u7684\u505a\u6cd5\u662f\uff0c\u5c06\u526f\u4f5c\u7528\u5199\u5230 LaunchedEffect{} \u3001 DisposableEffect{} \u3001 SideEffect{} \u4e2d\uff0c\u5e76\u4e14\u4f7f\u7528 remeber{} \u3001 derivedStateOf{} \u5904\u7406\u90a3\u4e9b\u8017\u65f6\u7684\u8ba1\u7b97\u3002 \u5f00\u5934\u4f8b\u5b50\u7684\u8fd0\u884c\u7ed3\u679c\uff1a D/Compose: Button content lambda D/Compose: Text","title":"\u4e86\u89e3Compose\u7684\u91cd\u7ec4\u4f5c\u7528\u57df"},{"location":"principle/recomposition_scope/#compose","text":"Compose \u5728\u7f16\u8bd1\u671f\u5206\u6790\u51fa\u4f1a\u53d7\u5230\u67d0 state \u53d8\u5316\u5f71\u54cd\u7684\u4ee3\u7801\u5757\uff0c\u5e76\u8bb0\u5f55\u5176\u5f15\u7528\uff0c\u5f53\u6b64 state \u53d8\u5316\u65f6\uff0c\u4f1a\u6839\u636e\u5f15\u7528\u627e\u5230\u8fd9\u4e9b\u4ee3\u7801\u5757\u5e76\u6807\u8bb0\u4e3a Invalid \u3002\u5728\u4e0b\u4e00\u6e32\u67d3\u5e27\u5230\u6765\u4e4b\u524d Compose \u4f1a\u89e6\u53d1 recomposition\uff0c\u5e76\u5728\u91cd\u7ec4\u8fc7\u7a0b\u4e2d\u6267\u884c invalid \u4ee3\u7801\u5757\u3002 Invalid \u4ee3\u7801\u5757\u5373\u7f16\u8bd1\u5668\u627e\u51fa\u7684\u4e0b\u6b21\u91cd\u7ec4\u8303\u56f4\u3002\u80fd\u591f\u88ab\u6807\u8bb0\u4e3a Invalid \u7684\u4ee3\u7801\u5fc5\u987b\u662f \u975e inline \u4e14\u65e0\u8fd4\u56de\u503c \u7684 @Composalbe function/lambda \uff0c\u5fc5\u987b\u9075\u5faa \u91cd\u7ec4\u8303\u56f4\u6700\u5c0f\u5316 \u539f\u5219\u3002","title":"Compose \u5982\u4f55\u786e\u5b9a\u91cd\u7ec4\u8303\u56f4\uff1f"},{"location":"principle/recomposition_scope/#inline-unit","text":"\u5bf9\u4e8e inline \u51fd\u6570\uff0c\u7531\u4e8e\u5728\u7f16\u8bd1\u671f\u4f1a\u5728\u8c03\u7528\u5904\u4e2d\u5c55\u5f00\uff0c\u56e0\u6b64\u65e0\u6cd5\u5728\u4e0b\u6b21\u91cd\u7ec4\u65f6\u627e\u5230\u5408\u9002\u7684\u8c03\u7528\u5165\u53e3\uff0c\u53ea\u80fd\u5171\u4eab\u8c03\u7528\u65b9\u7684\u91cd\u7ec4\u8303\u56f4\u3002 \u800c\u5bf9\u4e8e\u6709\u8fd4\u56de\u503c\u7684\u51fd\u6570\uff0c\u7531\u4e8e\u8fd4\u56de\u503c\u7684\u53d8\u5316\u4f1a\u5f71\u54cd\u8c03\u7528\u65b9\uff0c\u56e0\u6b64\u65e0\u6cd5\u5355\u72ec\u91cd\u7ec4\uff0c\u800c\u5fc5\u987b\u8fde\u540c\u8c03\u7528\u65b9\u4e00\u540c\u53c2\u4e0e\u91cd\u7ec4\uff0c\u56e0\u6b64\u5b83\u4e0d\u80fd\u4f5c\u4e3a\u5165\u53e3\u88ab\u6807\u8bb0\u4e3a invalid","title":"\u4e3a\u4f55\u662f \u975e inline \u4e14\u65e0\u8fd4\u56de\u503c\uff08\u8fd4\u56de Unit\uff09\uff1f"},{"location":"principle/recomposition_scope/#_1","text":"\u53ea\u6709\u4f1a\u53d7\u5230 state \u53d8\u5316\u5f71\u54cd\u7684\u4ee3\u7801\u5757\u624d\u4f1a\u53c2\u4e0e\u5230\u91cd\u7ec4\uff0c\u4e0d\u4f9d\u8d56 state \u7684\u4ee3\u7801\u4e0d\u53c2\u4e0e\u91cd\u7ec4\u3002 \u5728\u4e86\u89e3 Compose \u91cd\u7ed8\u8303\u56f4\u7684\u57fa\u672c\u89c4\u5219\u4e4b\u540e\uff0c\u6211\u4eec\u518d\u56de\u770b\u6587\u7ae0\u5f00\u5934\u7684\u4f8b\u5b50\uff0c\u5e76\u5c1d\u8bd5\u56de\u7b54\u4e0b\u9762\u7684\u95ee\u9898\uff1a","title":"\u8303\u56f4\u6700\u5c0f\u5316\u539f\u5219"},{"location":"principle/recomposition_scope/#text","text":"\u5f53\u70b9\u51fb button \u540e\uff0cMutableState \u53d1\u751f\u53d8\u5316\uff0c\u4ee3\u7801\u4e2d\u552f\u4e00\u8bbf\u95ee\u8fd9\u4e2a state \u7684\u5730\u65b9\u662f Text(...) \uff0c\u4e3a\u4ec0\u4e48\u91cd\u7ec4\u8303\u56f4\u4e0d\u53ea\u662f Text(...) \uff0c\u800c\u662f Button {...} \u7684\u6574\u4e2a\u82b1\u62ec\u53f7\uff1f \u9996\u5148\u8981\u7406\u89e3\u51fa\u73b0\u5728 Text(...) \u53c2\u6570\u4e2d\u7684 text \u5b9e\u9645\u4e0a\u662f\u4e00\u4e2a \u8868\u8fbe\u5f0f \u4e0b\u9762\u4e24\u4e2d\u5199\u6cd5\u5728\u6267\u884c\u987a\u5e8f\u4e0a\u662f\u7b49\u4ef7\u7684 println ( \u201c hello \u201d + \u201c world \u201d ) val arg = \u201c hello \u201d + \u201c world \u201d println ( arg ) \u603b\u662f \u201chello\u201d + \u201cworld\u201d \u4f5c\u4e3a\u8868\u8fbe\u5f0f\u5148\u6267\u884c\uff0c\u7136\u540e\u624d\u662f println \u65b9\u6cd5\u7684\u8c03\u7528\u3002 \u56de\u5230\u524d\u9762\u7684\u4f8b\u5b50\uff0c\u53c2\u6570 text \u4f5c\u4e3a\u8868\u8fbe\u5f0f\u6267\u884c\u7684\u8c03\u7528\u5904\u662f Button \u7684\u5c3elambda\uff0c\u800c\u540e\u624d\u4f5c\u4e3a\u53c2\u6570\u4f20\u5165 Text() \u3002 \u6240\u4ee5\u6b64\u65f6\u6700\u5c0f\u91cd\u7ec4\u8303\u56f4\u662f Button \u7684 \u5c3elambda \u800c\u975e Text()","title":"\u4e3a\u4ec0\u4e48\u4e0d\u53ea\u662f Text \u53c2\u4e0e\u91cd\u7ec4\uff1f"},{"location":"principle/recomposition_scope/#foo","text":"\u6309\u7167\u8303\u56f4\u6700\u5c0f\u5316\u539f\u5219\uff0c Foo \u4e2d\u6ca1\u6709\u4efb\u4f55\u5bf9 state \u7684\u8bbf\u95ee\uff0c\u6240\u4ee5\u5f88\u5bb9\u6613\u77e5\u9053 Foo \u4e0d\u5e94\u8be5\u53c2\u4e0e\u91cd\u7ec4\u3002 \u6709\u4e00\u70b9\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u4f8b\u5b50\u4e2d Foo \u901a\u8fc7 by \u7684\u4ee3\u7406\u65b9\u5f0f\u58f0\u660e text \uff0c\u5982\u679c\u6539\u4e3a = \u76f4\u63a5\u4e3a text \u8d4b\u503c\u5462\uff1f @Composable fun Foo () { val text : MutableState < String > = remember { mutableStateOf ( \"\" ) } Button ( onClick = { text = \" $ text $ text \" }) { Text ( text . value ) } } \u7b54\u6848\u662f\u4e00\u6837\u7684\uff0c\u4ecd\u7136\u4e0d\u4f1a\u53c2\u4e0e\u91cd\u7ec4\u3002 \u7b2c\u4e00\uff0cCompose \u5173\u5fc3\u7684\u662f\u4ee3\u7801\u5757\u4e2d\u662f\u5426\u6709\u5bf9 state \u7684 read \uff0c\u800c\u4e0d\u662f write \u3002 \u7b2c\u4e8c\uff0c\u8fd9\u91cc\u7684 = \u5e76\u4e0d\u610f\u5473\u7740 text \u4f1a\u88ab\u8d4b\u503c\u65b0\u7684\u5bf9\u8c61\uff0c\u56e0\u4e3a text \u6307\u5411\u7684 MutableState \u5b9e\u4f8b\u662f\u6c38\u8fdc\u4e0d\u4f1a\u53d8\u7684\uff0c\u53d8\u7684\u53ea\u662f\u5185\u90e8\u7684 value","title":"Foo \u662f\u5426\u53c2\u52a0\u91cd\u7ec4 \uff1f"},{"location":"principle/recomposition_scope/#button","text":"\u8fd9\u4e2a\u5f88\u597d\u89e3\u91ca\uff0cButton \u7684\u8c03\u7528\u65b9 Foo \u4e0d\u53c2\u4e0e\u91cd\u7ec4\uff0cButton \u81ea\u7136\u4e5f\u4e0d\u4f1a\u53c2\u4e0e\u91cd\u7ec4\uff0c\u53ea\u6709\u5c3e lambda \u53c2\u4e0e\u91cd\u7ec4\u5373\u53ef\u3002","title":"\u4e3a\u4ec0\u4e48 Button \u4e0d\u53c2\u4e0e\u91cd\u7ec4\uff1f"},{"location":"principle/recomposition_scope/#inline","text":"\u524d\u9762\u8bb2\u4e86\uff0c\u53ea\u6709 \u975einline\u51fd\u6570 \u624d\u6709\u8d44\u683c\u6210\u4e3a\u91cd\u7ec4\u7684\u6700\u5c0f\u8303\u56f4\uff0c\u7406\u89e3\u8fd9\u70b9\u7279\u522b\u91cd\u8981\uff01 \u6211\u4eec\u5c06\u4ee3\u7801\u7a0d\u4f5c\u6539\u52a8\uff0c\u4e3a Text() \u5305\u88f9\u4e00\u4e2a Box{...} @Composable fun Foo () { var text by remember { mutableStateOf ( \"\" ) } Button ( onClick = { text = \" $ text $ text \" }) { Log . d ( TAG , \"Button content lambda\" ) Box { Log . d ( TAG , \"Box\" ) Text ( text ). also { Log . d ( TAG , \"Text\" ) } } } } \u65e5\u5fd7\u5982\u4e0b\uff1a D/Compose: Button content lambda D/Compose: Boxt D/Compose: Text","title":"\u6ce8\u610f\uff01\u91cd\u7ec4\u4e2d\u7684 Inline \u9677\u9631\uff01"},{"location":"principle/recomposition_scope/#box","text":"Column \u3001 Row \u3001 Box \u4e43\u81f3 Layout \u8fd9\u79cd\u5bb9\u5668\u7c7b Composable \u90fd\u662f inline \u51fd\u6570\uff0c\u56e0\u6b64\u5b83\u4eec\u53ea\u80fd\u5171\u4eab\u8c03\u7528\u65b9\u7684\u91cd\u7ec4\u8303\u56f4\uff0c\u4e5f\u5c31\u662f Button \u7684 \u5c3elambda \u5982\u679c\u4f60\u5e0c\u671b\u901a\u8fc7\u7f29\u5c0f\u91cd\u7ec4\u8303\u56f4\u63d0\u9ad8\u6027\u80fd\u600e\u4e48\u529e\uff1f @Composable fun Foo () { var text by remember { mutableStateOf ( \"\" ) } Button ( onClick = { text = \" $ text $ text \" }) { Log . d ( TAG , \"Button content lambda\" ) Wrapper { Text ( text ). also { Log . d ( TAG , \"Text\" ) } } } } @Composable fun Wrapper ( content : @Composable () -> Unit ) { Log . d ( TAG , \"Wrapper recomposing\" ) Box { Log . d ( TAG , \"Box\" ) content () } } \u5982\u4e0a\uff0c\u81ea\u5b9a\u4e49\u975e inline \u51fd\u6570\uff0c\u4f7f\u4e4b\u6ee1\u8db3 Compose \u91cd\u7ec4\u8303\u56f4\u6700\u5c0f\u5316\u6761\u4ef6\u3002","title":"\u4e3a\u4ec0\u4e48\u91cd\u7ec4\u8303\u56f4\u4e0d\u662f\u4eceBox\u5f00\u59cb\uff1f"},{"location":"principle/recomposition_scope/#_2","text":"Just don't rely on side effects from recomposition and compose will do the right thing -- Compose Team \u5173\u4e8e\u91cd\u7ec4\u8303\u56f4\u7684\u5177\u4f53\u89c4\u5219\uff0c\u5b98\u65b9\u6587\u6863\u4e2d\u6ca1\u6709\u505a\u8be6\u7ec6\u8bf4\u660e\u3002\u56e0\u4e3a\u5f00\u53d1\u8005\u53ea\u9700\u8981\u7262\u8bb0 Compose \u901a\u8fc7\u7f16\u8bd1\u671f\u4f18\u5316\u4fdd\u8bc1\u4e86recomposition \u6c38\u8fdc\u6309\u7167\u6700\u5408\u7406\u7684\u65b9\u5f0f\u8fd0\u884c\uff0c\u4ee5\u6700\u81ea\u7136\u7684\u65b9\u5f0f\u5f00\u53d1\u5c31\u597d\u4e86\uff0c\u65e0\u9700\u9488\u5bf9\u8fd9\u4e9b\u5177\u4f53\u89c4\u5219\u4ed8\u51fa\u989d\u5916\u7684\u5b66\u4e60\u6210\u672c\u3002 \u5c3d\u7ba1\u5982\u6b64\uff0c\u4f5c\u4e3a\u5f00\u53d1\u8005\u4ecd\u8981\u8c28\u8bb0\u4e00\u70b9\uff1a \u4e0d\u8981\u76f4\u63a5\u5728 Composable \u4e2d\u5199\u5305\u542b\u526f\u4f5c\u7528\uff08SideEffect\uff09\u7684\u903b\u8f91\uff01 \u526f\u4f5c\u7528\u4e0d\u80fd\u8ddf\u968f recomposition \u53cd\u590d\u6267\u884c\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u4fdd\u8bc1 Composable \u7684\u201c\u7eaf\u6d01\u6027\u201d\u3002 \u4f60\u4e0d\u80fd\u9884\u8bbe\u67d0\u4e2a function/lambda \u4e00\u5b9a\u4e0d\u53c2\u4e0e\u91cd\u7ec4\uff0c\u56e0\u800c\u5728\u91cc\u9762\u4fa5\u5e78\u7684\u57cb\u4e86\u4e00\u4e9b\u526f\u4f5c\u7528\u4ee3\u7801\uff0c\u4f7f\u5176\u53d8\u5f97\u4e0d\u7eaf\u6d01\u3002\u56e0\u4e3a\u6211\u4eec\u65e0\u6cd5\u786e\u5b9a\u8fd9\u91cc\u662f\u5426\u5b58\u5728 \u201cinline\u9677\u9631\u201d\uff0c\u5373\u4f7f\u80fd\u786e\u5b9a\u4e5f\u4e0d\u4fdd\u8bc1\u73b0\u5728\u7684\u4f18\u5316\u89c4\u5219\u5728\u672a\u6765\u4e0d\u4f1a\u6539\u53d8\u3002 \u6240\u4ee5\u6700\u5b89\u5168\u7684\u505a\u6cd5\u662f\uff0c\u5c06\u526f\u4f5c\u7528\u5199\u5230 LaunchedEffect{} \u3001 DisposableEffect{} \u3001 SideEffect{} \u4e2d\uff0c\u5e76\u4e14\u4f7f\u7528 remeber{} \u3001 derivedStateOf{} \u5904\u7406\u90a3\u4e9b\u8017\u65f6\u7684\u8ba1\u7b97\u3002","title":"\u7ed3\u8bba"},{"location":"principle/recomposition_scope/#_3","text":"D/Compose: Button content lambda D/Compose: Text","title":"\u5f00\u5934\u4f8b\u5b50\u7684\u8fd0\u884c\u7ed3\u679c\uff1a"},{"location":"third-party-component/accompanist/appcompat_theme/","text":"\u8fd9\u4e2a\u4eba\u5f88\u61d2\uff0c\u4ec0\u4e48\u90fd\u6ca1\u6709\u7559\u4e0b","title":"AppCompat Theme"},{"location":"third-party-component/accompanist/coil/","text":"Coil for Jetpack Compose \u8be5\u5e93\u63d0\u4f9b\u4e86\u7b80\u5355\u6613\u7528\u7684 Painter \uff0c\u5b83\u53ef\u4ee5\u4f7f\u7528 Coil \u56fe\u50cf\u52a0\u8f7d\u5e93\u83b7\u53d6\u5e76\u663e\u793a\u5916\u90e8\u56fe\u50cf\uff08\u4f8b\u5982\u7f51\u7edc\u56fe\u50cf\u7b49\uff09\u3002 rememberCoilPainter() \u4e3b\u8981 API rememberCoilPainter() \u7684\u6700\u7b80\u5355\u7528\u6cd5\u5982\u4e0b\uff1a import androidx.compose.foundation.Image import com.google.accompanist.coil.rememberCoilPainter Image ( painter = rememberCoilPainter ( \"https://picsum.photos/300/300\" ), contentDescription = stringResource ( R . string . image_content_desc ), ) painter \u4f7f\u7528 Coil \u52a0\u8f7d\u4f20\u5165\u7684\u6570\u636e\uff0c\u7136\u540e\u7ed8\u5236\u7ed3\u679c\u56fe\u50cf\u3002 \u5f00\u53d1\u8005\u4e5f\u53ef\u4ee5\u901a\u8fc7 requestBuilder \u53c2\u6570\u6765\u81ea\u5b9a\u4e49 Coil \u7684 ImageRequest \u3002\u901a\u8fc7\u8fd9\u79cd\u65b9\u5f0f\u5f00\u53d1\u8005\u53ef\u4ee5\u5b9e\u73b0\u5982 CircleCropTransformation \u3001 BlurTransformation \u3001 GrayscaleTransformation \u3001 RoundedCornersTransformation \u7b49 transformations \u4e4b\u7c7b\u7684\u6548\u679c\uff1a import androidx.compose.foundation.Image import com.google.accompanist.coil.rememberCoilPainter Image ( painter = rememberCoilPainter ( request = \"https://picsum.photos/300/300\" , requestBuilder = { transformations ( CircleCropTransformation ()) }, ), contentDescription = stringResource ( R . string . image_content_desc ), ) \u6de1\u5165\u52a8\u753b \u8be5\u5e93\u5185\u7f6e\u652f\u6301\u56fe\u50cf\u52a0\u8f7d\u8fc7\u7a0b\u4e2d\u7684 \u6de1\u5165\u52a8\u753b \u3002 rememberCoilPainter \u7684\u51fd\u6570\u53c2\u6570 fadeIn:Boolean \u9ed8\u8ba4\u4e3a false \uff0c\u5f53 fadeIn = true \u65f6\uff0c\u4e00\u4e2a\u9ed8\u8ba4\u7684\u6de1\u5165\u52a8\u753b\u5c06\u51fa\u73b0\u5728\u56fe\u7247\u6210\u529f\u52a0\u8f7d\u8fc7\u7a0b\u4e2d\u3002 import androidx.compose.foundation.Image import com.google.accompanist.coil.rememberCoilPainter Image ( painter = rememberCoilPainter ( \"https://picsum.photos/300/300\" , fadeIn = true ), contentDescription = stringResource ( R . string . image_content_desc ), ) \u81ea\u5b9a\u4e49\u5185\u5bb9 \u6709\u65f6\u5f00\u53d1\u8005\u53ef\u80fd\u5e0c\u671b\u5728\u56fe\u7247\u52a0\u8f7d\u65f6\u663e\u793a\u5360\u4f4d\u56fe\u7247\u6216\u8005\u5728\u56fe\u7247\u52a0\u8f7d\u5931\u8d25\u65f6\u663e\u793a\u5931\u8d25\u63d0\u793a\u56fe\u7247\uff0c rememberCoilPainter() \u8fd4\u56de\u7684 painter \u662f \u7684\u4e00\u4e2a LoadPainter \u5b9e\u4f8b\uff0c ImageLoadState \u6709\u56db\u79cd\u72b6\u6001\uff1a Empty \u3001 Loading \u3001 Success \u548c Error \uff0c\u5206\u522b\u5bf9\u5e94\u7740\u521d\u59cb\u72b6\u6001\u3001\u52a0\u8f7d\u72b6\u6001\u3001\u52a0\u8f7d\u6210\u529f\u548c\u52a0\u8f7d\u5931\u8d25\u3002\u5f00\u53d1\u8005\u53ef\u4ee5\u6839\u636e\u9700\u8981\u663e\u793a\u4e0d\u540c\u7684\u5185\u5bb9\uff1a val painter = rememberCoilPainter ( \"https://picsum.photos/300/300\" ) Box { Image ( painter = painter , contentDescription = stringResource ( R . string . image_content_desc ), ) when ( painter . loadState ) { is ImageLoadState . Loading -> { // Display a circular progress indicator whilst loading CircularProgressIndicator ( Modifier . align ( Alignment . Center )) } is ImageLoadState . Error -> { // If you wish to display some content if the request fails } } } \u9884\u89c8 \u4e3a\u4e86\u652f\u6301 Android Studio \u7684 Composable Previews \u529f\u80fd\uff0c\u5f00\u53d1\u8005\u53ef\u4ee5\u901a\u8fc7 previewPlaceholder \u53c2\u6570\u4f20\u5165\u4e00\u4e2a\u56fe\u7247\u8d44\u6e90 ID \uff0c\u4ee5\u4fbf Android Studio \u9884\u89c8\u5e03\u5c40\u65f6\u6709\u56fe\u7247\u5c55\u793a\uff1a Image ( painter = rememberCoilPainter ( request = \"https://picsum.photos/300/300\" , previewPlaceholder = R . drawable . placeholder , ), contentDescription = stringResource ( R . string . image_content_desc ), ) \u5982\u679c\u5f15\u7528\u7684 drawable \u4ec5\u7528\u4e8e previewPlaceholder \uff0c\u5219\u53ef\u4ee5\u5c06\u5176\u653e\u7f6e\u5728 debug \u6784\u5efa\u53d8\u4f53\u7684\u8d44\u6e90\u4e2d\uff0c\u4f8b\u5982\uff1a app/debug/res/drawable/ \uff0c\u901a\u8fc7\u8fd9\u79cd\u64cd\u4f5c\u5c06 drawable \u6346\u7ed1\u5728\u8c03\u8bd5\u7248\u672c\u4e2d\uff0c\u540c\u65f6\u4e5f\u5c06\u5176\u6392\u9664\u81f3\u53d1\u5e03\u7248\u672c\u5916\u3002 GIF Accompanist Coil \u901a\u8fc7 Coil \u5185\u7f6e GIF \u652f\u6301\u5b9e\u73b0 GIF \u56fe\u7247\u52a0\u8f7d\u3002\u5177\u4f53\u914d\u7f6e\u53c2\u8003 Coil \u5e93\u7684 \u914d\u7f6e\u8bf4\u660e \u3002 \u89c2\u5bdf\u52a0\u8f7d\u72b6\u6001\u53d8\u5316 \u5f00\u53d1\u8005\u53ef\u4ee5\u4f7f\u7528 snapshotFlow() \u6765\u89c2\u5bdf painter.loadState \u7684\u53d8\u5316\u60c5\u51b5\uff0c\u4ee5\u6b64\u5b9e\u73b0\u5bf9\u56fe\u7247\u52a0\u8f7d\u72b6\u6001\u7684\u76d1\u542c\uff0c\u7136\u540e\u6839\u636e\u9700\u8981\u8c03\u6574\u4ee3\u7801\u903b\u8f91\uff1a val painter = rememberCoilPainter ( \"https://image.url\" ) LaunchedEffect ( painter ) { snapshotFlow { painter . loadState } . filter { it . isFinalState () } . collect { result -> // TODO do something with result } } Image ( painter = painter ) \u81ea\u5b9a\u4e49 ImageLoader \u5982\u679c\u5f00\u53d1\u8005\u5e0c\u671b\u5728\u6240\u6709 rememberCoilPainter() \u8c03\u7528\u4e2d\u4f7f\u7528\u540c\u4e00\u4e2a\u9ed8\u8ba4\u7684 ImageLoader \uff0c\u5c31\u8bf7\u4f7f\u7528 LocalImageLoader \u672c\u5730\u7ec4\u5408\u3002 \u793a\u4f8b\u5982\u4e0b\uff1a val imageLoader = ImageLoader . Builder ( context ) // customize the ImageLoader as needed . build () CompositionLocalProvider ( LocalImageLoader provides imageLoader ) { // This will automatically use the value of LocalImageLoader Image ( painter = rememberCoilPainter (...) ) } \u66f4\u591a\u6709\u5173\u672c\u5730\u7ec4\u5408\u7684\u4fe1\u606f\uff0c\u8bf7\u53c2\u89c1 \u6b64\u5904 \u3002 \u4e0b\u8f7d repositories { mavenCentral () } dependencies { implementation \"com.google.accompanist:accompanist-coil:<version>\" } Snapshots of the development version are available in [Sonatype's snapshots repository][snap]. These are updated on every commit. Sonatype's snapshots repository \u4e2d\u63d0\u4f9b\u4e86\u5f00\u53d1\u7248\u672c\u7684\u5feb\u7167\u3002\u6bcf\u4e00\u6b21\u63d0\u4ea4\uff0c\u5feb\u7167\u90fd\u4f1a\u66f4\u65b0\u3002","title":"Coil"},{"location":"third-party-component/accompanist/coil/#coil-for-jetpack-compose","text":"\u8be5\u5e93\u63d0\u4f9b\u4e86\u7b80\u5355\u6613\u7528\u7684 Painter \uff0c\u5b83\u53ef\u4ee5\u4f7f\u7528 Coil \u56fe\u50cf\u52a0\u8f7d\u5e93\u83b7\u53d6\u5e76\u663e\u793a\u5916\u90e8\u56fe\u50cf\uff08\u4f8b\u5982\u7f51\u7edc\u56fe\u50cf\u7b49\uff09\u3002","title":"Coil for Jetpack Compose"},{"location":"third-party-component/accompanist/coil/#remembercoilpainter","text":"\u4e3b\u8981 API rememberCoilPainter() \u7684\u6700\u7b80\u5355\u7528\u6cd5\u5982\u4e0b\uff1a import androidx.compose.foundation.Image import com.google.accompanist.coil.rememberCoilPainter Image ( painter = rememberCoilPainter ( \"https://picsum.photos/300/300\" ), contentDescription = stringResource ( R . string . image_content_desc ), ) painter \u4f7f\u7528 Coil \u52a0\u8f7d\u4f20\u5165\u7684\u6570\u636e\uff0c\u7136\u540e\u7ed8\u5236\u7ed3\u679c\u56fe\u50cf\u3002 \u5f00\u53d1\u8005\u4e5f\u53ef\u4ee5\u901a\u8fc7 requestBuilder \u53c2\u6570\u6765\u81ea\u5b9a\u4e49 Coil \u7684 ImageRequest \u3002\u901a\u8fc7\u8fd9\u79cd\u65b9\u5f0f\u5f00\u53d1\u8005\u53ef\u4ee5\u5b9e\u73b0\u5982 CircleCropTransformation \u3001 BlurTransformation \u3001 GrayscaleTransformation \u3001 RoundedCornersTransformation \u7b49 transformations \u4e4b\u7c7b\u7684\u6548\u679c\uff1a import androidx.compose.foundation.Image import com.google.accompanist.coil.rememberCoilPainter Image ( painter = rememberCoilPainter ( request = \"https://picsum.photos/300/300\" , requestBuilder = { transformations ( CircleCropTransformation ()) }, ), contentDescription = stringResource ( R . string . image_content_desc ), )","title":"rememberCoilPainter()"},{"location":"third-party-component/accompanist/coil/#_1","text":"\u8be5\u5e93\u5185\u7f6e\u652f\u6301\u56fe\u50cf\u52a0\u8f7d\u8fc7\u7a0b\u4e2d\u7684 \u6de1\u5165\u52a8\u753b \u3002 rememberCoilPainter \u7684\u51fd\u6570\u53c2\u6570 fadeIn:Boolean \u9ed8\u8ba4\u4e3a false \uff0c\u5f53 fadeIn = true \u65f6\uff0c\u4e00\u4e2a\u9ed8\u8ba4\u7684\u6de1\u5165\u52a8\u753b\u5c06\u51fa\u73b0\u5728\u56fe\u7247\u6210\u529f\u52a0\u8f7d\u8fc7\u7a0b\u4e2d\u3002 import androidx.compose.foundation.Image import com.google.accompanist.coil.rememberCoilPainter Image ( painter = rememberCoilPainter ( \"https://picsum.photos/300/300\" , fadeIn = true ), contentDescription = stringResource ( R . string . image_content_desc ), )","title":"\u6de1\u5165\u52a8\u753b"},{"location":"third-party-component/accompanist/coil/#_2","text":"\u6709\u65f6\u5f00\u53d1\u8005\u53ef\u80fd\u5e0c\u671b\u5728\u56fe\u7247\u52a0\u8f7d\u65f6\u663e\u793a\u5360\u4f4d\u56fe\u7247\u6216\u8005\u5728\u56fe\u7247\u52a0\u8f7d\u5931\u8d25\u65f6\u663e\u793a\u5931\u8d25\u63d0\u793a\u56fe\u7247\uff0c rememberCoilPainter() \u8fd4\u56de\u7684 painter \u662f \u7684\u4e00\u4e2a LoadPainter \u5b9e\u4f8b\uff0c ImageLoadState \u6709\u56db\u79cd\u72b6\u6001\uff1a Empty \u3001 Loading \u3001 Success \u548c Error \uff0c\u5206\u522b\u5bf9\u5e94\u7740\u521d\u59cb\u72b6\u6001\u3001\u52a0\u8f7d\u72b6\u6001\u3001\u52a0\u8f7d\u6210\u529f\u548c\u52a0\u8f7d\u5931\u8d25\u3002\u5f00\u53d1\u8005\u53ef\u4ee5\u6839\u636e\u9700\u8981\u663e\u793a\u4e0d\u540c\u7684\u5185\u5bb9\uff1a val painter = rememberCoilPainter ( \"https://picsum.photos/300/300\" ) Box { Image ( painter = painter , contentDescription = stringResource ( R . string . image_content_desc ), ) when ( painter . loadState ) { is ImageLoadState . Loading -> { // Display a circular progress indicator whilst loading CircularProgressIndicator ( Modifier . align ( Alignment . Center )) } is ImageLoadState . Error -> { // If you wish to display some content if the request fails } } }","title":"\u81ea\u5b9a\u4e49\u5185\u5bb9"},{"location":"third-party-component/accompanist/coil/#_3","text":"\u4e3a\u4e86\u652f\u6301 Android Studio \u7684 Composable Previews \u529f\u80fd\uff0c\u5f00\u53d1\u8005\u53ef\u4ee5\u901a\u8fc7 previewPlaceholder \u53c2\u6570\u4f20\u5165\u4e00\u4e2a\u56fe\u7247\u8d44\u6e90 ID \uff0c\u4ee5\u4fbf Android Studio \u9884\u89c8\u5e03\u5c40\u65f6\u6709\u56fe\u7247\u5c55\u793a\uff1a Image ( painter = rememberCoilPainter ( request = \"https://picsum.photos/300/300\" , previewPlaceholder = R . drawable . placeholder , ), contentDescription = stringResource ( R . string . image_content_desc ), ) \u5982\u679c\u5f15\u7528\u7684 drawable \u4ec5\u7528\u4e8e previewPlaceholder \uff0c\u5219\u53ef\u4ee5\u5c06\u5176\u653e\u7f6e\u5728 debug \u6784\u5efa\u53d8\u4f53\u7684\u8d44\u6e90\u4e2d\uff0c\u4f8b\u5982\uff1a app/debug/res/drawable/ \uff0c\u901a\u8fc7\u8fd9\u79cd\u64cd\u4f5c\u5c06 drawable \u6346\u7ed1\u5728\u8c03\u8bd5\u7248\u672c\u4e2d\uff0c\u540c\u65f6\u4e5f\u5c06\u5176\u6392\u9664\u81f3\u53d1\u5e03\u7248\u672c\u5916\u3002","title":"\u9884\u89c8"},{"location":"third-party-component/accompanist/coil/#gif","text":"Accompanist Coil \u901a\u8fc7 Coil \u5185\u7f6e GIF \u652f\u6301\u5b9e\u73b0 GIF \u56fe\u7247\u52a0\u8f7d\u3002\u5177\u4f53\u914d\u7f6e\u53c2\u8003 Coil \u5e93\u7684 \u914d\u7f6e\u8bf4\u660e \u3002","title":"GIF"},{"location":"third-party-component/accompanist/coil/#_4","text":"\u5f00\u53d1\u8005\u53ef\u4ee5\u4f7f\u7528 snapshotFlow() \u6765\u89c2\u5bdf painter.loadState \u7684\u53d8\u5316\u60c5\u51b5\uff0c\u4ee5\u6b64\u5b9e\u73b0\u5bf9\u56fe\u7247\u52a0\u8f7d\u72b6\u6001\u7684\u76d1\u542c\uff0c\u7136\u540e\u6839\u636e\u9700\u8981\u8c03\u6574\u4ee3\u7801\u903b\u8f91\uff1a val painter = rememberCoilPainter ( \"https://image.url\" ) LaunchedEffect ( painter ) { snapshotFlow { painter . loadState } . filter { it . isFinalState () } . collect { result -> // TODO do something with result } } Image ( painter = painter )","title":"\u89c2\u5bdf\u52a0\u8f7d\u72b6\u6001\u53d8\u5316"},{"location":"third-party-component/accompanist/coil/#imageloader","text":"\u5982\u679c\u5f00\u53d1\u8005\u5e0c\u671b\u5728\u6240\u6709 rememberCoilPainter() \u8c03\u7528\u4e2d\u4f7f\u7528\u540c\u4e00\u4e2a\u9ed8\u8ba4\u7684 ImageLoader \uff0c\u5c31\u8bf7\u4f7f\u7528 LocalImageLoader \u672c\u5730\u7ec4\u5408\u3002 \u793a\u4f8b\u5982\u4e0b\uff1a val imageLoader = ImageLoader . Builder ( context ) // customize the ImageLoader as needed . build () CompositionLocalProvider ( LocalImageLoader provides imageLoader ) { // This will automatically use the value of LocalImageLoader Image ( painter = rememberCoilPainter (...) ) } \u66f4\u591a\u6709\u5173\u672c\u5730\u7ec4\u5408\u7684\u4fe1\u606f\uff0c\u8bf7\u53c2\u89c1 \u6b64\u5904 \u3002","title":"\u81ea\u5b9a\u4e49 ImageLoader"},{"location":"third-party-component/accompanist/coil/#_5","text":"repositories { mavenCentral () } dependencies { implementation \"com.google.accompanist:accompanist-coil:<version>\" } Snapshots of the development version are available in [Sonatype's snapshots repository][snap]. These are updated on every commit. Sonatype's snapshots repository \u4e2d\u63d0\u4f9b\u4e86\u5f00\u53d1\u7248\u672c\u7684\u5feb\u7167\u3002\u6bcf\u4e00\u6b21\u63d0\u4ea4\uff0c\u5feb\u7167\u90fd\u4f1a\u66f4\u65b0\u3002","title":"\u4e0b\u8f7d"},{"location":"third-party-component/accompanist/flow_layouts/","text":"\u8fd9\u4e2a\u4eba\u5f88\u61d2\uff0c\u4ec0\u4e48\u90fd\u6ca1\u6709\u7559\u4e0b","title":"Flow layouts"},{"location":"third-party-component/accompanist/glide/","text":"\u8fd9\u4e2a\u4eba\u5f88\u61d2\uff0c\u4ec0\u4e48\u90fd\u6ca1\u6709\u7559\u4e0b","title":"Glide"},{"location":"third-party-component/accompanist/insets/","text":"Jetpack Compose \u7684 Insets \u91c7\u7528\u4e86 View \u7cfb\u7edf\u4e2d Insetter \u7ec4\u4ef6\u5e93\u7684\u8bbe\u8ba1\u7406\u5ff5\uff0c\u4f7f\u5176\u53ef\u4ee5\u5728 composables \u4e2d\u88ab\u4f7f\u7528\u3002 \u7528\u6cd5 \u4e3a\u4e86\u80fd\u5728\u4f60\u7684 composables \u4e2d\u4f7f\u7528 Insets , \u4f60\u9700\u8981\u4f7f\u7528 ProvideWindowInsets \u65b9\u6cd5\u5e76\u5c06\u4f60\u7684\u89c6\u56fe\u5185\u5bb9\u58f0\u660e\u5728\u5c3e\u90e8lambda\u4e2d\u3002\u8fd9\u6b65\u64cd\u4f5c\u901a\u5e38\u8981\u5728\u4f60\u7684composable\u5c42\u7ea7\u7684\u9876\u90e8\u9644\u8fd1\u8fdb\u884c\u3002 setContent { MaterialTheme { ProvideWindowInsets { // your content } } } \u26a0\ufe0f \u4e3a\u4e86\u4f7f\u4f60\u7684 view \u5c42\u7ea7\u80fd\u591f\u83b7\u53d6\u5230 Insets\uff0c \u4f60\u9700\u8981\u786e\u4fdd\u5728\u4f60Activity\u4e2d\u4f7f\u7528 WindowCompat.setDecorFitsSystemWindows(window, false) \u3002\u5982\u679c\u4f60\u8fd8\u60f3\u4e3a\u4f60\u7684\u7cfb\u7edf\u72b6\u6001\u680f\u8bbe\u7f6e\u989c\u8272\uff0c\u53ef\u4ee5\u4f7f\u7528Accompanist\u7ec4\u4ef6\u5e93\u63d0\u4f9b\u7684 \u7cfb\u7edfUI\u63a7\u5236\u5668 \u6765\u5b8c\u6210\u3002 \u901a\u8fc7\u4f7f\u7528 ProvideWindowInsets \u5c06\u5141\u8bb8\u672c\u7ec4\u4ef6\u5728 content \u4e2d\u8bbe\u7f6e\u4e00\u4e2a OnApplyWindowInsetsListener \uff0c\u8fd9\u4e2aListener\u5c06\u4f1a\u88ab\u7528\u6765\u66f4\u65b0 LocalWindowInsets \u8fd9\u4e2a CompositionLocal\u3002 LocalWindowInsets \u6301\u6709\u4e86\u4e00\u4e2a WindowInsets \u5b9e\u4f8b\uff0c\u5176\u4e2d\u5305\u542b\u4e86\u5404\u79cd WindowInsets types \u6570\u503c\u4fe1\u606f\uff0c\u4f8b\u5982\u72b6\u6001\u680f\u3001\u5bfc\u822a\u680f\u3001\u8f93\u5165\u6cd5\u7b49\u3002\u4f60\u901a\u5e38\u53ef\u4ee5\u50cf\u8fd9\u6837\u4f7f\u7528\u8fd9\u4e9b\u6570\u503c\u4fe1\u606f\u3002 Composable fun ImeAvoidingBox () { val insets = LocalWindowInsets . current // \u5207\u8bb0\uff0c\u8fd9\u4e9b\u4fe1\u606f\u90fd\u662fpx\u5355\u4f4d\uff0c\u4f7f\u7528\u65f6\u8981\u6839\u636e\u9700\u6c42\u8f6c\u6362\u5355\u4f4d val imeBottom = with ( LocalDensity . current ) { insets . ime . bottom . toDp () } Box ( Modifier . padding ( bottom = imeBottom )) } \u4f46\u662f\u672c\u7ec4\u4ef6\u540c\u6837\u4e5f\u63d0\u4f9b\u4e86\u4e00\u4e9b\u6613\u4e8e\u4f7f\u7528\u7684Modifier\u3002 Modifiers \u672c\u7ec4\u4ef6\u63d0\u4f9b\u4e86\u4e24\u79cd modifier \u7c7b\u578b\u7528\u4e8e\u8f7b\u677e\u9002\u914d\u7279\u5b9a insets \u7684 padding \u4e0e size. Padding Modifier \u4f7f\u7528 Padding Modifier \u5c06\u5141\u8bb8\u4e3a\u4f60\u7684 composable \u65bd\u52a0 padding\u6765\u9002\u914d\u4e00\u4e9b\u7279\u5b9a\u7684 insets\uff0c\u5f53\u524d\u63d0\u4f9b\u4e86\u5982\u4e0b\u51e0\u79cd\u6269\u5c55\u65b9\u6cd5\u3002 Modifier.statusBarsPadding() Modifier.navigationBarsPadding() Modifier.systemBarsPadding() Modifier.imePadding() Modifier.navigationBarsWithImePadding() \u8fd9\u4e9b\u65b9\u6cd5\u901a\u5e38\u4f1a\u88ab\u7528\u6765\u5c06 composable \u79fb\u51fa\u7cfb\u7edf\u72b6\u6001\u680f\u6216\u5bfc\u822a\u680f\u7b49\uff0c FloatingActionButton \u5c31\u662f\u4e00\u4e2a\u5178\u578b\u7684\u4f8b\u5b50\uff0c\u901a\u5e38\u6211\u4eec\u90fd\u5e0c\u671b\u5c06\u8fd9\u4e2a\u60ac\u6d6e\u6309\u94ae\u79fb\u52a8\u81f3\u7cfb\u7edf\u5bfc\u822a\u680f\u4e0a\u65b9, \u4e0d\u5e0c\u671b\u88ab\u7cfb\u7edf\u5bfc\u822a\u680f\u906e\u76d6\u3002 FloatingActionButton ( onClick = { /* TODO */ }, modifier = Modifier . align ( Alignment . BottomEnd ) . padding ( 16. dp ) // normal 16dp of padding for FABs . navigationBarsPadding () // Move it out from under the nav bar ) { Icon ( imageVector = Icons . Default . Add , contentDescription = null ) } Size Modifier \u901a\u8fc7 Size Modifier \u5c06\u5141\u8bb8\u4e3a\u4f60\u7684 composable \u65bd\u52a0 size \u6765\u9002\u914d\u4e00\u4e9b\u7279\u5b9a\u7684 insets\uff0c\u5f53\u524d\u63d0\u4f9b\u4e86\u5982\u4e0b\u51e0\u79cd\u6269\u5c55\u65b9\u6cd5\u3002 Modifier.statusBarsHeight() Modifier.navigationBarsHeight() Modifier.navigationBarsWidth() \u6211\u95e8\u901a\u5e38\u53ef\u4ee5\u8ba9 composable \u4e3a\u7cfb\u7edf\u680f\u63d0\u4f9b\u80cc\u666f\uff0c\u7c7b\u4f3c\u5982\u4e0b\u3002 Spacer ( Modifier . background ( Color . Black . copy ( alpha = 0.7f )) . statusBarsHeight () // Match the height of the status bar . fillMaxWidth () ) PaddingValues Compose \u63d0\u4f9b\u4e86 PaddingValues \u7684\u7406\u5ff5\uff0c\u8be5\u6570\u636e\u7c7b\u5305\u542b\u7740\u6240\u6709\u8981\u88ab\u65bd\u52a0\u7684 padding \u4fe1\u606f(\u7c7b\u4f3c\u4e8e\u4e00\u4e2a Rect)\u3002\u901a\u5e38\u4f1a\u88ab\u7528\u4e8e\u4e00\u4e9b\u5bb9\u5668\u7c7b\u578b composables\uff0c\u4f8b\u5982\u4e3a LazyColumn \u8bbe\u7f6e\u5185\u5bb9 padding\u3002 \u4f60\u53ef\u80fd\u9700\u8981\u4f7f\u7528\u67d0\u4e2a\u5177\u4f53 Inset \u4fe1\u606f\u4f5c\u4e3a\u5185\u5bb9 padding\uff0c\u6240\u4ee5\u672c\u7ec4\u4ef6\u63d0\u4f9b\u4e86 rememberInsetsPaddingValues() \u6269\u5c55\u65b9\u6cd5\u7528\u4e8e\u5c06 Inset \u8f6c\u5316\u4e3a PaddingValues\uff0c\u4e0b\u9762\u7684\u4f8b\u5b50\u4e2d\u5c31\u83b7\u53d6\u4e86\u7cfb\u7edf\u680fInset\u4fe1\u606f\u3002 LazyColumn ( contentPadding = rememberInsetsPaddingValues ( insets = LocalWindowInsets . current . systemBars , applyTop = true , applyBottom = true , ) ) { // content } \u5bf9\u4e8e\u66f4\u590d\u6742\u7684\u573a\u666f\uff0c\u53ef\u4ee5\u67e5\u9605\u4f8b\u5b50 EdgeToEdgeLazyColumn \u53ef\u611f\u77e5 Inset \u7684 Layouts (insets-ui) \u4e0d\u5e78\u7684\u662f\uff0c\u76ee\u524d\u5927\u591a\u6570 Compose \u6240\u63d0\u4f9b\u7684 Material \u98ce\u683c\u7684 Layout \u8fd8\u4e0d\u652f\u6301\u4f7f\u7528\u5185\u5bb9 padding\uff0c\u8fd9\u610f\u5473\u7740\u4e0b\u9762\u7684\u4ee3\u7801\u53ef\u80fd\u4e0d\u4f1a\u4ea7\u751f\u4e0e\u4f60\u7684\u9884\u671f\u76f8\u540c\u7684\u7ed3\u679c\u3002 // \ud83d\ude25 This likely doesn't do what you want TopAppBar( // content modifier = Modifier.statusBarsPadding() ) \u4e3a\u4e86\u5e94\u5bf9\u8fd9\u79cd\u60c5\u51b5\uff0c\u6211\u4eec\u63d0\u4f9b\u4e86 insets-ui \u8fd9\u4e2a\u5144\u5f1f\u7ec4\u4ef6\u5e93\uff0c\u5176\u4e2d\u5305\u542b\u4e86\u5e38\u7528\u5e03\u5c40\uff0c\u5e76\u589e\u52a0\u4e86\u4e00\u4e2a\u540d\u4e3a contentPadding \u7684\u53c2\u6570\u3002\u4e0b\u9762\u7684\u4f8b\u5b50\u5c31\u662f\u4e3a TopAppBar \u63d0\u4f9b\u72b6\u6001\u680f\u7684Inset\u4fe1\u606f\u4f5c\u4e3a\u5185\u5bb9\u7684 padding\u3002 import com.google.accompanist.insets.ui.TopAppBar TopAppBar ( contentPadding = rememberInsetsPaddingValues ( insets = LocalWindowInsets . current . statusBars , applyStart = true , applyTop = true , applyEnd = true , ) ) { // content } \u8fd9\u4e2a\u5144\u5f1f\u7ec4\u4ef6\u5e93\u8fd8\u63d0\u4f9b\u4e86 Scaffold \u7684\u4fee\u6539\u7248\uff0c\u901a\u8fc7\u5728 content \u4e2d\u7ed8\u5236\u9876\u90e8\u548c\u5e95\u90e8\u680f\uff0c\u66f4\u597d\u5730\u652f\u6301\u8fb9\u9760\u8fb9\u7684\u5e03\u5c40\u3002 Scaffold ( topBar = { // We use TopAppBar from accompanist-insets-ui which allows us to provide // content padding matching the system bars insets. TopAppBar ( title = { Text ( stringResource ( R . string . insets_title_list )) }, backgroundColor = MaterialTheme . colors . surface . copy ( alpha = 0.9f ), contentPadding = rememberInsetsPaddingValues ( LocalWindowInsets . current . statusBars , applyBottom = false , ), ) }, bottomBar = { // We add a spacer as a bottom bar, which is the same height as // the navigation bar Spacer ( Modifier . navigationBarsHeight (). fillMaxWidth ()) }, ) { contentPadding -> // We apply the contentPadding passed to us from the Scaffold Box ( Modifier . padding ( contentPadding )) { // content } } \u6709\u5173\u5e93\u4e2d\u63d0\u4f9b\u7684\u5176\u4ed6\u5e03\u5c40\u7684\u5217\u8868\uff0c\u8bf7\u53c2\u89c1 API \u6587\u6863 \u3002 \ud83d\udea7\u8bd5\u9a8c\u6027\u529f\u80fd \u63a5\u4e0b\u6765\u7684\u529f\u80fd\u8fd8\u5728\u8bd5\u9a8c\u4e2d\uff0c\u9700\u8981\u5f00\u53d1\u8005\u9009\u62e9\u6027\u4f7f\u7528\u3002 Insets\u52a8\u753b\u652f\u6301 \u529f\u80fd\u4ecb\u7ecd \u672c\u7ec4\u4ef6\u5e93\u5f53\u524d\u8bd5\u9a8c\u6027\u652f\u6301 WindowInsetsAnimations \uff0c \u8fd9\u5c06\u5141\u8bb8\u4f60\u7684UI\u5185\u5bb9\u53ef\u4ee5\u6839\u636eInsets\u52a8\u753b\u53d1\u751f\u6539\u53d8\uff0c\u4f8b\u5982\u5f53\u8f6f\u952e\u76d8\u5f39\u51fa\u6216\u5173\u95ed\u65f6\uff0c imePadding() \u6216 navigationBarsWithImePadding() \u5728\u8fd9\u79cd\u573a\u666f\u4e0b\u5c31\u53ef\u4ee5\u88ab\u4f7f\u7528\u4e86\u3002 \u5728 API >= 21 \u7684\u8bbe\u5907\u4e0a\uff0c\u65e0\u8bba WindowInsetsAnimationCompat \u662f\u5426\u5de5\u4f5c\uff0c\u5728\u4efb\u610f\u65f6\u523b\u90fd\u8fdb\u884c\u4f7f\u7528\u3002 \u4e3a\u4e86\u80fd\u591f\u4f7f\u7528Insets\u52a8\u753b\uff0c\u4f60\u9700\u8981\u4e00\u4e2a\u4f7f\u7528 ProvideWindowInsets \u7684\u91cd\u8f7d\u65b9\u6cd5\uff0c\u5e76\u4e14\u8bbe\u7f6e windowInsetsAnimationsEnabled = true \u4f7f\u7528\u65b9\u6cd5 ProvideWindowInsets ( windowInsetsAnimationsEnabled = true ) { // content } \u4f60\u80fd\u591f\u50cf\u8fd9\u6837\u4f7f\u7528 navigationBarsWithImePadding() OutlinedTextField( // other params, modifier = Modifier.navigationBarsWithImePadding() ) \u53ef\u4ee5\u67e5\u9605\u4f8b\u5b50 ImeAnimationSample \u8f6f\u952e\u76d8\u52a8\u753b \u529f\u80fd\u4ecb\u7ecd \u5982\u679c\u4f60\u5e0c\u671b\u4f7f\u7528 Insets \u52a8\u753b\u652f\u6301\u8f6f\u952e\u76d8\u52a8\u753b\uff0c\u4f60\u9700\u8981\u786e\u4fdd\u5728 AndroidManifest \u6e05\u5355\u4e2d\u914d\u7f6e\u5f53\u524d Activity \u7684 windowSoftInputMode \u5c5e\u6027\u4e3a adjustResize \u3002 < activity android : name = \".MyActivity\" android : windowSoftInputMode = \"adjustResize\" > </ activity > windowSoftInputMode \u9ed8\u8ba4\u503c\u5e94\u8be5\u4e5f\u6709\u6548\uff0c\u4f46\u662fCompose\u5f53\u524d\u6ca1\u6709\u8bbe\u7f6e\u5fc5\u8981\u7684\u6807\u8bc6 (\u8be6\u60c5\u770b \u8fd9\u91cc ) \u672c\u7ec4\u4ef6\u5e93\u5df2\u7ecf\u652f\u6301\u901a\u8fc7\u624b\u52bf\u64cd\u4f5c\u6765\u63a7\u5236\u8f6f\u952e\u76d8\uff0c\u8fd9\u5c06\u5141\u8bb8\u4f60\u7684\u53ef\u6eda\u52a8\u7684\u7ec4\u4ef6\u5c06\u8f6f\u952e\u76d8\u62c9\u8fdb\u6216\u62c9\u51fa\u5c4f\u5e55\uff0c\u5bf9\u4e8e\u8fd9\u79cd\u5d4c\u5957\u624b\u52bf\u6ed1\u52a8\u53ef\u4ee5\u4f7f\u7528\u5185\u7f6e\u7684 NestedScrollConnection \u63a5\u53e3\u8fdb\u884c\u5b9e\u73b0\uff0c\u672c\u7ec4\u4ef6\u63d0\u4f9b\u4e86 rememberImeNestedScrollConnection() \u65b9\u6cd5\u76f4\u63a5\u83b7\u53d6\u8fd9\u79cd\u8f6f\u952e\u76d8\u52a8\u753b\u573a\u666f\u7684\u5d4c\u5957\u624b\u52bf\u6ed1\u52a8\u5b9e\u73b0\u7c7b\u3002 \u26a0\ufe0f \u6b64\u529f\u80fd\u4ec5\u5728 API >= 30 \u7684\u8bbe\u5907\u4e0a\u624d\u80fd\u6b63\u5e38\u8fd0\u884c\u3002 \u4f7f\u7528\u65b9\u6cd5 // Here we're using ScrollableColumn, but it also works with LazyColumn, etc. ScrollableColumn ( // We use the nestedScroll modifier, passing in the // the connection from rememberImeNestedScrollConnection() modifier = Modifier . nestedScroll ( connection = rememberImeNestedScrollConnection () ) ) { // list content } \u53ef\u4ee5\u67e5\u9605\u4f8b\u5b50 ImeAnimationSample \u4e0b\u8f7d repositories { mavenCentral () } dependencies { implementation \"com.google.accompanist:accompanist-insets:<version>\" // If using insets-ui implementation \"com.google.accompanist:accompanist-insets-ui:<version>\" } \u6bcf\u4e2a\u7248\u672c\u53ef\u4ee5\u5728 \u5feb\u7167\u4ed3\u5e93 \u4e2d\u88ab\u627e\u5230\uff0c\u6bcf\u6b21\u63d0\u4ea4\u65f6\u90fd\u4f1a\u66f4\u65b0\u3002 \u53ef\u80fd\u51fa\u73b0\u7684\u95ee\u9898 \u5982\u679c\u4f60\u53d1\u73b0\u8fd0\u884c\u65f6\u51fa\u73b0\u4e86\u4e00\u4e9b\u95ee\u9898\uff0c\u8fd9\u91cc\u6709\u4e00\u4e2a\u9519\u8bef\u6e05\u5355\u53ef\u4ee5\u67e5\u9605\u3002 \u786e\u4fdd\u4f60\u5728Activity\u4e2d\u6267\u884c\u4e86 WindowCompat.setDecorFitsSystemWindows(window, false) \u3002\u9664\u975e\u4f60\u8fd9\u4e48\u505a\u4e86\uff0c\u5426\u5219 DecorView \u5c06\u6d88\u8d39\u8fd9\u4e9binsets\uff0c\u4ed6\u4eec\u7684\u4fe1\u606f\u4e0d\u56de\u88ab\u5206\u914d\u5230 content \u4e2d\u3002 \u5982\u679c\u6709\u4ec0\u4e48\u8ddf\u8f6f\u952e\u76d8\u76f8\u5173\u7684\u64cd\u4f5c\uff0c\u786e\u4fdd AndroidManifest \u6e05\u5355\u4e2d\u5f53\u524d Activity \u7684 windowSoftInputMode \u5c5e\u6027\u88ab\u8bbe\u7f6e\u4e3a adjustResize \u3002\u5426\u5219 IME \u7684\u53ef\u89c1\u6027\u53d8\u5316\u5c06\u4e0d\u4f1a\u4f5c\u4e3aInsets \u53d8\u5316\u800c\u53d1\u9001\u3002 \u76f8\u4f3c\u7684\uff0c\u5982\u679c\u4f60\u8bbe\u7f6e android:windowFullscreen \u5c5e\u6027\u4e3a true (\u6216\u4f7f\u7528\u4e86 .Fullscreen \u4e3b\u9898) \u3002\u5f53\u53d1\u73b0 adjustResize \u6ca1\u6709\u6b63\u5e38\u5de5\u4f5c\uff0c\u8bf7 \u67e5\u9605\u6587\u6863 \u4ee5\u4e86\u89e3\u66ff\u4ee3\u65b9\u6848\u3002 \u5982\u679c\u4f60\u5728\u89c6\u56fe\u7cfb\u7edf\u7684\u591a\u4e2a\u5c42\u7ea7\u4e2d(\u540c\u65f6\u5728Activity\u4e0e\u5176\u4e2d\u7684Fragment\u4e2d) \u4f7f\u7528\u4e86 ProvideWindowInsets (\u6216 ViewWindowInsetObserver) \uff0c\u4f60\u9700\u8981\u5173\u95ed Insets \u7684\u6d88\u8d39\u3002\u5f53\u6267\u884c ProvideWindowInsets (\u6216 ViewWindowInsetObserver) \u65f6\u4f1a\u5b8c\u5168\u6d88\u8d39\u6240\u6709\u7ecf\u8fc7\u7684 Insets\u3002\u5728Activity\u4e0e\u5176\u4e2d\u7684Fragment\u540c\u65f6\u4f7f\u7528 ProvideWindowInsets (\u6216 ViewWindowInsetObserver) \u65f6\u610f\u5473\u7740Activity\u5c06\u83b7\u53d6\u5230 Insets\uff0c\u4f46\u662fFragment\u5c06\u4e0d\u56de\uff0c\u4e3a\u4e86\u7981\u7528\u6d88\u8d39\u9700\u8981\u8bbe\u7f6e ProvideWindowInsets \u65b9\u6cd5\u53c2\u6570 consumeWindowInsets = false \u6216\u8005\u4f7f\u7528 ViewWindowInsetObserver.start() \u3002","title":"Insets"},{"location":"third-party-component/accompanist/insets/#_1","text":"\u4e3a\u4e86\u80fd\u5728\u4f60\u7684 composables \u4e2d\u4f7f\u7528 Insets , \u4f60\u9700\u8981\u4f7f\u7528 ProvideWindowInsets \u65b9\u6cd5\u5e76\u5c06\u4f60\u7684\u89c6\u56fe\u5185\u5bb9\u58f0\u660e\u5728\u5c3e\u90e8lambda\u4e2d\u3002\u8fd9\u6b65\u64cd\u4f5c\u901a\u5e38\u8981\u5728\u4f60\u7684composable\u5c42\u7ea7\u7684\u9876\u90e8\u9644\u8fd1\u8fdb\u884c\u3002 setContent { MaterialTheme { ProvideWindowInsets { // your content } } } \u26a0\ufe0f \u4e3a\u4e86\u4f7f\u4f60\u7684 view \u5c42\u7ea7\u80fd\u591f\u83b7\u53d6\u5230 Insets\uff0c \u4f60\u9700\u8981\u786e\u4fdd\u5728\u4f60Activity\u4e2d\u4f7f\u7528 WindowCompat.setDecorFitsSystemWindows(window, false) \u3002\u5982\u679c\u4f60\u8fd8\u60f3\u4e3a\u4f60\u7684\u7cfb\u7edf\u72b6\u6001\u680f\u8bbe\u7f6e\u989c\u8272\uff0c\u53ef\u4ee5\u4f7f\u7528Accompanist\u7ec4\u4ef6\u5e93\u63d0\u4f9b\u7684 \u7cfb\u7edfUI\u63a7\u5236\u5668 \u6765\u5b8c\u6210\u3002 \u901a\u8fc7\u4f7f\u7528 ProvideWindowInsets \u5c06\u5141\u8bb8\u672c\u7ec4\u4ef6\u5728 content \u4e2d\u8bbe\u7f6e\u4e00\u4e2a OnApplyWindowInsetsListener \uff0c\u8fd9\u4e2aListener\u5c06\u4f1a\u88ab\u7528\u6765\u66f4\u65b0 LocalWindowInsets \u8fd9\u4e2a CompositionLocal\u3002 LocalWindowInsets \u6301\u6709\u4e86\u4e00\u4e2a WindowInsets \u5b9e\u4f8b\uff0c\u5176\u4e2d\u5305\u542b\u4e86\u5404\u79cd WindowInsets types \u6570\u503c\u4fe1\u606f\uff0c\u4f8b\u5982\u72b6\u6001\u680f\u3001\u5bfc\u822a\u680f\u3001\u8f93\u5165\u6cd5\u7b49\u3002\u4f60\u901a\u5e38\u53ef\u4ee5\u50cf\u8fd9\u6837\u4f7f\u7528\u8fd9\u4e9b\u6570\u503c\u4fe1\u606f\u3002 Composable fun ImeAvoidingBox () { val insets = LocalWindowInsets . current // \u5207\u8bb0\uff0c\u8fd9\u4e9b\u4fe1\u606f\u90fd\u662fpx\u5355\u4f4d\uff0c\u4f7f\u7528\u65f6\u8981\u6839\u636e\u9700\u6c42\u8f6c\u6362\u5355\u4f4d val imeBottom = with ( LocalDensity . current ) { insets . ime . bottom . toDp () } Box ( Modifier . padding ( bottom = imeBottom )) } \u4f46\u662f\u672c\u7ec4\u4ef6\u540c\u6837\u4e5f\u63d0\u4f9b\u4e86\u4e00\u4e9b\u6613\u4e8e\u4f7f\u7528\u7684Modifier\u3002","title":"\u7528\u6cd5"},{"location":"third-party-component/accompanist/insets/#modifiers","text":"\u672c\u7ec4\u4ef6\u63d0\u4f9b\u4e86\u4e24\u79cd modifier \u7c7b\u578b\u7528\u4e8e\u8f7b\u677e\u9002\u914d\u7279\u5b9a insets \u7684 padding \u4e0e size.","title":"Modifiers"},{"location":"third-party-component/accompanist/insets/#padding-modifier","text":"\u4f7f\u7528 Padding Modifier \u5c06\u5141\u8bb8\u4e3a\u4f60\u7684 composable \u65bd\u52a0 padding\u6765\u9002\u914d\u4e00\u4e9b\u7279\u5b9a\u7684 insets\uff0c\u5f53\u524d\u63d0\u4f9b\u4e86\u5982\u4e0b\u51e0\u79cd\u6269\u5c55\u65b9\u6cd5\u3002 Modifier.statusBarsPadding() Modifier.navigationBarsPadding() Modifier.systemBarsPadding() Modifier.imePadding() Modifier.navigationBarsWithImePadding() \u8fd9\u4e9b\u65b9\u6cd5\u901a\u5e38\u4f1a\u88ab\u7528\u6765\u5c06 composable \u79fb\u51fa\u7cfb\u7edf\u72b6\u6001\u680f\u6216\u5bfc\u822a\u680f\u7b49\uff0c FloatingActionButton \u5c31\u662f\u4e00\u4e2a\u5178\u578b\u7684\u4f8b\u5b50\uff0c\u901a\u5e38\u6211\u4eec\u90fd\u5e0c\u671b\u5c06\u8fd9\u4e2a\u60ac\u6d6e\u6309\u94ae\u79fb\u52a8\u81f3\u7cfb\u7edf\u5bfc\u822a\u680f\u4e0a\u65b9, \u4e0d\u5e0c\u671b\u88ab\u7cfb\u7edf\u5bfc\u822a\u680f\u906e\u76d6\u3002 FloatingActionButton ( onClick = { /* TODO */ }, modifier = Modifier . align ( Alignment . BottomEnd ) . padding ( 16. dp ) // normal 16dp of padding for FABs . navigationBarsPadding () // Move it out from under the nav bar ) { Icon ( imageVector = Icons . Default . Add , contentDescription = null ) }","title":"Padding Modifier"},{"location":"third-party-component/accompanist/insets/#size-modifier","text":"\u901a\u8fc7 Size Modifier \u5c06\u5141\u8bb8\u4e3a\u4f60\u7684 composable \u65bd\u52a0 size \u6765\u9002\u914d\u4e00\u4e9b\u7279\u5b9a\u7684 insets\uff0c\u5f53\u524d\u63d0\u4f9b\u4e86\u5982\u4e0b\u51e0\u79cd\u6269\u5c55\u65b9\u6cd5\u3002 Modifier.statusBarsHeight() Modifier.navigationBarsHeight() Modifier.navigationBarsWidth() \u6211\u95e8\u901a\u5e38\u53ef\u4ee5\u8ba9 composable \u4e3a\u7cfb\u7edf\u680f\u63d0\u4f9b\u80cc\u666f\uff0c\u7c7b\u4f3c\u5982\u4e0b\u3002 Spacer ( Modifier . background ( Color . Black . copy ( alpha = 0.7f )) . statusBarsHeight () // Match the height of the status bar . fillMaxWidth () )","title":"Size Modifier"},{"location":"third-party-component/accompanist/insets/#paddingvalues","text":"Compose \u63d0\u4f9b\u4e86 PaddingValues \u7684\u7406\u5ff5\uff0c\u8be5\u6570\u636e\u7c7b\u5305\u542b\u7740\u6240\u6709\u8981\u88ab\u65bd\u52a0\u7684 padding \u4fe1\u606f(\u7c7b\u4f3c\u4e8e\u4e00\u4e2a Rect)\u3002\u901a\u5e38\u4f1a\u88ab\u7528\u4e8e\u4e00\u4e9b\u5bb9\u5668\u7c7b\u578b composables\uff0c\u4f8b\u5982\u4e3a LazyColumn \u8bbe\u7f6e\u5185\u5bb9 padding\u3002 \u4f60\u53ef\u80fd\u9700\u8981\u4f7f\u7528\u67d0\u4e2a\u5177\u4f53 Inset \u4fe1\u606f\u4f5c\u4e3a\u5185\u5bb9 padding\uff0c\u6240\u4ee5\u672c\u7ec4\u4ef6\u63d0\u4f9b\u4e86 rememberInsetsPaddingValues() \u6269\u5c55\u65b9\u6cd5\u7528\u4e8e\u5c06 Inset \u8f6c\u5316\u4e3a PaddingValues\uff0c\u4e0b\u9762\u7684\u4f8b\u5b50\u4e2d\u5c31\u83b7\u53d6\u4e86\u7cfb\u7edf\u680fInset\u4fe1\u606f\u3002 LazyColumn ( contentPadding = rememberInsetsPaddingValues ( insets = LocalWindowInsets . current . systemBars , applyTop = true , applyBottom = true , ) ) { // content } \u5bf9\u4e8e\u66f4\u590d\u6742\u7684\u573a\u666f\uff0c\u53ef\u4ee5\u67e5\u9605\u4f8b\u5b50 EdgeToEdgeLazyColumn","title":"PaddingValues"},{"location":"third-party-component/accompanist/insets/#inset-layouts-insets-ui","text":"\u4e0d\u5e78\u7684\u662f\uff0c\u76ee\u524d\u5927\u591a\u6570 Compose \u6240\u63d0\u4f9b\u7684 Material \u98ce\u683c\u7684 Layout \u8fd8\u4e0d\u652f\u6301\u4f7f\u7528\u5185\u5bb9 padding\uff0c\u8fd9\u610f\u5473\u7740\u4e0b\u9762\u7684\u4ee3\u7801\u53ef\u80fd\u4e0d\u4f1a\u4ea7\u751f\u4e0e\u4f60\u7684\u9884\u671f\u76f8\u540c\u7684\u7ed3\u679c\u3002 // \ud83d\ude25 This likely doesn't do what you want TopAppBar( // content modifier = Modifier.statusBarsPadding() ) \u4e3a\u4e86\u5e94\u5bf9\u8fd9\u79cd\u60c5\u51b5\uff0c\u6211\u4eec\u63d0\u4f9b\u4e86 insets-ui \u8fd9\u4e2a\u5144\u5f1f\u7ec4\u4ef6\u5e93\uff0c\u5176\u4e2d\u5305\u542b\u4e86\u5e38\u7528\u5e03\u5c40\uff0c\u5e76\u589e\u52a0\u4e86\u4e00\u4e2a\u540d\u4e3a contentPadding \u7684\u53c2\u6570\u3002\u4e0b\u9762\u7684\u4f8b\u5b50\u5c31\u662f\u4e3a TopAppBar \u63d0\u4f9b\u72b6\u6001\u680f\u7684Inset\u4fe1\u606f\u4f5c\u4e3a\u5185\u5bb9\u7684 padding\u3002 import com.google.accompanist.insets.ui.TopAppBar TopAppBar ( contentPadding = rememberInsetsPaddingValues ( insets = LocalWindowInsets . current . statusBars , applyStart = true , applyTop = true , applyEnd = true , ) ) { // content } \u8fd9\u4e2a\u5144\u5f1f\u7ec4\u4ef6\u5e93\u8fd8\u63d0\u4f9b\u4e86 Scaffold \u7684\u4fee\u6539\u7248\uff0c\u901a\u8fc7\u5728 content \u4e2d\u7ed8\u5236\u9876\u90e8\u548c\u5e95\u90e8\u680f\uff0c\u66f4\u597d\u5730\u652f\u6301\u8fb9\u9760\u8fb9\u7684\u5e03\u5c40\u3002 Scaffold ( topBar = { // We use TopAppBar from accompanist-insets-ui which allows us to provide // content padding matching the system bars insets. TopAppBar ( title = { Text ( stringResource ( R . string . insets_title_list )) }, backgroundColor = MaterialTheme . colors . surface . copy ( alpha = 0.9f ), contentPadding = rememberInsetsPaddingValues ( LocalWindowInsets . current . statusBars , applyBottom = false , ), ) }, bottomBar = { // We add a spacer as a bottom bar, which is the same height as // the navigation bar Spacer ( Modifier . navigationBarsHeight (). fillMaxWidth ()) }, ) { contentPadding -> // We apply the contentPadding passed to us from the Scaffold Box ( Modifier . padding ( contentPadding )) { // content } } \u6709\u5173\u5e93\u4e2d\u63d0\u4f9b\u7684\u5176\u4ed6\u5e03\u5c40\u7684\u5217\u8868\uff0c\u8bf7\u53c2\u89c1 API \u6587\u6863 \u3002","title":"\u53ef\u611f\u77e5 Inset \u7684 Layouts (insets-ui)"},{"location":"third-party-component/accompanist/insets/#_2","text":"\u63a5\u4e0b\u6765\u7684\u529f\u80fd\u8fd8\u5728\u8bd5\u9a8c\u4e2d\uff0c\u9700\u8981\u5f00\u53d1\u8005\u9009\u62e9\u6027\u4f7f\u7528\u3002","title":"\ud83d\udea7\u8bd5\u9a8c\u6027\u529f\u80fd"},{"location":"third-party-component/accompanist/insets/#insets","text":"","title":"Insets\u52a8\u753b\u652f\u6301"},{"location":"third-party-component/accompanist/insets/#_3","text":"\u672c\u7ec4\u4ef6\u5e93\u5f53\u524d\u8bd5\u9a8c\u6027\u652f\u6301 WindowInsetsAnimations \uff0c \u8fd9\u5c06\u5141\u8bb8\u4f60\u7684UI\u5185\u5bb9\u53ef\u4ee5\u6839\u636eInsets\u52a8\u753b\u53d1\u751f\u6539\u53d8\uff0c\u4f8b\u5982\u5f53\u8f6f\u952e\u76d8\u5f39\u51fa\u6216\u5173\u95ed\u65f6\uff0c imePadding() \u6216 navigationBarsWithImePadding() \u5728\u8fd9\u79cd\u573a\u666f\u4e0b\u5c31\u53ef\u4ee5\u88ab\u4f7f\u7528\u4e86\u3002 \u5728 API >= 21 \u7684\u8bbe\u5907\u4e0a\uff0c\u65e0\u8bba WindowInsetsAnimationCompat \u662f\u5426\u5de5\u4f5c\uff0c\u5728\u4efb\u610f\u65f6\u523b\u90fd\u8fdb\u884c\u4f7f\u7528\u3002 \u4e3a\u4e86\u80fd\u591f\u4f7f\u7528Insets\u52a8\u753b\uff0c\u4f60\u9700\u8981\u4e00\u4e2a\u4f7f\u7528 ProvideWindowInsets \u7684\u91cd\u8f7d\u65b9\u6cd5\uff0c\u5e76\u4e14\u8bbe\u7f6e windowInsetsAnimationsEnabled = true","title":"\u529f\u80fd\u4ecb\u7ecd"},{"location":"third-party-component/accompanist/insets/#_4","text":"ProvideWindowInsets ( windowInsetsAnimationsEnabled = true ) { // content } \u4f60\u80fd\u591f\u50cf\u8fd9\u6837\u4f7f\u7528 navigationBarsWithImePadding() OutlinedTextField( // other params, modifier = Modifier.navigationBarsWithImePadding() ) \u53ef\u4ee5\u67e5\u9605\u4f8b\u5b50 ImeAnimationSample","title":"\u4f7f\u7528\u65b9\u6cd5"},{"location":"third-party-component/accompanist/insets/#_5","text":"","title":"\u8f6f\u952e\u76d8\u52a8\u753b"},{"location":"third-party-component/accompanist/insets/#_6","text":"\u5982\u679c\u4f60\u5e0c\u671b\u4f7f\u7528 Insets \u52a8\u753b\u652f\u6301\u8f6f\u952e\u76d8\u52a8\u753b\uff0c\u4f60\u9700\u8981\u786e\u4fdd\u5728 AndroidManifest \u6e05\u5355\u4e2d\u914d\u7f6e\u5f53\u524d Activity \u7684 windowSoftInputMode \u5c5e\u6027\u4e3a adjustResize \u3002 < activity android : name = \".MyActivity\" android : windowSoftInputMode = \"adjustResize\" > </ activity > windowSoftInputMode \u9ed8\u8ba4\u503c\u5e94\u8be5\u4e5f\u6709\u6548\uff0c\u4f46\u662fCompose\u5f53\u524d\u6ca1\u6709\u8bbe\u7f6e\u5fc5\u8981\u7684\u6807\u8bc6 (\u8be6\u60c5\u770b \u8fd9\u91cc ) \u672c\u7ec4\u4ef6\u5e93\u5df2\u7ecf\u652f\u6301\u901a\u8fc7\u624b\u52bf\u64cd\u4f5c\u6765\u63a7\u5236\u8f6f\u952e\u76d8\uff0c\u8fd9\u5c06\u5141\u8bb8\u4f60\u7684\u53ef\u6eda\u52a8\u7684\u7ec4\u4ef6\u5c06\u8f6f\u952e\u76d8\u62c9\u8fdb\u6216\u62c9\u51fa\u5c4f\u5e55\uff0c\u5bf9\u4e8e\u8fd9\u79cd\u5d4c\u5957\u624b\u52bf\u6ed1\u52a8\u53ef\u4ee5\u4f7f\u7528\u5185\u7f6e\u7684 NestedScrollConnection \u63a5\u53e3\u8fdb\u884c\u5b9e\u73b0\uff0c\u672c\u7ec4\u4ef6\u63d0\u4f9b\u4e86 rememberImeNestedScrollConnection() \u65b9\u6cd5\u76f4\u63a5\u83b7\u53d6\u8fd9\u79cd\u8f6f\u952e\u76d8\u52a8\u753b\u573a\u666f\u7684\u5d4c\u5957\u624b\u52bf\u6ed1\u52a8\u5b9e\u73b0\u7c7b\u3002 \u26a0\ufe0f \u6b64\u529f\u80fd\u4ec5\u5728 API >= 30 \u7684\u8bbe\u5907\u4e0a\u624d\u80fd\u6b63\u5e38\u8fd0\u884c\u3002","title":"\u529f\u80fd\u4ecb\u7ecd"},{"location":"third-party-component/accompanist/insets/#_7","text":"// Here we're using ScrollableColumn, but it also works with LazyColumn, etc. ScrollableColumn ( // We use the nestedScroll modifier, passing in the // the connection from rememberImeNestedScrollConnection() modifier = Modifier . nestedScroll ( connection = rememberImeNestedScrollConnection () ) ) { // list content } \u53ef\u4ee5\u67e5\u9605\u4f8b\u5b50 ImeAnimationSample","title":"\u4f7f\u7528\u65b9\u6cd5"},{"location":"third-party-component/accompanist/insets/#_8","text":"repositories { mavenCentral () } dependencies { implementation \"com.google.accompanist:accompanist-insets:<version>\" // If using insets-ui implementation \"com.google.accompanist:accompanist-insets-ui:<version>\" } \u6bcf\u4e2a\u7248\u672c\u53ef\u4ee5\u5728 \u5feb\u7167\u4ed3\u5e93 \u4e2d\u88ab\u627e\u5230\uff0c\u6bcf\u6b21\u63d0\u4ea4\u65f6\u90fd\u4f1a\u66f4\u65b0\u3002","title":"\u4e0b\u8f7d"},{"location":"third-party-component/accompanist/insets/#_9","text":"\u5982\u679c\u4f60\u53d1\u73b0\u8fd0\u884c\u65f6\u51fa\u73b0\u4e86\u4e00\u4e9b\u95ee\u9898\uff0c\u8fd9\u91cc\u6709\u4e00\u4e2a\u9519\u8bef\u6e05\u5355\u53ef\u4ee5\u67e5\u9605\u3002 \u786e\u4fdd\u4f60\u5728Activity\u4e2d\u6267\u884c\u4e86 WindowCompat.setDecorFitsSystemWindows(window, false) \u3002\u9664\u975e\u4f60\u8fd9\u4e48\u505a\u4e86\uff0c\u5426\u5219 DecorView \u5c06\u6d88\u8d39\u8fd9\u4e9binsets\uff0c\u4ed6\u4eec\u7684\u4fe1\u606f\u4e0d\u56de\u88ab\u5206\u914d\u5230 content \u4e2d\u3002 \u5982\u679c\u6709\u4ec0\u4e48\u8ddf\u8f6f\u952e\u76d8\u76f8\u5173\u7684\u64cd\u4f5c\uff0c\u786e\u4fdd AndroidManifest \u6e05\u5355\u4e2d\u5f53\u524d Activity \u7684 windowSoftInputMode \u5c5e\u6027\u88ab\u8bbe\u7f6e\u4e3a adjustResize \u3002\u5426\u5219 IME \u7684\u53ef\u89c1\u6027\u53d8\u5316\u5c06\u4e0d\u4f1a\u4f5c\u4e3aInsets \u53d8\u5316\u800c\u53d1\u9001\u3002 \u76f8\u4f3c\u7684\uff0c\u5982\u679c\u4f60\u8bbe\u7f6e android:windowFullscreen \u5c5e\u6027\u4e3a true (\u6216\u4f7f\u7528\u4e86 .Fullscreen \u4e3b\u9898) \u3002\u5f53\u53d1\u73b0 adjustResize \u6ca1\u6709\u6b63\u5e38\u5de5\u4f5c\uff0c\u8bf7 \u67e5\u9605\u6587\u6863 \u4ee5\u4e86\u89e3\u66ff\u4ee3\u65b9\u6848\u3002 \u5982\u679c\u4f60\u5728\u89c6\u56fe\u7cfb\u7edf\u7684\u591a\u4e2a\u5c42\u7ea7\u4e2d(\u540c\u65f6\u5728Activity\u4e0e\u5176\u4e2d\u7684Fragment\u4e2d) \u4f7f\u7528\u4e86 ProvideWindowInsets (\u6216 ViewWindowInsetObserver) \uff0c\u4f60\u9700\u8981\u5173\u95ed Insets \u7684\u6d88\u8d39\u3002\u5f53\u6267\u884c ProvideWindowInsets (\u6216 ViewWindowInsetObserver) \u65f6\u4f1a\u5b8c\u5168\u6d88\u8d39\u6240\u6709\u7ecf\u8fc7\u7684 Insets\u3002\u5728Activity\u4e0e\u5176\u4e2d\u7684Fragment\u540c\u65f6\u4f7f\u7528 ProvideWindowInsets (\u6216 ViewWindowInsetObserver) \u65f6\u610f\u5473\u7740Activity\u5c06\u83b7\u53d6\u5230 Insets\uff0c\u4f46\u662fFragment\u5c06\u4e0d\u56de\uff0c\u4e3a\u4e86\u7981\u7528\u6d88\u8d39\u9700\u8981\u8bbe\u7f6e ProvideWindowInsets \u65b9\u6cd5\u53c2\u6570 consumeWindowInsets = false \u6216\u8005\u4f7f\u7528 ViewWindowInsetObserver.start() \u3002","title":"\u53ef\u80fd\u51fa\u73b0\u7684\u95ee\u9898"},{"location":"third-party-component/accompanist/overview/","text":"Accompanist \u662f\u4ec0\u4e48\uff1f Accompanist \u662f\u4e00\u7ec4\u65e8\u5728\u6269\u5145 Jetpack Compose \u529f\u80fd\u7684\u7b2c\u4e09\u65b9\u5e93\u96c6\u5408\uff0c\u8fd9\u4e2a\u5e93\u4e2d\u6240\u63d0\u4f9b\u7684\u529f\u80fd\u662f\u5f00\u53d1\u8005\u666e\u904d\u9700\u8981\u7684\u3002\u76ee\u524d Accompanist \u4e2d\u5305\u542b\u7684\u5b50\u5e93\u6709\uff1a \ud83d\uddbc\ufe0f \u56fe\u7247\u52a0\u8f7d \u4e00\u4e9b\u80fd\u591f\u652f\u6301\u5728 Jetpack Compose \u4e2d\u4f7f\u7528\u76ee\u524d\u6d41\u884c\u56fe\u7247\u52a0\u8f7d\u5e93\u7684\u7b2c\u4e09\u65b9\u652f\u6301\u5e93\uff1a\u4f8b\u5982 Coil \u4e0e Glide \ud83d\udcd0 \u63d2\u56fe \u4e00\u4e2a\u4e3a Jetpack Compose \u5e26\u6765 WindowInsets \u652f\u6301\u7684\u5e93\u3002 \ud83c\udf6b \u7cfb\u7edfUI\u63a7\u5236\u5668 \u4e00\u4e2a\u7b80\u5355\u6613\u7528\u7684\u7cfb\u7edfUI\u63a7\u5236\u5e93\uff0c\u7528\u4e8e\u66f4\u65b0 Jetpack Compose \u7684\u7cfb\u7edfUI(\u72b6\u6001\u548c\u5bfc\u822a\u680f)\u7684\u989c\u8272\u3002 \ud83c\udfa8 AppCompat \u4e3b\u9898\u9002\u914d\u5668 \u4e00\u4e2a\u80fd\u591f\u5728 Jetpack Compose \u4e2d\u590d\u7528\u4f20\u7edf AppCompat XML \u4e3b\u9898\u7684\u5e93\u3002 \ud83d\udcd6 \u5206\u9875 \u4e00\u4e2a\u4e3a Jetpack Compose \u63d0\u4f9b\u5206\u9875\u5e03\u5c40\u7684\u5e93\uff0c\u7c7b\u4f3c\u4e8e Android \u7684 ViewPager\u3002 \ud83c\udf0a \u6d41\u5f0f\u5e03\u5c40 \u4e00\u4e2a\u4e3a Jetpack Compose \u6dfb\u52a0\u7c7b\u4f3c \"flexbox \"\u5e03\u5c40\u7684\u5e93\u3002 \u2b06\ufe0f \u6ed1\u52a8\u5237\u65b0 \u4e00\u4e2a\u4e3a Jetpack Compose \u63d0\u4f9b\u4e86\u6ed1\u52a8\u5237\u65b0Layout\u7684\u5e93\uff0c\u7c7b\u4f3c\u4e8e Android \u7684 SwipeRefreshLayout\u3002 \u5173\u4e8e\u66f4\u65b0 Jetpack Compose \u662f\u4e00\u4e2a\u5feb\u901f\u53d1\u5c55\u7684\u9879\u76ee\uff0c\u6211\u4eec\u7684\u76ee\u6807\u8ba9\u8fd9\u4e9b\u5e93\u7684\u7248\u672c\u66f4\u65b0\u5c3d\u5feb\u4e0e Jetpack Compose \u6700\u65b0\u7248\u672c\u4fdd\u6301\u540c\u6b65\u3002\u6bcf\u4e2a\u5b50\u5e93\u7684\u7248\u672c\u90fd\u63cf\u8ff0\u4e86\u5176\u6240\u4f9d\u8d56\u7684 Jetpack Compose \u7248\u672c\u3002 \u5173\u4e8e\u672a\u6765 \u8fd9\u4e9b\u5b50\u5e93\u6240\u63d0\u4f9b\u7684\u4efb\u4f55\u529f\u80fd\u5728\u672a\u6765\u53ef\u80fd\u90fd\u4f1a\u8fc7\u65f6\uff0c\u5230\u90a3\u65f6\u4ed6\u4eec\u53ef\u80fd\u5c06\u88ab\u5e9f\u5f03\u3002\u5c4a\u65f6\uff0c\u6211\u4eec\u5c06\u4f1a\u5c3d\u53ef\u80fd\u5730\u63d0\u4f9b\u4e00\u4e2a\u8fc1\u79fb\u8def\u7ebf\u4ee5\u53d6\u4ee3\u4efb\u4f55\u529f\u80fd\u3002 \u5173\u4e8e\u5feb\u7167 \u76ee\u524dAccompanist\u7684\u7248\u672c\u5feb\u7167\u662f\u53ef\u7528\u7684\uff0c\u5b83\u5c06\u8ddf\u8e2a\u6700\u65b0\u7684\u63d0\u4ea4\u3002 \u70b9\u51fb\u67e5\u770b\u66f4\u591a\u4fe1\u606f \u3002 \u5173\u4e8e\u540d\u5b57 \u7531\u4e8e\u8fd9\u4e2a\u5e93\u662f\u56f4\u7ed5\u7740 Jetpack Compose \u6dfb\u52a0\u7684\u4e00\u4e9b\u5b9e\u7528\u5de5\u5177\u3002Compose\u5728\u82f1\u8bed\u4e2d\u6709\u53e6\u4e00\u542b\u4e49\u4e3a\u4f5c\u66f2\uff0c\u4f5c\u66f2\u662f\u7531\u4f5c\u66f2\u5bb6\u5b8c\u6210\u7684\uff0c\u800c\u8fd9\u4e2a\u5e93\u662f\u7528\u6765\u652f\u6301\u4f5c\u66f2\u5bb6\u5b8c\u6210\u4f5c\u66f2\u7684\uff0c\u6240\u4ee5\u4f34\u594f\u8005\u662f\u4e00\u4e2a\u597d\u540d\u5b57\u3002 \u5173\u4e8e\u8d21\u732e \u6211\u4eec\u5c06\u5f88\u4e50\u610f\u5ba1\u67e5\u4efb\u4f55PR\u8bf7\u6c42\u3002\u4f46\u8bf7\u786e\u4fdd\u9996\u5148\u9605\u8bfb \u8d21\u732e \u9875\u9762\u3002 License Copyright 2020 The Android Open Source Project Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License. You may obtain a copy of the License at https://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.","title":"\u6982\u8ff0"},{"location":"third-party-component/accompanist/overview/#accompanist","text":"Accompanist \u662f\u4e00\u7ec4\u65e8\u5728\u6269\u5145 Jetpack Compose \u529f\u80fd\u7684\u7b2c\u4e09\u65b9\u5e93\u96c6\u5408\uff0c\u8fd9\u4e2a\u5e93\u4e2d\u6240\u63d0\u4f9b\u7684\u529f\u80fd\u662f\u5f00\u53d1\u8005\u666e\u904d\u9700\u8981\u7684\u3002\u76ee\u524d Accompanist \u4e2d\u5305\u542b\u7684\u5b50\u5e93\u6709\uff1a","title":"Accompanist \u662f\u4ec0\u4e48\uff1f"},{"location":"third-party-component/accompanist/overview/#_1","text":"\u4e00\u4e9b\u80fd\u591f\u652f\u6301\u5728 Jetpack Compose \u4e2d\u4f7f\u7528\u76ee\u524d\u6d41\u884c\u56fe\u7247\u52a0\u8f7d\u5e93\u7684\u7b2c\u4e09\u65b9\u652f\u6301\u5e93\uff1a\u4f8b\u5982 Coil \u4e0e Glide","title":"\ud83d\uddbc\ufe0f  \u56fe\u7247\u52a0\u8f7d"},{"location":"third-party-component/accompanist/overview/#_2","text":"\u4e00\u4e2a\u4e3a Jetpack Compose \u5e26\u6765 WindowInsets \u652f\u6301\u7684\u5e93\u3002","title":"\ud83d\udcd0  \u63d2\u56fe"},{"location":"third-party-component/accompanist/overview/#ui","text":"\u4e00\u4e2a\u7b80\u5355\u6613\u7528\u7684\u7cfb\u7edfUI\u63a7\u5236\u5e93\uff0c\u7528\u4e8e\u66f4\u65b0 Jetpack Compose \u7684\u7cfb\u7edfUI(\u72b6\u6001\u548c\u5bfc\u822a\u680f)\u7684\u989c\u8272\u3002","title":"\ud83c\udf6b  \u7cfb\u7edfUI\u63a7\u5236\u5668"},{"location":"third-party-component/accompanist/overview/#appcompat","text":"\u4e00\u4e2a\u80fd\u591f\u5728 Jetpack Compose \u4e2d\u590d\u7528\u4f20\u7edf AppCompat XML \u4e3b\u9898\u7684\u5e93\u3002","title":"\ud83c\udfa8  AppCompat \u4e3b\u9898\u9002\u914d\u5668"},{"location":"third-party-component/accompanist/overview/#_3","text":"\u4e00\u4e2a\u4e3a Jetpack Compose \u63d0\u4f9b\u5206\u9875\u5e03\u5c40\u7684\u5e93\uff0c\u7c7b\u4f3c\u4e8e Android \u7684 ViewPager\u3002","title":"\ud83d\udcd6  \u5206\u9875"},{"location":"third-party-component/accompanist/overview/#_4","text":"\u4e00\u4e2a\u4e3a Jetpack Compose \u6dfb\u52a0\u7c7b\u4f3c \"flexbox \"\u5e03\u5c40\u7684\u5e93\u3002","title":"\ud83c\udf0a  \u6d41\u5f0f\u5e03\u5c40"},{"location":"third-party-component/accompanist/overview/#_5","text":"\u4e00\u4e2a\u4e3a Jetpack Compose \u63d0\u4f9b\u4e86\u6ed1\u52a8\u5237\u65b0Layout\u7684\u5e93\uff0c\u7c7b\u4f3c\u4e8e Android \u7684 SwipeRefreshLayout\u3002","title":"\u2b06\ufe0f  \u6ed1\u52a8\u5237\u65b0"},{"location":"third-party-component/accompanist/overview/#_6","text":"Jetpack Compose \u662f\u4e00\u4e2a\u5feb\u901f\u53d1\u5c55\u7684\u9879\u76ee\uff0c\u6211\u4eec\u7684\u76ee\u6807\u8ba9\u8fd9\u4e9b\u5e93\u7684\u7248\u672c\u66f4\u65b0\u5c3d\u5feb\u4e0e Jetpack Compose \u6700\u65b0\u7248\u672c\u4fdd\u6301\u540c\u6b65\u3002\u6bcf\u4e2a\u5b50\u5e93\u7684\u7248\u672c\u90fd\u63cf\u8ff0\u4e86\u5176\u6240\u4f9d\u8d56\u7684 Jetpack Compose \u7248\u672c\u3002","title":"\u5173\u4e8e\u66f4\u65b0"},{"location":"third-party-component/accompanist/overview/#_7","text":"\u8fd9\u4e9b\u5b50\u5e93\u6240\u63d0\u4f9b\u7684\u4efb\u4f55\u529f\u80fd\u5728\u672a\u6765\u53ef\u80fd\u90fd\u4f1a\u8fc7\u65f6\uff0c\u5230\u90a3\u65f6\u4ed6\u4eec\u53ef\u80fd\u5c06\u88ab\u5e9f\u5f03\u3002\u5c4a\u65f6\uff0c\u6211\u4eec\u5c06\u4f1a\u5c3d\u53ef\u80fd\u5730\u63d0\u4f9b\u4e00\u4e2a\u8fc1\u79fb\u8def\u7ebf\u4ee5\u53d6\u4ee3\u4efb\u4f55\u529f\u80fd\u3002","title":"\u5173\u4e8e\u672a\u6765"},{"location":"third-party-component/accompanist/overview/#_8","text":"\u76ee\u524dAccompanist\u7684\u7248\u672c\u5feb\u7167\u662f\u53ef\u7528\u7684\uff0c\u5b83\u5c06\u8ddf\u8e2a\u6700\u65b0\u7684\u63d0\u4ea4\u3002 \u70b9\u51fb\u67e5\u770b\u66f4\u591a\u4fe1\u606f \u3002","title":"\u5173\u4e8e\u5feb\u7167"},{"location":"third-party-component/accompanist/overview/#_9","text":"\u7531\u4e8e\u8fd9\u4e2a\u5e93\u662f\u56f4\u7ed5\u7740 Jetpack Compose \u6dfb\u52a0\u7684\u4e00\u4e9b\u5b9e\u7528\u5de5\u5177\u3002Compose\u5728\u82f1\u8bed\u4e2d\u6709\u53e6\u4e00\u542b\u4e49\u4e3a\u4f5c\u66f2\uff0c\u4f5c\u66f2\u662f\u7531\u4f5c\u66f2\u5bb6\u5b8c\u6210\u7684\uff0c\u800c\u8fd9\u4e2a\u5e93\u662f\u7528\u6765\u652f\u6301\u4f5c\u66f2\u5bb6\u5b8c\u6210\u4f5c\u66f2\u7684\uff0c\u6240\u4ee5\u4f34\u594f\u8005\u662f\u4e00\u4e2a\u597d\u540d\u5b57\u3002","title":"\u5173\u4e8e\u540d\u5b57"},{"location":"third-party-component/accompanist/overview/#_10","text":"\u6211\u4eec\u5c06\u5f88\u4e50\u610f\u5ba1\u67e5\u4efb\u4f55PR\u8bf7\u6c42\u3002\u4f46\u8bf7\u786e\u4fdd\u9996\u5148\u9605\u8bfb \u8d21\u732e \u9875\u9762\u3002","title":"\u5173\u4e8e\u8d21\u732e"},{"location":"third-party-component/accompanist/overview/#license","text":"Copyright 2020 The Android Open Source Project Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License. You may obtain a copy of the License at https://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.","title":"License"},{"location":"third-party-component/accompanist/pager_layouts/","text":"\u8fd9\u4e2a\u4eba\u5f88\u61d2\uff0c\u4ec0\u4e48\u90fd\u6ca1\u6709\u7559\u4e0b","title":"Pager layouts"},{"location":"third-party-component/accompanist/swipe_refresh/","text":"\u8fd9\u4e2a\u4eba\u5f88\u61d2\uff0c\u4ec0\u4e48\u90fd\u6ca1\u6709\u7559\u4e0b","title":"Swipe Refresh"},{"location":"third-party-component/accompanist/system_ui_controller/","text":"\u8fd9\u4e2a\u4eba\u5f88\u61d2\uff0c\u4ec0\u4e48\u90fd\u6ca1\u6709\u7559\u4e0b","title":"System UI Controller"}]}